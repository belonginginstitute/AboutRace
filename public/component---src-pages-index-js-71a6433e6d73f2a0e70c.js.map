{"version":3,"sources":["webpack:///./src/components/Title.js","webpack:///./src/components/SVGChevron.js","webpack:///./src/components/ThemeCard/SubThemeCard.js","webpack:///./src/components/ThemeCard/index.js","webpack:///./src/components/rccard.js","webpack:///./src/components/Filter.js","webpack:///./src/pages/index.js","webpack:///./src/gradients.js","webpack:///./src/components/allClips.js"],"names":["styled_components_browser_esm","b","div","withConfig","displayName","n","l","o","p","d","components_SVGChevron","_ref","color","rotate","react_default","a","createElement","xmlns","viewBox","fill","transform","s","u","m","Container","Object","Link","Row","SubThemeCard_Title","colors","c","props","Description","ArrowContainer","SubThemeCard_Arrow","SVGArrow","ThemeCard_SubThemeCard","render","data","this","title","name","indexOf","split","description","value","link","kebabCase_default","href","dangerouslySetInnerHTML","__html","Component","ThemeCard_Container","gradient","MainImage","background","Info","ThemeCard_Title","ThemeCard_Description","ChevronContainer","open","ThemeCard_Chevron","SubThemes","ThemeCard_Row","FirstRow","components_ThemeCard","ThemeCard","_this","_React$Component","call","state","_this2","_this$props","_data$relationships$f","relationships","field_theme_image","localFile","childImageSharp","resolutions","height","width","src","processed","subthemes","h","onClick","setState","map","key","rccard_RCCard","slug","gatsby_browser_entry","to","className","style","type","backgroundImage","imgSrc","backgroundSize","backgroundPosition","children","rccard","FLEX","BASE_CARD_WIDTH","Filter_Row","Element","selected","Filter_Title","components_Filter","onSelected","t","react","P","q","i","r","A","F","j","O","D","M","280","e","HomeBackground","styled_components__WEBPACK_IMPORTED_MODULE_2__","__webpack_exports__","default","location","react__WEBPACK_IMPORTED_MODULE_0___default","_components__WEBPACK_IMPORTED_MODULE_3__","allTaxonomyTermThemes","edges","_ref2","node","_gradients__WEBPACK_IMPORTED_MODULE_4___default","query","module","exports","95","ClipCard","ClipCaption","ClipPoster","Clip","clip","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","textDecoration","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_4___default","field_poster_image","publicURL","field_external_video_url","uri","frameborder","webkitallowfullscreen","mozallowfullscreen","allowfullscreen","array","allNodeClip","filter","el","field_episode","parseInt","padding","edge"],"mappings":"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","file":"component---src-pages-index-js-71a6433e6d73f2a0e70c.js","sourcesContent":["import styled from 'styled-components'\n\nexport default styled.div`\n  color: white;\n  text-align: center;\n  font-family: Lato;\n  font-size: 36px;\n  font-weight: 300;\n  letter-spacing: 0.04em;\n  padding-top: 120px;\n  margin-bottom: 75px;\n`;","import React from 'react'\nimport styled from 'styled-components'\n\nconst SVGChevron = ({color, rotate}) => \n  <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 18.177 30.139\">\n    <path \n      fill={color} \n      d=\"M15.2,15.034a2.2,2.2,0,0,1,.159-.226Q21.785,7.639,28.224.48a1.027,1.027,0,0,1,1.585.04,1.367,1.367,0,0,1,.02,1.76Q22.912,9.974,16,17.667a1.106,1.106,0,0,1-1.859,0Q7.975,10.763,1.806,3.858c-.494-.554-1-1.1-1.481-1.671A1.372,1.372,0,0,1,.555.2,1.07,1.07,0,0,1,2.013.413Q3.177,1.7,4.338,3q3.147,3.5,6.295,7,2.174,2.421,4.352,4.841a1.261,1.261,0,0,1,.127.2C15.14,15.039,15.168,15.034,15.2,15.034Z\"\n      transform=\"translate(0 30.139) rotate(-90)\"\n    />\n  </svg>\n///\n\nexport default SVGChevron;","import React from 'react'\nimport styled from 'styled-components'\nimport kebabCase from 'lodash/kebabCase'\nimport { \n  Link,\n  SVGArrow\n} from '../';\n\nimport {\n  red,\n  backgroundColor,\n  white\n} from '../../colors'\n\nconst Container = styled(Link)`\n  color: white;\n\n  padding-top: 30px;\n  /*padding-left: 30px;*/\n  padding-right: 30px;\n\n  display: flex;\n  flex-direction: column;\n`\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n\n  align-items: center;\n`\n\nconst Column = styled.div`\n  display: flex;\n  flex-direction: column;\n\n  background-color: ${backgroundColor};\n\n  padding: 15px;\n`\n\nconst Title = styled.div`\n\n  font-family: Lato;\n  font-size: 12pt;\n  line-height: 39px;\n  font-weight: 600;\n\n  letter-spacing: 0.022em;\n  text-transform: uppercase;\n\n  color: ${props => props.color ? props.color : white };\n  width: auto;\n\n  padding-left: 15px;\n  padding-right: 15px;\n`\n\nconst Description = styled.div`\n  font-family: 'Tisa Pro';\n  font-size: 20px;\n  line-height: 24px;\n  \n  color: ${white};\n`\n\nconst ArrowContainer = styled.div`\n  width: 25px;\n  height: 20px;\n`\n\nconst Arrow = ({color}) => <ArrowContainer>\n  <SVGArrow color={color} />\n</ArrowContainer>\n\nclass SubThemeCard extends React.Component {\n  render() {\n    const {\n      data,\n    } = this.props;\n\n    const title = data.name.indexOf(':') >= 0 ? data.name.split(':')[1] : data.name\n    const description = data.description ? data.description.value : '!empty content, check drupal!'\n    const link = `/subthemes/${kebabCase(data.name)}`\n\n    return (\n      <Container href={link}>\n        <Row>\n          <Arrow color={red}/>\n          <Title color={red}>{title}</Title>\n        </Row>\n        <Description dangerouslySetInnerHTML={{ __html: description }} />\n      </Container>\n    )\n  }\n}\n\nexport default SubThemeCard\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport SVGChevron from '../SVGChevron'\nimport SubThemeCard from './SubThemeCard'\n\nimport {\n  red,\n  black,\n  white,\n  getGradient\n} from '../../colors'\n\nconst Container = styled.div`\n  position: relative;\n\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n\n  align-items: center;\n  justify-content: center;\n\n  padding-top: 51px;\n  padding-bottom: 98px;\n\n  background-color: ${white};\n  \n  &::before {\n    content: '';\n    position: absolute;\n\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    width: 100%;\n    height: 100%;\n\n    background: ${props => props.gradient ? props.gradient : null };\n    filter: blur(12px);\n    filter: opacity(53%);\n  }\n\n  @media (max-width: 812px) { /* mobile */\n    padding-top: 0;\n  }\n`;\n\nconst MainImage = styled.div`\n  position: relative;\n\n  width: 832px;\n  height: 583px;\n\n  background-size: cover !important;\n  background-attachment: fixed;\n  transition: all .5s ease;\n\n  background: ${ props => props.background ? `url(${props.background}) center no-repeat` : `none`};\n  filter: opacity(92%);\n\n  @media (min-width: 1025px) { /* desktop */\n    \n  }\n\n  @media (max-width: 812px) { /* mobile */\n    width: 100vw;\n    height: 50vh;\n  }\n`\n\nconst Info = styled.div`\n  position: relative;\n  \n  margin-top: -200px;\n  margin-bottom: -100px;\n\n  z-index: 1;\n\n  backdrop-filter: blur(12px);\n\n  &::after {\n    content: '';\n    position: absolute;\n    z-index: -1;\n\n    top: 0;\n    left: 0;\n    right: 0;\n    bottom: 0;\n\n    width: 100%;\n    height: 100%;\n\n    background: ${props => props.gradient ? props.gradient : null };\n    filter: blur(12px);\n    filter: opacity(53%);\n  }\n\n  @media (min-width: 1025px) { /* desktop */\n    \n  }\n\n  @media (max-width: 812px) { /* mobile */\n    \n  }\n`\n\nconst Title = styled.div`\n  font-family: Lato;\n  text-align: left;\n  letter-spacing: 0.02em;\n  line-height: 54px;\n\n  color: ${black};\n\n  font-size: 20pt;\n  font-weight: 600;\n`;\n\nconst Description = styled.div`\n  font-family: Tisa Pro;\n  font-size: 22pt;\n  line-height: 30px;\n\n  margin-bottom: 45px;\n\n  & > p {\n    margin: 0;\n  }\n\n  color: ${white};\n`;\n\nconst ChevronContainer = styled.div`\n  cursor: pointer;\n  position: absolute;\n  \n  right: 0;\n\n  width: 18px;\n  height: 30px;\n\n  transform: rotate(${props => props.open ? 90 : 0}deg);\n\n  transition: all 0.3s ease-out;\n\n  @media (max-width: 812px) { /* mobile */\n    right: -25px;\n  }\n`\n\nconst Chevron = ({open}) => <ChevronContainer open={open}>\n  <SVGChevron color={white} />\n</ChevronContainer>\n\n///\n\nconst SubThemes = styled.div`\n  display: grid;\n  grid-template-columns: 45vw 45vw;\n\n  padding-left: 138px;\n\n  padding-bottom: 30px;\n\n  @media (min-width: 1025px) { /* desktop */\n    grid-template-columns: 30vw 30vw 30vw;\n  }\n\n  @media (max-width: 812px) { /* mobile */\n    padding-left: 38px;\n    grid-template-columns: 90vw;\n  }\n`\n\nconst Row = styled.div`\n  position: relative;\n\n  display: flex;\n  flex-direction: column;\n\n  justify-content: center;\n`\n\nconst FirstRow = styled(Row)`\n  margin-top: 16px;\n  margin-left: 138px;\n  margin-right: 138px;\n\n  @media (min-width: 1025px) { /* desktop */\n    \n  }\n\n  @media (max-width: 812px) { /* mobile */\n    margin-left: 38px;\n    margin-right: 38px;\n  }\n`\n\nclass ThemeCard extends React.Component {\n  constructor(props) {\n    super(props);\n  \n    this.state = {\n      open: false\n    };\n  }\n\n  render() {\n    const { open } = this.state;\n\n    const { \n      data,\n      color\n    } = this.props\n\n    const {\n      height,\n      width,\n      src\n    } = data.relationships.field_theme_image.localFile.childImageSharp.resolutions\n\n    const background = src\n    const title = data.name\n    const description = data.description && data.description.processed\n    const { subthemes } = data.relationships\n\n    const gradient = getGradient(color)\n\n    return (\n      <Container\n        open={open}\n        gradient={gradient}\n        onClick={() => this.setState({open: !open})}\n      >\n        <MainImage background={background} />\n        <Info gradient={gradient}>\n          <FirstRow>\n            <Title >{title}</Title>\n            <Description dangerouslySetInnerHTML={{ __html: description }} />\n            <Chevron open={open} />\n          </FirstRow>\n          <Row>\n            {\n              open && <SubThemes gradient={gradient}>\n                {\n                  subthemes.map( (data, key) => <SubThemeCard key={key} data={data}/>)\n                }\n              </SubThemes>\n            }\n          </Row>\n        </Info>\n      </Container>\n    )\n  }\n}\n\n// 〉\n\nexport default ThemeCard\n","import React from \"react\"\nimport { Link } from 'gatsby'\nimport kebabCase from 'lodash/kebabCase'\nimport styled, { css } from 'styled-components';\n\nclass RCCard extends React.Component {\n  \n  render() {\n    const link = `/${this.props.slug}s/${kebabCase(this.props.title)}`\n    \n    return (\n      <Link to={link} className={this.props.className} style={this.props.style}>\n          {this.props.type ?\n          <h4>{this.props.type}</h4> :\n          null }\n          <div className={'RCimage'} style={{\n            backgroundImage: `url(${this.props.imgSrc})`,\n            backgroundSize: 'cover',\n            backgroundPosition: 'center'\n          }}>\n          </div>\n          <p>{this.props.title}</p>\n\n          {this.props.children}\n      </Link>\n    )\n  }\n}\n\nconst BASE_CARD_WIDTH = 350;\nconst FLEX = 100;\nconst MAX_WIDTH_CONSTANT = .7;\nconst ARTICLE_MULTIPLIER = 1.5;\nconst QUICK_FACT_MULTIPLIER = 1.5;\n\n\nconst StyledRCCard = styled(RCCard)`\n  display: inline-block;\n  height: auto;\n  flex: ${FLEX} ${FLEX} ${BASE_CARD_WIDTH}px;\n  border: solid thin lightgrey;\n  background-color: #f7f7f7;\n  -webkit-box-shadow: 0px 2px 15px 0px rgba(179,179,179,0.38);\n  -moz-box-shadow: 0px 2px 15px 0px rgba(179,179,179,0.38);\n  box-shadow: 0px 2px 15px 0px rgba(179,179,179,0.38);\n  margin-bottom: 20px;\n  font-family: \"ff-tisa-web-pro\";\n  vertical-align: top;\n  text-align: left;\n  margin-left: 10px;\n  margin-right: 10px;\n  max-width: ${BASE_CARD_WIDTH * MAX_WIDTH_CONSTANT}px\n\n  // Link styling\n  color: inherit;\n  text-decoration: inherit;\n\n  ${props => props.background && css`\n    background-image: url('${props.background}');\n    background-size: cover;\n  `}\n  \n  ${props => props.type === `Article` && css`\n    flex: ${FLEX * ARTICLE_MULTIPLIER} ${FLEX * ARTICLE_MULTIPLIER} ${BASE_CARD_WIDTH * ARTICLE_MULTIPLIER}px;\n    max-width: ${BASE_CARD_WIDTH * MAX_WIDTH_CONSTANT * ARTICLE_MULTIPLIER}px;\n  `}\n\n  ${props => props.type === `QuickFact` && css`\n    flex: ${FLEX * QUICK_FACT_MULTIPLIER} ${FLEX * QUICK_FACT_MULTIPLIER} ${BASE_CARD_WIDTH * QUICK_FACT_MULTIPLIER}px;\n    max-width: ${BASE_CARD_WIDTH * MAX_WIDTH_CONSTANT * QUICK_FACT_MULTIPLIER}px;\n  `}\n`;\n\nexport default StyledRCCard;\n\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n  color: ${props => props.color ? props.color : `white`};\n`\n\nconst Element = styled.div`\n  cursor: pointer;\n  margin-left: 10px;\n  font-weight: ${props => props.selected ?  `bold` : `normal`};\n`\n\nconst Title = styled.div`\n  text-decoration: underline;\n`\n\nclass Filter extends Component {\n  render() {\n    const {selected, onSelected, color} = this.props;\n    return (\n      <Row color={color}>\n        Sort by:&nbsp;\n        <Element\n          selected={selected === 'all'}\n          onClick={() => onSelected('all')}\n        >\n          All\n        </Element>\n        <Element\n          selected={selected === '1'}\n          onClick={() => onSelected('1')}\n        >\n          <Title>Episode One:</Title> The Difference Between Us\n        </Element>\n        <Element\n          selected={selected === '2'}\n          onClick={() => onSelected('2')}\n        >\n          <Title>Episode Two:</Title> The Story We Tell\n        </Element>\n        <Element\n          selected={selected === '3'}\n          onClick={() => onSelected('3')}\n        >\n          <Title>Episode Three:</Title> The House We Live In\n        </Element>\n      </Row>\n    )\n  }\n}///\n\nexport default Filter;\n","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport kebabCase from 'lodash/kebabCase'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Layout,\r\n  Link,\r\n  Title,\r\n  ThemeCard\r\n} from \"../components\"\r\n\r\nimport gradientColors from '../gradients'\r\n\r\nconst HomeBackground = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: -999999;\r\n  height: 100%;\r\n  width:100%;\r\n`\r\n\r\nexport default ({ data, location }) => (\r\n  <Layout location={location}>\r\n    <div>\r\n      <HomeBackground />\r\n      {\r\n        data.allTaxonomyTermThemes.edges.map( ({ node }, key) =>\r\n          <ThemeCard key={key} data={node} color={gradientColors[key]}/>\r\n        )\r\n      }\r\n    </div>\r\n  </Layout>\r\n)\r\n\r\n\r\nexport const query = graphql`\r\n  query IndexQuery {\r\n    \r\n    allTaxonomyTermThemes {\r\n      edges {\r\n        node {\r\n          id\r\n          name\r\n          description {\r\n            processed\r\n          }\r\n          relationships {\r\n            field_theme_image {\r\n              localFile {\r\n                publicURL\r\n                childImageSharp {\r\n                  id\r\n                  resolutions {\r\n                    height\r\n                    width\r\n                    src\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            subthemes: backref_field_belongs_to_theme {\r\n              name\r\n              id\r\n              description {\r\n                value\r\n              }\r\n              relationships {\r\n                contentNodes: backref_field_belongs_to_subtheme {\r\n                  __typename\r\n                  ... on node__article {\r\n                    title\r\n                  }\r\n                  ... on node__faq {\r\n                    title\r\n                  }\r\n                  ... on node__clip {\r\n                    title\r\n                  }\r\n                  ... on node__quickfact {\r\n                    title\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    trailerClip:nodeClip(id: { eq:\"dda11171-b3eb-44b4-8fa2-06bd24f545b1\" } ) {\r\n      ...ClipFragment\r\n    }\r\n  }\r\n`\r\n","const gradientColors = [\n  '#47A32B',\n  '#A32B4B',\n  '#2B62A3',\n  '#FDFBBC',\n\n  '#7C85A5', // repeat from here\n\n  '#47A32B',\n  '#A32B4B',\n  '#2B62A3',\n  '#FDFBBC',\n\n  '#7C85A5',\n\n  '#47A32B',\n  '#A32B4B',\n  '#2B62A3',\n  '#FDFBBC',\n];\n\nmodule.exports = gradientColors;\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport kebabCase from 'lodash/kebabCase'\n\nconst ClipCard = styled.div`\n\twidth: 300px;\n\tbackground-color:#292929;\n\tcolor: white;\n\tdisplay:inline-block;\n\tvertical-align: top;\n\tmargin-right:30px;\n\tmargin-bottom: 30px;\n\ttransition: all .3s;\n\tborder-radius: 6px;\n\t&:hover {\n\t  transition: all .3s;\n\t}\n\tcursor: pointer;\n`\nconst ClipCaption = styled.div`\n\tfont-family: 'Lato';\n\tfont-size: 14px;\n\tline-height: 1.5;\n\tfont-weight: 300;\n\tletter-spacing: 0.04em;\n\tpadding: 15px 30px 30px 30px;\n`\nconst ClipPoster = styled.div`\n\theight:200px;\n\twidth:100%;\n\tbackground-color:red;\n\tbackground-size:cover;\n\tbackground-position: center;\n  background-image: ${props => props.background ?  `url(${props.background})` : `none`};\n`\n\nexport const Clip = ({ clip, link }) =>  {\n\treturn (\n\t\t\t<ClipCard>\n\t\t\t\t{\n\t\t\t\t\tlink ?\n\t\t\t\t\t\t<Link style={{color:'inherit', textDecoration:'none'}} to={`/clips/${kebabCase(clip.title)}`}>\n\t\t\t\t\t\t\t<ClipPoster background={clip.relationships.field_poster_image && clip.relationships.field_poster_image.localFile.publicURL} />\n\t\t\t\t\t\t\t<ClipCaption>\n\t\t\t\t\t\t\t\t{clip.title}\n\t\t\t\t\t\t\t</ClipCaption>\n\t\t\t\t\t\t</Link> :\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<iframe title={clip.title} src={`${clip.field_external_video_url && clip.field_external_video_url.uri}?title=0&byline=0&portrait=0`} frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>\n\t\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t</ClipCard>\n\t\t)\n}\n\n\nconst AllClips = ({ data, selected }) => {\n\tlet array = data.allNodeClip.edges\n\n\tif(selected)\n\t\tarray = array.filter( el => selected === 'all' ? true : el.node.field_episode === parseInt(selected) )\n\t\n\treturn (\n\t  <div style={{padding: '0 30px'}}>\n\t    {\n\t    \tarray.map((edge, i) =>\n\t\t      <Clip key={`clip-${i}`} clip={edge.node} link={true} />\n\t\t    )\n\t\t  }\n\t  </div>\n\t)\n}\n\nexport default AllClips\n\n"],"sourceRoot":""}