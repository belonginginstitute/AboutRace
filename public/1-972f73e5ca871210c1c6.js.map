{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/react-burger-menu/lib/menuFactory.js","webpack:///./node_modules/react-helmet/lib/Helmet.js","webpack:///./node_modules/react-burger-menu/lib/BurgerMenu.js","webpack:///./node_modules/react-helmet/lib/HelmetConstants.js","webpack:///./node_modules/react-burger-menu/lib/snapsvgImporter.js","webpack:///./node_modules/react-side-effect/lib/index.js","webpack:///./node_modules/exenv/index.js","webpack:///./node_modules/shallowequal/index.js","webpack:///./node_modules/deep-equal/index.js","webpack:///./node_modules/deep-equal/lib/keys.js","webpack:///./node_modules/deep-equal/lib/is_arguments.js","webpack:///./node_modules/react-helmet/lib/HelmetUtils.js","webpack:///./node_modules/react-burger-menu/lib/menus/slide.js","webpack:///./node_modules/react-burger-menu/lib/baseStyles.js","webpack:///./node_modules/react-burger-menu/lib/BurgerIcon.js","webpack:///./node_modules/react-burger-menu/lib/CrossIcon.js","webpack:///./node_modules/react-burger-menu/lib/menus/stack.js","webpack:///./node_modules/react-burger-menu/lib/menus/elastic.js","webpack:///./node_modules/snapsvg-cjs/dist/snap.svg-cjs.js","webpack:///./node_modules/eve/eve.js","webpack:///./node_modules/react-burger-menu/lib/menus/bubble.js","webpack:///./node_modules/react-burger-menu/lib/menus/push.js","webpack:///./node_modules/react-burger-menu/lib/menus/pushRotate.js","webpack:///./node_modules/react-burger-menu/lib/menus/scaleDown.js","webpack:///./node_modules/react-burger-menu/lib/menus/scaleRotate.js","webpack:///./node_modules/react-burger-menu/lib/menus/fallDown.js","webpack:///./node_modules/react-burger-menu/lib/menus/reveal.js"],"names":["dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e","247","t","n","Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","writable","Constructor","protoProps","staticProps","_get","_x3","_x4","_x5","_again","object","property","receiver","desc","getOwnPropertyDescriptor","getter","parent","getPrototypeOf","_interopRequireDefault","obj","__esModule","default","_react","_react2","_reactDom2","_propTypes2","_baseStyles2","_BurgerIcon2","_CrossIcon2","styles","Menu","_Component","instance","TypeError","state","isOpen","subClass","superClass","create","constructor","setPrototypeOf","__proto__","Component","_this","options","noStateChange","newState","applyWrapperStyles","setState","onStateChange","timeoutId","clearTimeout","setTimeout","set","bodyClassName","document","querySelector","classList","pageWrap","pageWrapId","handleExternalWrapper","outerContainer","outerContainerId","id","wrapperStyles","html","body","wrapper","getElementById","builtStyles","getStyle","prop","style","forEach","element","console","error","el","index","inline","propName","replace","charAt","toUpperCase","output","width","formattedWidth","right","window","event","keyCode","toggleMenu","disableOverlayClick","Error","customOnKeyDown","onkeydown","disableCloseOnEsc","listenForClose","bind","morphShape","path","svg","findDOMNode","lib","select","animate","attr","pathInitial","nextProps","_this3","createElement","noOverlay","className","overlayClassName","trim","onClick","shouldDisableOverlayClick","getStyles","morphShapeClassName","height","viewBox","preserveAspectRatio","d","menuClassName","itemListClassName","Children","map","children","item","extraProps","itemClassName","filter","join","cloneElement","customCrossIcon","customIcon","crossButtonClassName","crossClassName","customBurgerIcon","burgerButtonClassName","barClassName","burgerBarClassName","propTypes","string","oneOfType","oneOf","func","bool","isRequired","number","defaultProps","module","251","Helmet","_reactSideEffect2","_deepEqual2","_HelmetUtils","_HelmetConstants","_objectWithoutProperties","keys","indexOf","_class","_temp","HelmetSideEffects","reducePropsToState","handleClientStateChange","mapStateOnServer","HelmetExport","_React$Component","HelmetWrapper","self","ReferenceError","apply","shouldComponentUpdate","mapNestedChildrenToProps","child","nestedChildren","type","TAG_NAMES","SCRIPT","NOSCRIPT","innerHTML","STYLE","cssText","flattenArrayTypeChildren","_ref","_extends2","arrayTypeChildren","newChildProps","concat","mapObjectTypeChildren","_ref2","_extends3","_extends4","newProps","TITLE","titleAttributes","BODY","bodyAttributes","HTML","htmlAttributes","mapArrayTypeChildrenToProps","newFlattenedProps","arrayChildName","_extends5","warnOnInvalidChildren","mapChildrenToProps","_this2","_child$props","childProps","convertReactPropstoHtmlAttributes","LINK","META","render","_props","canUseDOM","base","arrayOf","node","defaultTitle","defer","encodeSpecialCharacters","link","meta","noscript","onChangeClientState","script","title","titleTemplate","peek","rewind","mappedState","baseTag","linkTags","metaTags","noscriptTags","scriptTags","styleTags","renderStatic","slide","stack","elastic","bubble","push","pushRotate","scaleDown","scaleRotate","fallDown","reveal","268","ATTRIBUTE_NAMES","BASE","HEAD","REACT_TAG_MAP","VALID_TAG_NAMES","name","TAG_PROPERTIES","CHARSET","CSS_TEXT","HREF","HTTPEQUIV","INNER_HTML","ITEM_PROP","NAME","PROPERTY","REL","SRC","accesskey","charset","class","contenteditable","contextmenu","http-equiv","itemprop","tabindex","HELMET_PROPS","DEFAULT_TITLE","DEFER","ENCODE_SPECIAL_CHARACTERS","ON_CHANGE_CLIENT_STATE","TITLE_TEMPLATE","HTML_TAG_MAP","reduce","SELF_CLOSING_TAGS","HELMET_ATTRIBUTE","273","Snap","300","_interopDefault","ex","React","React__default","ExecutionEnvironment","shallowEqual","handleStateChangeOnClient","WrappedComponent","mountedInstances","emitChange","SideEffect","recordedState","componentWillMount","componentDidUpdate","componentWillUnmount","splice","displayName","__WEBPACK_AMD_DEFINE_RESULT__","canUseWorkers","Worker","canUseEventListeners","addEventListener","attachEvent","canUseViewport","screen","302","objA","objB","compare","compareContext","ret","keysA","keysB","bHasOwnProperty","idx","valueA","valueB","303","pSlice","Array","slice","objectKeys","isArguments","deepEqual","actual","expected","opts","Date","getTime","strict","a","b","isUndefinedOrNull","isBuffer","ka","kb","sort","x","copy","304","shim","supportsArgumentsClass","toString","supported","unsupported","propertyIsEnumerable","global","warn","requestAnimationFrame","_typeof","Symbol","iterator","_objectAssign2","clock","str","String","getAttributesFromPropsList","tagType","propsList","tagAttrs","current","getTagsFromPropsList","tagName","primaryAttributes","approvedSeenTags","isArray","reverse","approvedTags","instanceTags","instanceSeenTags","tag","primaryAttributeKey","attributeKey","lowerCaseAttributeKey","toLowerCase","tagUnion","getInnermostProperty","rafPolyfill","now","callback","currentTime","cafPolyfill","webkitRequestAnimationFrame","mozRequestAnimationFrame","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","msg","_helmetCallback","commitTagChanges","cb","updateAttributes","updateTitle","tagUpdates","updateTags","addedTags","removedTags","_tagUpdates$tagType","newTags","oldTags","flattenArray","possibleArray","attributes","elementTag","getElementsByTagName","helmetAttributeString","getAttribute","helmetAttributes","split","attributesToRemove","attributeKeys","attribute","setAttribute","indexToSave","_i","removeAttribute","tags","headElement","head","tagNodes","querySelectorAll","indexToDelete","newElement","styleSheet","appendChild","createTextNode","some","existingTag","isEqualNode","parentNode","removeChild","generateElementAttributesAsString","convertElementAttributestoReactProps","initProps","getMethodsForTag","encode","toComponent","_initProps","attributeString","flattenedTitle","_mappedTag","mappedTag","mappedAttribute","content","dangerouslySetInnerHTML","__html","attributeHtml","tagContent","isSelfClosing","initAttributes","_ref$title","innermostBaseTag","innermostTitle","innermostTemplate","innermostDefaultTitle","_menuFactory2","335","overlay","position","zIndex","background","opacity","MozTransform","MsTransform","OTransform","WebkitTransform","transform","transition","menuWrap","menu","boxSizing","overflow","itemList","display","outline","336","_x","_x2","BurgerIcon","hover","left","top","icon","bmIcon","bar","getLineStyle","bmBurgerBars","bmBurgerButton","onMouseOver","onMouseOut","margin","padding","border","fontSize","cursor","337","CrossIcon","bmCross","getCrossStyle","bmCrossButton","textIndent","338","nthChild","339","_snapsvgImporter2","pathOpen","mina","easeinout","whiteSpace","340","eve","requestID","animations","requestAnimFrame","oRequestAnimationFrame","msRequestAnimationFrame","idgen","idprefix","timer","sta","val","s","ds","dur","B","speed","spd","duration","stopit","update","pause","pdif","resume","frame","res","start","j","jj","end","easing","timeStamp","len","A","anim","linear","status","stop","time","getById","easeout","Math","pow","easein","q","Q","sqrt","y","abs","backin","backout","sin","PI","bounce","p","root","w","h","nodeType","wrap","is","Element","glob","doc","Paper","version","_","win","tokenRegex","objNotationRegex","has","Str","toFloat","parseFloat","toInt","parseInt","math","mmax","max","mmin","min","E","round","objectToString","colourRegExp","commaSpaces","separator","hsrg","hs","rg","pathCommand","tCommand","pathValues","ID","xlink","xmlns","hub","$","text","createComment","substring","getAttributeNS","nodeValue","setAttributeNS","createElementNS","o","isFinite","cacher","scope","postprocessor","newf","arg","args","cache","count","array","ii","shift","rad","deg","url","format","all","quote","quotedName","isFunc","clone","angle","tan","cos","asin","num","acos","atan","atan2","x1","y1","x2","y2","x3","y3","len2","closestPoint","distance2","dx","dy","best","bestLength","scan","scanDistance","pathNode","pathLength","getTotalLength","precision","pathSegList","numberOfItems","bestDistance","Infinity","scanLength","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","snapTo","values","tolerance","rem","getRGB","colour","r","g","hex","rgbtoString","toHex","red","green","blue","rgb","hsb2rgb","hsl2rgb","hsb","hsl","l","toFixed","color","out","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","prepareRGB","clr","packageRGB","rgb2hsl","rgb2hsb","v","R","G","X","C","V","L","M","m","parsePathString","pathString","pth","arr","paramCounts","c","u","z","data","params","parseTransformString","TString","getSomeSVG","ownerSVGElement","add2group","list","childNodes","snap","paper","nodeName","anims","add","mask","pattern","symbol","method","Fragment","frag","make","defs","proto","ownerDocument","dom","contentDocument","svgTransform2string","tstr","rgTransform","transform2matrix","bbox","tdata","Matrix","bb","tlen","command","absolute","inver","invert","translate","rotate","scale","_unit2px","mgr","getW","getBBox","getH","nam","fill","contains","compareDocumentPosition","getSomeDefs","pdefs","query","selectAll","nodelist","setInterval","firstDefined","json","att","parse","createDocumentFragment","full","div","firstChild","fragment","ch","toJSON","jsonFiller","on","nt","css","lastIndexOf","letter","cssAttr","alignment-baseline","baseline-shift","clip","clip-path","clip-rule","color-interpolation","color-interpolation-filters","color-profile","color-rendering","direction","dominant-baseline","enable-background","fill-opacity","fill-rule","flood-color","flood-opacity","font","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","glyph-orientation-horizontal","glyph-orientation-vertical","image-rendering","kerning","letter-spacing","lighting-color","marker","marker-end","marker-mid","marker-start","pointer-events","shape-rendering","stop-color","stop-opacity","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","text-decoration","text-rendering","unicode-bidi","visibility","word-spacing","writing-mode","ajax","postData","req","XMLHttpRequest","pd","encodeURIComponent","open","setRequestHeader","once","onreadystatechange","readyState","send","load","responseText","getElementByPoint","canvas","elem","box","docElem","clientTop","clientLeft","elementFromPoint","opera","so","getBoundingClientRect","documentElement","pageYOffset","scrollTop","pageXOffset","scrollLeft","sr","createSVGRect","hits","getIntersectionList","plugin","elproto","unit2px","isWithoutTransform","getClientRects","removed","localMatrix","original","href","pathfinder","deflt","bboxwt","realPath","matrix","propString","extractTransform","doReturn","test","papa","getCTM","local","ms","localString","toTransformString","globalMatrix","totalMatrix","diffMatrix","total","gradientTransform","patternTransform","append","it","appendTo","prepend","first","insertBefore","prependTo","nextSibling","insertAfter","remove","asPX","use","xlink:href","cloneNode","els","ids","uses","urltest","linktest","oldid","old","fs","toDefs","toPattern","patternUnits","refX","refY","cx","cy","markerWidth","markerHeight","orient","eldata","chld","removeData","outerSVG","innerSVG","toDataURL","btoa","contents","unescape","matrixproto","norm","normalize","mag","aNew","bNew","multLeft","cNew","eNew","me","skewX","skew","skewY","fromCharCode","offset","determinant","row","scalex","shear","scaley","isSimple","isSuperSimple","noRotation","shorter","clipIt","reURLValue","URL","fillStroke","grad","gradient","attrs","deurl","gradrg","setFontSize","getFontSize","tokens","stops","seed","step","k","toAbsolute","txt","baseVal","vb","rx","ry","tp","textPath","tuner","chunk","tuned","setter","textExtract","chi","textContent","internal","rgNotSpace","addClass","clazz","finalValue","classes","curClasses","removeClass","pos","hasClass","toggleClass","flag","operators","+","-","/","*","reUnit","reAddon","getNumber","plus","evnt","atr","unit","aUnit","op","isNaN","bplus","from","to","rect","circle","preload","onerror","src","img","onload","image","offsetWidth","offsetHeight","ellipse","group","vbx","vby","vbw","vbh","ptrn","vx","vy","vw","vh","line","polyline","points","polygon","Gstops","GaddStop","inserted","GgetBBox","GsetStops","addStop","gradientLinear","setStops","gradientRadial","fx","fy","unshift","gradientUnits","clear","next","p2s","paths","ps","sleep","r1","r2","r0","rectPath","pathClone","pathArray","getPointAtSegmentLength","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","bezlen","findDotsAtSegment","x4","y4","ll","t2","getLengthFactory","istotal","subpath","O","onlystart","point","sp","subpaths","path2curve","getSubpathsAtLength","t1","t13","t12","t3","mx","my","nx","ny","alpha","bezierBBox","curveDim","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p1","p2","p3","p4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","intersect","denominator","px","py","px2","py2","interHelper","bez1","bez2","justCount","n1","n2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","interPathHelper","path1","path2","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","pathBBox","Y","dim","xmin","ymin","ellipsePath","getPath","pathToAbsolute","pa0","pa","crz","dots","pop","catmullRom2bezier","l2c","q2c","ax","ay","x0","y0","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","curve","bx","by","qx","qy","attrs2","processPath","pcom","T","a2c","large_arc_flag","sweep_flag","recursive","_120","f1","f2","rx2","ry2","df","f2old","x2old","y2old","c1","s1","c2","s2","hx","hy","m1","m2","m3","m4","newres","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","crp","iLen","getSubpath","closest","inside","found","intersection","intersectionNumber","isPointInside","toRelative","lowerCase","rel","toCubic","pathi","Set","items","bindings","setproto","thisArg","Animation","each","begin","handler","callbacker","aname","unbound","insertion","tail","todel","arglen","exclude","names","getEmpty","getViewBox","getColour","path2array","isNumeric","equal","Number","tt1","tt2","maxlength","arr1","arr2","bUnit","supportsTouch","events","touchMap","mousedown","mousemove","mouseup","getScroll","preventTouch","originalEvent","preventDefault","stopTouch","stopPropagation","addEvent","fn","realName","scrollY","scrollX","targetTouches","olde","clientX","clientY","removeEventListener","drag","dragMove","dragi","touch","touches","identifier","_drag","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","off","eventName","unbind","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","origTransform","init","undrag","unmousedown","pproto","rgurl","filstr","filterUnits","blur","def","shadow","grayscale","amount","sepia","saturate","hueRotate","amount2","brightness","contrast","firstLetter","getAlign","way","align","animation","inAnim","_attrs","_callback","curStatus","eq","fkeys","tkeys","saveColor","colors","A100","A200","A400","A700","mui","flat","pink","purple","deeppurple","indigo","lightblue","cyan","teal","lightgreen","lime","yellow","amber","orange","deeporange","brown","grey","bluegrey","turquoise","greensea","sunflower","emerland","nephritis","carrot","pumpkin","peterriver","belizehole","alizarin","pomegranate","amethyst","wisteria","clouds","silver","wetasphalt","midnightblue","concrete","asbestos","importMUIColors","current_event","comaseparator","numsort","lastDefined","objtos","ar","oldstop","listeners","indexed","queue","ce","_events","nes","es","sep","RegExp","exist","subname","cur","nts","inodes","funcs","prune","steps","stepsTotal","nextStep","closeButton","343","344","transformOrigin","transformStyle","perspective","345","346","347","perspectiveOrigin","348","burgerIcon"],"mappings":"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","file":"1-972f73e5ca871210c1c6.js","sourcesContent":["var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x3, _x4, _x5) { var _again = true; _function: while (_again) { var object = _x3, property = _x4, receiver = _x5; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x3 = parent; _x4 = property; _x5 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _baseStyles = require('./baseStyles');\n\nvar _baseStyles2 = _interopRequireDefault(_baseStyles);\n\nvar _BurgerIcon = require('./BurgerIcon');\n\nvar _BurgerIcon2 = _interopRequireDefault(_BurgerIcon);\n\nvar _CrossIcon = require('./CrossIcon');\n\nvar _CrossIcon2 = _interopRequireDefault(_CrossIcon);\n\nexports['default'] = function (styles) {\n  var Menu = (function (_Component) {\n    _inherits(Menu, _Component);\n\n    function Menu(props) {\n      _classCallCheck(this, Menu);\n\n      _get(Object.getPrototypeOf(Menu.prototype), 'constructor', this).call(this, props);\n      this.state = {\n        isOpen: false\n      };\n    }\n\n    _createClass(Menu, [{\n      key: 'toggleMenu',\n      value: function toggleMenu() {\n        var _this = this;\n\n        var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n        var isOpen = options.isOpen;\n        var noStateChange = options.noStateChange;\n\n        var newState = {\n          isOpen: typeof isOpen !== 'undefined' ? isOpen : !this.state.isOpen\n        };\n\n        this.applyWrapperStyles();\n\n        this.setState(newState, function () {\n          !noStateChange && _this.props.onStateChange(newState);\n\n          // Timeout ensures wrappers are cleared after animation finishes.\n          _this.timeoutId && clearTimeout(_this.timeoutId);\n          _this.timeoutId = setTimeout(function () {\n            _this.timeoutId = null;\n            if (!newState.isOpen) {\n              _this.applyWrapperStyles(false);\n            }\n          }, 500);\n        });\n      }\n\n      // Applies component-specific styles to external wrapper elements.\n    }, {\n      key: 'applyWrapperStyles',\n      value: function applyWrapperStyles() {\n        var set = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n        if (this.props.bodyClassName) {\n          var body = document.querySelector('body');\n          body.classList[set ? 'add' : 'remove'](this.props.bodyClassName);\n        }\n\n        if (styles.pageWrap && this.props.pageWrapId) {\n          this.handleExternalWrapper(this.props.pageWrapId, styles.pageWrap, set);\n        }\n\n        if (styles.outerContainer && this.props.outerContainerId) {\n          this.handleExternalWrapper(this.props.outerContainerId, styles.outerContainer, set);\n        }\n      }\n\n      // Sets or unsets styles on DOM elements outside the menu component.\n      // This is necessary for correct page interaction with some of the menus.\n      // Throws and returns if the required external elements don't exist,\n      // which means any external page animations won't be applied.\n    }, {\n      key: 'handleExternalWrapper',\n      value: function handleExternalWrapper(id, wrapperStyles, set) {\n        var html = document.querySelector('html');\n        var body = document.querySelector('body');\n        var wrapper = document.getElementById(id);\n\n        if (!wrapper) {\n          console.error(\"Element with ID '\" + id + \"' not found\");\n          return;\n        }\n\n        var builtStyles = this.getStyle(wrapperStyles);\n\n        for (var prop in builtStyles) {\n          if (builtStyles.hasOwnProperty(prop)) {\n            wrapper.style[prop] = set ? builtStyles[prop] : '';\n          }\n        }\n\n        // Prevent any horizontal scroll.\n        [html, body].forEach(function (element) {\n          element.style['overflow-x'] = set ? 'hidden' : '';\n        });\n      }\n\n      // Builds styles incrementally for a given element.\n    }, {\n      key: 'getStyles',\n      value: function getStyles(el, index, inline) {\n        var propName = 'bm' + el.replace(el.charAt(0), el.charAt(0).toUpperCase());\n\n        // Set base styles.\n        var output = _baseStyles2['default'][el] ? this.getStyle(_baseStyles2['default'][el]) : {};\n\n        // Add animation-specific styles.\n        if (styles[el]) {\n          output = _extends({}, output, this.getStyle(styles[el], index + 1));\n        }\n\n        // Add custom styles.\n        if (this.props.styles[propName]) {\n          output = _extends({}, output, this.props.styles[propName]);\n        }\n\n        // Add element inline styles.\n        if (inline) {\n          output = _extends({}, output, inline);\n        }\n\n        return output;\n      }\n    }, {\n      key: 'getStyle',\n      value: function getStyle(style, index) {\n        var width = this.props.width;\n\n        var formattedWidth = typeof width !== 'string' ? width + 'px' : width;\n        return style(this.state.isOpen, formattedWidth, this.props.right, index);\n      }\n    }, {\n      key: 'listenForClose',\n      value: function listenForClose(e) {\n        e = e || window.event;\n\n        if (this.state.isOpen && (e.key === 'Escape' || e.keyCode === 27)) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'shouldDisableOverlayClick',\n      value: function shouldDisableOverlayClick() {\n        if (typeof this.props.disableOverlayClick === 'function') {\n          return this.props.disableOverlayClick();\n        } else {\n          return this.props.disableOverlayClick;\n        }\n      }\n    }, {\n      key: 'componentWillMount',\n      value: function componentWillMount() {\n        if (!styles) {\n          throw new Error('No styles supplied');\n        }\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        // Bind ESC key handler (unless disabled or custom function supplied).\n        if (this.props.customOnKeyDown) {\n          window.onkeydown = this.props.customOnKeyDown;\n        } else if (!this.props.disableCloseOnEsc) {\n          window.onkeydown = this.listenForClose.bind(this);\n        }\n\n        // Allow initial open state to be set by props.\n        if (this.props.isOpen) {\n          this.toggleMenu({ isOpen: true, noStateChange: true });\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        window.onkeydown = null;\n\n        this.applyWrapperStyles(false);\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate() {\n        var _this2 = this;\n\n        if (styles.svg) {\n          (function () {\n            var morphShape = _reactDom2['default'].findDOMNode(_this2, 'bm-morph-shape');\n            var path = styles.svg.lib(morphShape).select('path');\n\n            if (_this2.state.isOpen) {\n              // Animate SVG path.\n              styles.svg.animate(path);\n            } else {\n              // Reset path (timeout ensures animation happens off screen).\n              setTimeout(function () {\n                path.attr('d', styles.svg.pathInitial);\n              }, 300);\n            }\n          })();\n        }\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps) {\n        if (typeof nextProps.isOpen !== 'undefined' && nextProps.isOpen !== this.state.isOpen) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this3 = this;\n\n        return _react2['default'].createElement(\n          'div',\n          null,\n          !this.props.noOverlay && _react2['default'].createElement('div', {\n            className: ('bm-overlay ' + this.props.overlayClassName).trim(),\n            onClick: function () {\n              return !_this3.shouldDisableOverlayClick() && _this3.toggleMenu();\n            },\n            style: this.getStyles('overlay')\n          }),\n          _react2['default'].createElement(\n            'div',\n            {\n              id: this.props.id,\n              className: ('bm-menu-wrap ' + this.props.className).trim(),\n              style: this.getStyles('menuWrap')\n            },\n            styles.svg && _react2['default'].createElement(\n              'div',\n              {\n                className: ('bm-morph-shape ' + this.props.morphShapeClassName).trim(),\n                style: this.getStyles('morphShape')\n              },\n              _react2['default'].createElement(\n                'svg',\n                {\n                  width: '100%',\n                  height: '100%',\n                  viewBox: '0 0 100 800',\n                  preserveAspectRatio: 'none'\n                },\n                _react2['default'].createElement('path', { d: styles.svg.pathInitial })\n              )\n            ),\n            _react2['default'].createElement(\n              'div',\n              {\n                className: ('bm-menu ' + this.props.menuClassName).trim(),\n                style: this.getStyles('menu')\n              },\n              _react2['default'].createElement(\n                'nav',\n                {\n                  className: ('bm-item-list ' + this.props.itemListClassName).trim(),\n                  style: this.getStyles('itemList')\n                },\n                _react2['default'].Children.map(this.props.children, function (item, index) {\n                  if (item) {\n                    var classList = ['bm-item', _this3.props.itemClassName, item.props.className].filter(function (className) {\n                      return !!className;\n                    }).join(' ');\n                    var extraProps = {\n                      key: index,\n                      className: classList,\n                      style: _this3.getStyles('item', index, item.props.style)\n                    };\n                    return _react2['default'].cloneElement(item, extraProps);\n                  }\n                })\n              )\n            ),\n            this.props.customCrossIcon !== false && _react2['default'].createElement(\n              'div',\n              { style: this.getStyles('closeButton') },\n              _react2['default'].createElement(_CrossIcon2['default'], {\n                onClick: function () {\n                  return _this3.toggleMenu();\n                },\n                styles: this.props.styles,\n                customIcon: this.props.customCrossIcon,\n                className: this.props.crossButtonClassName,\n                crossClassName: this.props.crossClassName\n              })\n            )\n          ),\n          this.props.customBurgerIcon !== false && _react2['default'].createElement(\n            'div',\n            { style: this.getStyles('burgerIcon') },\n            _react2['default'].createElement(_BurgerIcon2['default'], {\n              onClick: function () {\n                return _this3.toggleMenu();\n              },\n              styles: this.props.styles,\n              customIcon: this.props.customBurgerIcon,\n              className: this.props.burgerButtonClassName,\n              barClassName: this.props.burgerBarClassName\n            })\n          )\n        );\n      }\n    }]);\n\n    return Menu;\n  })(_react.Component);\n\n  Menu.propTypes = {\n    bodyClassName: _propTypes2['default'].string,\n    burgerBarClassName: _propTypes2['default'].string,\n    burgerButtonClassName: _propTypes2['default'].string,\n    crossButtonClassName: _propTypes2['default'].string,\n    crossClassName: _propTypes2['default'].string,\n    customBurgerIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customCrossIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customOnKeyDown: _propTypes2['default'].func,\n    disableCloseOnEsc: _propTypes2['default'].bool,\n    disableOverlayClick: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].func]),\n    id: _propTypes2['default'].string,\n    isOpen: _propTypes2['default'].bool,\n    itemClassName: _propTypes2['default'].string,\n    itemListClassName: _propTypes2['default'].string,\n    menuClassName: _propTypes2['default'].string,\n    morphShapeClassName: _propTypes2['default'].string,\n    noOverlay: _propTypes2['default'].bool,\n    onStateChange: _propTypes2['default'].func,\n    outerContainerId: styles && styles.outerContainer ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    overlayClassName: _propTypes2['default'].string,\n    pageWrapId: styles && styles.pageWrap ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    right: _propTypes2['default'].bool,\n    styles: _propTypes2['default'].object,\n    width: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string])\n  };\n\n  Menu.defaultProps = {\n    bodyClassName: '',\n    burgerBarClassName: '',\n    burgerButtonClassName: '',\n    className: '',\n    crossButtonClassName: '',\n    crossClassName: '',\n    disableCloseOnEsc: false,\n    id: '',\n    itemClassName: '',\n    itemListClassName: '',\n    menuClassName: '',\n    morphShapeClassName: '',\n    noOverlay: false,\n    onStateChange: function onStateChange() {},\n    outerContainerId: '',\n    overlayClassName: '',\n    pageWrapId: '',\n    styles: {},\n    width: 300\n  };\n\n  return Menu;\n};\n\nmodule.exports = exports['default'];","exports.__esModule = true;\nexports.Helmet = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactSideEffect = require(\"react-side-effect\");\n\nvar _reactSideEffect2 = _interopRequireDefault(_reactSideEffect);\n\nvar _deepEqual = require(\"deep-equal\");\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nvar _HelmetUtils = require(\"./HelmetUtils.js\");\n\nvar _HelmetConstants = require(\"./HelmetConstants.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Helmet = function Helmet(Component) {\n    var _class, _temp;\n\n    return _temp = _class = function (_React$Component) {\n        _inherits(HelmetWrapper, _React$Component);\n\n        function HelmetWrapper() {\n            _classCallCheck(this, HelmetWrapper);\n\n            return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n        }\n\n        HelmetWrapper.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n            return !(0, _deepEqual2.default)(this.props, nextProps);\n        };\n\n        HelmetWrapper.prototype.mapNestedChildrenToProps = function mapNestedChildrenToProps(child, nestedChildren) {\n            if (!nestedChildren) {\n                return null;\n            }\n\n            switch (child.type) {\n                case _HelmetConstants.TAG_NAMES.SCRIPT:\n                case _HelmetConstants.TAG_NAMES.NOSCRIPT:\n                    return {\n                        innerHTML: nestedChildren\n                    };\n\n                case _HelmetConstants.TAG_NAMES.STYLE:\n                    return {\n                        cssText: nestedChildren\n                    };\n            }\n\n            throw new Error(\"<\" + child.type + \" /> elements are self-closing and can not contain children. Refer to our API for more information.\");\n        };\n\n        HelmetWrapper.prototype.flattenArrayTypeChildren = function flattenArrayTypeChildren(_ref) {\n            var _extends2;\n\n            var child = _ref.child,\n                arrayTypeChildren = _ref.arrayTypeChildren,\n                newChildProps = _ref.newChildProps,\n                nestedChildren = _ref.nestedChildren;\n\n            return _extends({}, arrayTypeChildren, (_extends2 = {}, _extends2[child.type] = [].concat(arrayTypeChildren[child.type] || [], [_extends({}, newChildProps, this.mapNestedChildrenToProps(child, nestedChildren))]), _extends2));\n        };\n\n        HelmetWrapper.prototype.mapObjectTypeChildren = function mapObjectTypeChildren(_ref2) {\n            var _extends3, _extends4;\n\n            var child = _ref2.child,\n                newProps = _ref2.newProps,\n                newChildProps = _ref2.newChildProps,\n                nestedChildren = _ref2.nestedChildren;\n\n            switch (child.type) {\n                case _HelmetConstants.TAG_NAMES.TITLE:\n                    return _extends({}, newProps, (_extends3 = {}, _extends3[child.type] = nestedChildren, _extends3.titleAttributes = _extends({}, newChildProps), _extends3));\n\n                case _HelmetConstants.TAG_NAMES.BODY:\n                    return _extends({}, newProps, {\n                        bodyAttributes: _extends({}, newChildProps)\n                    });\n\n                case _HelmetConstants.TAG_NAMES.HTML:\n                    return _extends({}, newProps, {\n                        htmlAttributes: _extends({}, newChildProps)\n                    });\n            }\n\n            return _extends({}, newProps, (_extends4 = {}, _extends4[child.type] = _extends({}, newChildProps), _extends4));\n        };\n\n        HelmetWrapper.prototype.mapArrayTypeChildrenToProps = function mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {\n            var newFlattenedProps = _extends({}, newProps);\n\n            Object.keys(arrayTypeChildren).forEach(function (arrayChildName) {\n                var _extends5;\n\n                newFlattenedProps = _extends({}, newFlattenedProps, (_extends5 = {}, _extends5[arrayChildName] = arrayTypeChildren[arrayChildName], _extends5));\n            });\n\n            return newFlattenedProps;\n        };\n\n        HelmetWrapper.prototype.warnOnInvalidChildren = function warnOnInvalidChildren(child, nestedChildren) {\n            if (process.env.NODE_ENV !== \"production\") {\n                if (!_HelmetConstants.VALID_TAG_NAMES.some(function (name) {\n                    return child.type === name;\n                })) {\n                    if (typeof child.type === \"function\") {\n                        return (0, _HelmetUtils.warn)(\"You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.\");\n                    }\n\n                    return (0, _HelmetUtils.warn)(\"Only elements types \" + _HelmetConstants.VALID_TAG_NAMES.join(\", \") + \" are allowed. Helmet does not support rendering <\" + child.type + \"> elements. Refer to our API for more information.\");\n                }\n\n                if (nestedChildren && typeof nestedChildren !== \"string\" && (!Array.isArray(nestedChildren) || nestedChildren.some(function (nestedChild) {\n                    return typeof nestedChild !== \"string\";\n                }))) {\n                    throw new Error(\"Helmet expects a string as a child of <\" + child.type + \">. Did you forget to wrap your children in braces? ( <\" + child.type + \">{``}</\" + child.type + \"> ) Refer to our API for more information.\");\n                }\n            }\n\n            return true;\n        };\n\n        HelmetWrapper.prototype.mapChildrenToProps = function mapChildrenToProps(children, newProps) {\n            var _this2 = this;\n\n            var arrayTypeChildren = {};\n\n            _react2.default.Children.forEach(children, function (child) {\n                if (!child || !child.props) {\n                    return;\n                }\n\n                var _child$props = child.props,\n                    nestedChildren = _child$props.children,\n                    childProps = _objectWithoutProperties(_child$props, [\"children\"]);\n\n                var newChildProps = (0, _HelmetUtils.convertReactPropstoHtmlAttributes)(childProps);\n\n                _this2.warnOnInvalidChildren(child, nestedChildren);\n\n                switch (child.type) {\n                    case _HelmetConstants.TAG_NAMES.LINK:\n                    case _HelmetConstants.TAG_NAMES.META:\n                    case _HelmetConstants.TAG_NAMES.NOSCRIPT:\n                    case _HelmetConstants.TAG_NAMES.SCRIPT:\n                    case _HelmetConstants.TAG_NAMES.STYLE:\n                        arrayTypeChildren = _this2.flattenArrayTypeChildren({\n                            child: child,\n                            arrayTypeChildren: arrayTypeChildren,\n                            newChildProps: newChildProps,\n                            nestedChildren: nestedChildren\n                        });\n                        break;\n\n                    default:\n                        newProps = _this2.mapObjectTypeChildren({\n                            child: child,\n                            newProps: newProps,\n                            newChildProps: newChildProps,\n                            nestedChildren: nestedChildren\n                        });\n                        break;\n                }\n            });\n\n            newProps = this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);\n            return newProps;\n        };\n\n        HelmetWrapper.prototype.render = function render() {\n            var _props = this.props,\n                children = _props.children,\n                props = _objectWithoutProperties(_props, [\"children\"]);\n\n            var newProps = _extends({}, props);\n\n            if (children) {\n                newProps = this.mapChildrenToProps(children, newProps);\n            }\n\n            return _react2.default.createElement(Component, newProps);\n        };\n\n        _createClass(HelmetWrapper, null, [{\n            key: \"canUseDOM\",\n\n\n            // Component.peek comes from react-side-effect:\n            // For testing, you may use a static peek() method available on the returned component.\n            // It lets you get the current state without resetting the mounted instance stack.\n            // Don’t use it for anything other than testing.\n\n            /**\n            * @param {Object} base: {\"target\": \"_blank\", \"href\": \"http://mysite.com/\"}\n            * @param {Object} bodyAttributes: {\"className\": \"root\"}\n            * @param {String} defaultTitle: \"Default Title\"\n            * @param {Boolean} defer: true\n            * @param {Boolean} encodeSpecialCharacters: true\n            * @param {Object} htmlAttributes: {\"lang\": \"en\", \"amp\": undefined}\n            * @param {Array} link: [{\"rel\": \"canonical\", \"href\": \"http://mysite.com/example\"}]\n            * @param {Array} meta: [{\"name\": \"description\", \"content\": \"Test description\"}]\n            * @param {Array} noscript: [{\"innerHTML\": \"<img src='http://mysite.com/js/test.js'\"}]\n            * @param {Function} onChangeClientState: \"(newState) => console.log(newState)\"\n            * @param {Array} script: [{\"type\": \"text/javascript\", \"src\": \"http://mysite.com/js/test.js\"}]\n            * @param {Array} style: [{\"type\": \"text/css\", \"cssText\": \"div { display: block; color: blue; }\"}]\n            * @param {String} title: \"Title\"\n            * @param {Object} titleAttributes: {\"itemprop\": \"name\"}\n            * @param {String} titleTemplate: \"MySite.com - %s\"\n            */\n            set: function set(canUseDOM) {\n                Component.canUseDOM = canUseDOM;\n            }\n        }]);\n\n        return HelmetWrapper;\n    }(_react2.default.Component), _class.propTypes = {\n        base: _propTypes2.default.object,\n        bodyAttributes: _propTypes2.default.object,\n        children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),\n        defaultTitle: _propTypes2.default.string,\n        defer: _propTypes2.default.bool,\n        encodeSpecialCharacters: _propTypes2.default.bool,\n        htmlAttributes: _propTypes2.default.object,\n        link: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        meta: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        noscript: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        onChangeClientState: _propTypes2.default.func,\n        script: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        style: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        title: _propTypes2.default.string,\n        titleAttributes: _propTypes2.default.object,\n        titleTemplate: _propTypes2.default.string\n    }, _class.defaultProps = {\n        defer: true,\n        encodeSpecialCharacters: true\n    }, _class.peek = Component.peek, _class.rewind = function () {\n        var mappedState = Component.rewind();\n        if (!mappedState) {\n            // provide fallback if mappedState is undefined\n            mappedState = (0, _HelmetUtils.mapStateOnServer)({\n                baseTag: [],\n                bodyAttributes: {},\n                encodeSpecialCharacters: true,\n                htmlAttributes: {},\n                linkTags: [],\n                metaTags: [],\n                noscriptTags: [],\n                scriptTags: [],\n                styleTags: [],\n                title: \"\",\n                titleAttributes: {}\n            });\n        }\n\n        return mappedState;\n    }, _temp;\n};\n\nvar NullComponent = function NullComponent() {\n    return null;\n};\n\nvar HelmetSideEffects = (0, _reactSideEffect2.default)(_HelmetUtils.reducePropsToState, _HelmetUtils.handleClientStateChange, _HelmetUtils.mapStateOnServer)(NullComponent);\n\nvar HelmetExport = Helmet(HelmetSideEffects);\nHelmetExport.renderStatic = HelmetExport.rewind;\n\nexports.Helmet = HelmetExport;\nexports.default = HelmetExport;","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = {\n  slide: require('./menus/slide'),\n  stack: require('./menus/stack'),\n  elastic: require('./menus/elastic'),\n  bubble: require('./menus/bubble'),\n  push: require('./menus/push'),\n  pushRotate: require('./menus/pushRotate'),\n  scaleDown: require('./menus/scaleDown'),\n  scaleRotate: require('./menus/scaleRotate'),\n  fallDown: require('./menus/fallDown'),\n  reveal: require('./menus/reveal')\n};\nmodule.exports = exports['default'];","exports.__esModule = true;\nvar ATTRIBUTE_NAMES = exports.ATTRIBUTE_NAMES = {\n    BODY: \"bodyAttributes\",\n    HTML: \"htmlAttributes\",\n    TITLE: \"titleAttributes\"\n};\n\nvar TAG_NAMES = exports.TAG_NAMES = {\n    BASE: \"base\",\n    BODY: \"body\",\n    HEAD: \"head\",\n    HTML: \"html\",\n    LINK: \"link\",\n    META: \"meta\",\n    NOSCRIPT: \"noscript\",\n    SCRIPT: \"script\",\n    STYLE: \"style\",\n    TITLE: \"title\"\n};\n\nvar VALID_TAG_NAMES = exports.VALID_TAG_NAMES = Object.keys(TAG_NAMES).map(function (name) {\n    return TAG_NAMES[name];\n});\n\nvar TAG_PROPERTIES = exports.TAG_PROPERTIES = {\n    CHARSET: \"charset\",\n    CSS_TEXT: \"cssText\",\n    HREF: \"href\",\n    HTTPEQUIV: \"http-equiv\",\n    INNER_HTML: \"innerHTML\",\n    ITEM_PROP: \"itemprop\",\n    NAME: \"name\",\n    PROPERTY: \"property\",\n    REL: \"rel\",\n    SRC: \"src\"\n};\n\nvar REACT_TAG_MAP = exports.REACT_TAG_MAP = {\n    accesskey: \"accessKey\",\n    charset: \"charSet\",\n    class: \"className\",\n    contenteditable: \"contentEditable\",\n    contextmenu: \"contextMenu\",\n    \"http-equiv\": \"httpEquiv\",\n    itemprop: \"itemProp\",\n    tabindex: \"tabIndex\"\n};\n\nvar HELMET_PROPS = exports.HELMET_PROPS = {\n    DEFAULT_TITLE: \"defaultTitle\",\n    DEFER: \"defer\",\n    ENCODE_SPECIAL_CHARACTERS: \"encodeSpecialCharacters\",\n    ON_CHANGE_CLIENT_STATE: \"onChangeClientState\",\n    TITLE_TEMPLATE: \"titleTemplate\"\n};\n\nvar HTML_TAG_MAP = exports.HTML_TAG_MAP = Object.keys(REACT_TAG_MAP).reduce(function (obj, key) {\n    obj[REACT_TAG_MAP[key]] = key;\n    return obj;\n}, {});\n\nvar SELF_CLOSING_TAGS = exports.SELF_CLOSING_TAGS = [TAG_NAMES.NOSCRIPT, TAG_NAMES.SCRIPT, TAG_NAMES.STYLE];\n\nvar HELMET_ATTRIBUTE = exports.HELMET_ATTRIBUTE = \"data-react-helmet\";","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nexports['default'] = function () {\n  var Snap = undefined;\n  try {\n    Snap = require('snapsvg-cjs');\n  } finally {\n    return Snap;\n  }\n};\n\nmodule.exports = exports['default'];","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar React = require('react');\nvar React__default = _interopDefault(React);\nvar ExecutionEnvironment = _interopDefault(require('exenv'));\nvar shallowEqual = _interopDefault(require('shallowequal'));\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction withSideEffect(reducePropsToState, handleStateChangeOnClient, mapStateOnServer) {\n  if (typeof reducePropsToState !== 'function') {\n    throw new Error('Expected reducePropsToState to be a function.');\n  }\n  if (typeof handleStateChangeOnClient !== 'function') {\n    throw new Error('Expected handleStateChangeOnClient to be a function.');\n  }\n  if (typeof mapStateOnServer !== 'undefined' && typeof mapStateOnServer !== 'function') {\n    throw new Error('Expected mapStateOnServer to either be undefined or a function.');\n  }\n\n  function getDisplayName(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  }\n\n  return function wrap(WrappedComponent) {\n    if (typeof WrappedComponent !== 'function') {\n      throw new Error('Expected WrappedComponent to be a React component.');\n    }\n\n    var mountedInstances = [];\n    var state = void 0;\n\n    function emitChange() {\n      state = reducePropsToState(mountedInstances.map(function (instance) {\n        return instance.props;\n      }));\n\n      if (SideEffect.canUseDOM) {\n        handleStateChangeOnClient(state);\n      } else if (mapStateOnServer) {\n        state = mapStateOnServer(state);\n      }\n    }\n\n    var SideEffect = function (_Component) {\n      _inherits(SideEffect, _Component);\n\n      function SideEffect() {\n        _classCallCheck(this, SideEffect);\n\n        return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n      }\n\n      // Try to use displayName of wrapped component\n      SideEffect.peek = function peek() {\n        return state;\n      };\n\n      // Expose canUseDOM so tests can monkeypatch it\n\n\n      SideEffect.rewind = function rewind() {\n        if (SideEffect.canUseDOM) {\n          throw new Error('You may only call rewind() on the server. Call peek() to read the current state.');\n        }\n\n        var recordedState = state;\n        state = undefined;\n        mountedInstances = [];\n        return recordedState;\n      };\n\n      SideEffect.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n        return !shallowEqual(nextProps, this.props);\n      };\n\n      SideEffect.prototype.componentWillMount = function componentWillMount() {\n        mountedInstances.push(this);\n        emitChange();\n      };\n\n      SideEffect.prototype.componentDidUpdate = function componentDidUpdate() {\n        emitChange();\n      };\n\n      SideEffect.prototype.componentWillUnmount = function componentWillUnmount() {\n        var index = mountedInstances.indexOf(this);\n        mountedInstances.splice(index, 1);\n        emitChange();\n      };\n\n      SideEffect.prototype.render = function render() {\n        return React__default.createElement(WrappedComponent, this.props);\n      };\n\n      return SideEffect;\n    }(React.Component);\n\n    SideEffect.displayName = 'SideEffect(' + getDisplayName(WrappedComponent) + ')';\n    SideEffect.canUseDOM = ExecutionEnvironment.canUseDOM;\n\n\n    return SideEffect;\n  };\n}\n\nmodule.exports = withSideEffect;\n","/*!\n  Copyright (c) 2015 Jed Watson.\n  Based on code that is Copyright 2013-2015, Facebook, Inc.\n  All rights reserved.\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar canUseDOM = !!(\n\t\ttypeof window !== 'undefined' &&\n\t\twindow.document &&\n\t\twindow.document.createElement\n\t);\n\n\tvar ExecutionEnvironment = {\n\n\t\tcanUseDOM: canUseDOM,\n\n\t\tcanUseWorkers: typeof Worker !== 'undefined',\n\n\t\tcanUseEventListeners:\n\t\t\tcanUseDOM && !!(window.addEventListener || window.attachEvent),\n\n\t\tcanUseViewport: canUseDOM && !!window.screen\n\n\t};\n\n\tif (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\tdefine(function () {\n\t\t\treturn ExecutionEnvironment;\n\t\t});\n\t} else if (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = ExecutionEnvironment;\n\t} else {\n\t\twindow.ExecutionEnvironment = ExecutionEnvironment;\n\t}\n\n}());\n","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n","exports.__esModule = true;\nexports.warn = exports.requestAnimationFrame = exports.reducePropsToState = exports.mapStateOnServer = exports.handleClientStateChange = exports.convertReactPropstoHtmlAttributes = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _objectAssign = require(\"object-assign\");\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _HelmetConstants = require(\"./HelmetConstants.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar encodeSpecialCharacters = function encodeSpecialCharacters(str) {\n    var encode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (encode === false) {\n        return String(str);\n    }\n\n    return String(str).replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#x27;\");\n};\n\nvar getTitleFromPropsList = function getTitleFromPropsList(propsList) {\n    var innermostTitle = getInnermostProperty(propsList, _HelmetConstants.TAG_NAMES.TITLE);\n    var innermostTemplate = getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.TITLE_TEMPLATE);\n\n    if (innermostTemplate && innermostTitle) {\n        // use function arg to avoid need to escape $ characters\n        return innermostTemplate.replace(/%s/g, function () {\n            return innermostTitle;\n        });\n    }\n\n    var innermostDefaultTitle = getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.DEFAULT_TITLE);\n\n    return innermostTitle || innermostDefaultTitle || undefined;\n};\n\nvar getOnChangeClientState = function getOnChangeClientState(propsList) {\n    return getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.ON_CHANGE_CLIENT_STATE) || function () {};\n};\n\nvar getAttributesFromPropsList = function getAttributesFromPropsList(tagType, propsList) {\n    return propsList.filter(function (props) {\n        return typeof props[tagType] !== \"undefined\";\n    }).map(function (props) {\n        return props[tagType];\n    }).reduce(function (tagAttrs, current) {\n        return _extends({}, tagAttrs, current);\n    }, {});\n};\n\nvar getBaseTagFromPropsList = function getBaseTagFromPropsList(primaryAttributes, propsList) {\n    return propsList.filter(function (props) {\n        return typeof props[_HelmetConstants.TAG_NAMES.BASE] !== \"undefined\";\n    }).map(function (props) {\n        return props[_HelmetConstants.TAG_NAMES.BASE];\n    }).reverse().reduce(function (innermostBaseTag, tag) {\n        if (!innermostBaseTag.length) {\n            var keys = Object.keys(tag);\n\n            for (var i = 0; i < keys.length; i++) {\n                var attributeKey = keys[i];\n                var lowerCaseAttributeKey = attributeKey.toLowerCase();\n\n                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && tag[lowerCaseAttributeKey]) {\n                    return innermostBaseTag.concat(tag);\n                }\n            }\n        }\n\n        return innermostBaseTag;\n    }, []);\n};\n\nvar getTagsFromPropsList = function getTagsFromPropsList(tagName, primaryAttributes, propsList) {\n    // Calculate list of tags, giving priority innermost component (end of the propslist)\n    var approvedSeenTags = {};\n\n    return propsList.filter(function (props) {\n        if (Array.isArray(props[tagName])) {\n            return true;\n        }\n        if (typeof props[tagName] !== \"undefined\") {\n            warn(\"Helmet: \" + tagName + \" should be of type \\\"Array\\\". Instead found type \\\"\" + _typeof(props[tagName]) + \"\\\"\");\n        }\n        return false;\n    }).map(function (props) {\n        return props[tagName];\n    }).reverse().reduce(function (approvedTags, instanceTags) {\n        var instanceSeenTags = {};\n\n        instanceTags.filter(function (tag) {\n            var primaryAttributeKey = void 0;\n            var keys = Object.keys(tag);\n            for (var i = 0; i < keys.length; i++) {\n                var attributeKey = keys[i];\n                var lowerCaseAttributeKey = attributeKey.toLowerCase();\n\n                // Special rule with link tags, since rel and href are both primary tags, rel takes priority\n                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && !(primaryAttributeKey === _HelmetConstants.TAG_PROPERTIES.REL && tag[primaryAttributeKey].toLowerCase() === \"canonical\") && !(lowerCaseAttributeKey === _HelmetConstants.TAG_PROPERTIES.REL && tag[lowerCaseAttributeKey].toLowerCase() === \"stylesheet\")) {\n                    primaryAttributeKey = lowerCaseAttributeKey;\n                }\n                // Special case for innerHTML which doesn't work lowercased\n                if (primaryAttributes.indexOf(attributeKey) !== -1 && (attributeKey === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || attributeKey === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT || attributeKey === _HelmetConstants.TAG_PROPERTIES.ITEM_PROP)) {\n                    primaryAttributeKey = attributeKey;\n                }\n            }\n\n            if (!primaryAttributeKey || !tag[primaryAttributeKey]) {\n                return false;\n            }\n\n            var value = tag[primaryAttributeKey].toLowerCase();\n\n            if (!approvedSeenTags[primaryAttributeKey]) {\n                approvedSeenTags[primaryAttributeKey] = {};\n            }\n\n            if (!instanceSeenTags[primaryAttributeKey]) {\n                instanceSeenTags[primaryAttributeKey] = {};\n            }\n\n            if (!approvedSeenTags[primaryAttributeKey][value]) {\n                instanceSeenTags[primaryAttributeKey][value] = true;\n                return true;\n            }\n\n            return false;\n        }).reverse().forEach(function (tag) {\n            return approvedTags.push(tag);\n        });\n\n        // Update seen tags with tags from this instance\n        var keys = Object.keys(instanceSeenTags);\n        for (var i = 0; i < keys.length; i++) {\n            var attributeKey = keys[i];\n            var tagUnion = (0, _objectAssign2.default)({}, approvedSeenTags[attributeKey], instanceSeenTags[attributeKey]);\n\n            approvedSeenTags[attributeKey] = tagUnion;\n        }\n\n        return approvedTags;\n    }, []).reverse();\n};\n\nvar getInnermostProperty = function getInnermostProperty(propsList, property) {\n    for (var i = propsList.length - 1; i >= 0; i--) {\n        var props = propsList[i];\n\n        if (props.hasOwnProperty(property)) {\n            return props[property];\n        }\n    }\n\n    return null;\n};\n\nvar reducePropsToState = function reducePropsToState(propsList) {\n    return {\n        baseTag: getBaseTagFromPropsList([_HelmetConstants.TAG_PROPERTIES.HREF], propsList),\n        bodyAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.BODY, propsList),\n        defer: getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.DEFER),\n        encode: getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS),\n        htmlAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.HTML, propsList),\n        linkTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.LINK, [_HelmetConstants.TAG_PROPERTIES.REL, _HelmetConstants.TAG_PROPERTIES.HREF], propsList),\n        metaTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.META, [_HelmetConstants.TAG_PROPERTIES.NAME, _HelmetConstants.TAG_PROPERTIES.CHARSET, _HelmetConstants.TAG_PROPERTIES.HTTPEQUIV, _HelmetConstants.TAG_PROPERTIES.PROPERTY, _HelmetConstants.TAG_PROPERTIES.ITEM_PROP], propsList),\n        noscriptTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.NOSCRIPT, [_HelmetConstants.TAG_PROPERTIES.INNER_HTML], propsList),\n        onChangeClientState: getOnChangeClientState(propsList),\n        scriptTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.SCRIPT, [_HelmetConstants.TAG_PROPERTIES.SRC, _HelmetConstants.TAG_PROPERTIES.INNER_HTML], propsList),\n        styleTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.STYLE, [_HelmetConstants.TAG_PROPERTIES.CSS_TEXT], propsList),\n        title: getTitleFromPropsList(propsList),\n        titleAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.TITLE, propsList)\n    };\n};\n\nvar rafPolyfill = function () {\n    var clock = Date.now();\n\n    return function (callback) {\n        var currentTime = Date.now();\n\n        if (currentTime - clock > 16) {\n            clock = currentTime;\n            callback(currentTime);\n        } else {\n            setTimeout(function () {\n                rafPolyfill(callback);\n            }, 0);\n        }\n    };\n}();\n\nvar cafPolyfill = function cafPolyfill(id) {\n    return clearTimeout(id);\n};\n\nvar requestAnimationFrame = typeof window !== \"undefined\" ? window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || rafPolyfill : global.requestAnimationFrame || rafPolyfill;\n\nvar cancelAnimationFrame = typeof window !== \"undefined\" ? window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || cafPolyfill : global.cancelAnimationFrame || cafPolyfill;\n\nvar warn = function warn(msg) {\n    return console && typeof console.warn === \"function\" && console.warn(msg);\n};\n\nvar _helmetCallback = null;\n\nvar handleClientStateChange = function handleClientStateChange(newState) {\n    if (_helmetCallback) {\n        cancelAnimationFrame(_helmetCallback);\n    }\n\n    if (newState.defer) {\n        _helmetCallback = requestAnimationFrame(function () {\n            commitTagChanges(newState, function () {\n                _helmetCallback = null;\n            });\n        });\n    } else {\n        commitTagChanges(newState);\n        _helmetCallback = null;\n    }\n};\n\nvar commitTagChanges = function commitTagChanges(newState, cb) {\n    var baseTag = newState.baseTag,\n        bodyAttributes = newState.bodyAttributes,\n        htmlAttributes = newState.htmlAttributes,\n        linkTags = newState.linkTags,\n        metaTags = newState.metaTags,\n        noscriptTags = newState.noscriptTags,\n        onChangeClientState = newState.onChangeClientState,\n        scriptTags = newState.scriptTags,\n        styleTags = newState.styleTags,\n        title = newState.title,\n        titleAttributes = newState.titleAttributes;\n\n    updateAttributes(_HelmetConstants.TAG_NAMES.BODY, bodyAttributes);\n    updateAttributes(_HelmetConstants.TAG_NAMES.HTML, htmlAttributes);\n\n    updateTitle(title, titleAttributes);\n\n    var tagUpdates = {\n        baseTag: updateTags(_HelmetConstants.TAG_NAMES.BASE, baseTag),\n        linkTags: updateTags(_HelmetConstants.TAG_NAMES.LINK, linkTags),\n        metaTags: updateTags(_HelmetConstants.TAG_NAMES.META, metaTags),\n        noscriptTags: updateTags(_HelmetConstants.TAG_NAMES.NOSCRIPT, noscriptTags),\n        scriptTags: updateTags(_HelmetConstants.TAG_NAMES.SCRIPT, scriptTags),\n        styleTags: updateTags(_HelmetConstants.TAG_NAMES.STYLE, styleTags)\n    };\n\n    var addedTags = {};\n    var removedTags = {};\n\n    Object.keys(tagUpdates).forEach(function (tagType) {\n        var _tagUpdates$tagType = tagUpdates[tagType],\n            newTags = _tagUpdates$tagType.newTags,\n            oldTags = _tagUpdates$tagType.oldTags;\n\n\n        if (newTags.length) {\n            addedTags[tagType] = newTags;\n        }\n        if (oldTags.length) {\n            removedTags[tagType] = tagUpdates[tagType].oldTags;\n        }\n    });\n\n    cb && cb();\n\n    onChangeClientState(newState, addedTags, removedTags);\n};\n\nvar flattenArray = function flattenArray(possibleArray) {\n    return Array.isArray(possibleArray) ? possibleArray.join(\"\") : possibleArray;\n};\n\nvar updateTitle = function updateTitle(title, attributes) {\n    if (typeof title !== \"undefined\" && document.title !== title) {\n        document.title = flattenArray(title);\n    }\n\n    updateAttributes(_HelmetConstants.TAG_NAMES.TITLE, attributes);\n};\n\nvar updateAttributes = function updateAttributes(tagName, attributes) {\n    var elementTag = document.getElementsByTagName(tagName)[0];\n\n    if (!elementTag) {\n        return;\n    }\n\n    var helmetAttributeString = elementTag.getAttribute(_HelmetConstants.HELMET_ATTRIBUTE);\n    var helmetAttributes = helmetAttributeString ? helmetAttributeString.split(\",\") : [];\n    var attributesToRemove = [].concat(helmetAttributes);\n    var attributeKeys = Object.keys(attributes);\n\n    for (var i = 0; i < attributeKeys.length; i++) {\n        var attribute = attributeKeys[i];\n        var value = attributes[attribute] || \"\";\n\n        if (elementTag.getAttribute(attribute) !== value) {\n            elementTag.setAttribute(attribute, value);\n        }\n\n        if (helmetAttributes.indexOf(attribute) === -1) {\n            helmetAttributes.push(attribute);\n        }\n\n        var indexToSave = attributesToRemove.indexOf(attribute);\n        if (indexToSave !== -1) {\n            attributesToRemove.splice(indexToSave, 1);\n        }\n    }\n\n    for (var _i = attributesToRemove.length - 1; _i >= 0; _i--) {\n        elementTag.removeAttribute(attributesToRemove[_i]);\n    }\n\n    if (helmetAttributes.length === attributesToRemove.length) {\n        elementTag.removeAttribute(_HelmetConstants.HELMET_ATTRIBUTE);\n    } else if (elementTag.getAttribute(_HelmetConstants.HELMET_ATTRIBUTE) !== attributeKeys.join(\",\")) {\n        elementTag.setAttribute(_HelmetConstants.HELMET_ATTRIBUTE, attributeKeys.join(\",\"));\n    }\n};\n\nvar updateTags = function updateTags(type, tags) {\n    var headElement = document.head || document.querySelector(_HelmetConstants.TAG_NAMES.HEAD);\n    var tagNodes = headElement.querySelectorAll(type + \"[\" + _HelmetConstants.HELMET_ATTRIBUTE + \"]\");\n    var oldTags = Array.prototype.slice.call(tagNodes);\n    var newTags = [];\n    var indexToDelete = void 0;\n\n    if (tags && tags.length) {\n        tags.forEach(function (tag) {\n            var newElement = document.createElement(type);\n\n            for (var attribute in tag) {\n                if (tag.hasOwnProperty(attribute)) {\n                    if (attribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML) {\n                        newElement.innerHTML = tag.innerHTML;\n                    } else if (attribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT) {\n                        if (newElement.styleSheet) {\n                            newElement.styleSheet.cssText = tag.cssText;\n                        } else {\n                            newElement.appendChild(document.createTextNode(tag.cssText));\n                        }\n                    } else {\n                        var value = typeof tag[attribute] === \"undefined\" ? \"\" : tag[attribute];\n                        newElement.setAttribute(attribute, value);\n                    }\n                }\n            }\n\n            newElement.setAttribute(_HelmetConstants.HELMET_ATTRIBUTE, \"true\");\n\n            // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.\n            if (oldTags.some(function (existingTag, index) {\n                indexToDelete = index;\n                return newElement.isEqualNode(existingTag);\n            })) {\n                oldTags.splice(indexToDelete, 1);\n            } else {\n                newTags.push(newElement);\n            }\n        });\n    }\n\n    oldTags.forEach(function (tag) {\n        return tag.parentNode.removeChild(tag);\n    });\n    newTags.forEach(function (tag) {\n        return headElement.appendChild(tag);\n    });\n\n    return {\n        oldTags: oldTags,\n        newTags: newTags\n    };\n};\n\nvar generateElementAttributesAsString = function generateElementAttributesAsString(attributes) {\n    return Object.keys(attributes).reduce(function (str, key) {\n        var attr = typeof attributes[key] !== \"undefined\" ? key + \"=\\\"\" + attributes[key] + \"\\\"\" : \"\" + key;\n        return str ? str + \" \" + attr : attr;\n    }, \"\");\n};\n\nvar generateTitleAsString = function generateTitleAsString(type, title, attributes, encode) {\n    var attributeString = generateElementAttributesAsString(attributes);\n    var flattenedTitle = flattenArray(title);\n    return attributeString ? \"<\" + type + \" \" + _HelmetConstants.HELMET_ATTRIBUTE + \"=\\\"true\\\" \" + attributeString + \">\" + encodeSpecialCharacters(flattenedTitle, encode) + \"</\" + type + \">\" : \"<\" + type + \" \" + _HelmetConstants.HELMET_ATTRIBUTE + \"=\\\"true\\\">\" + encodeSpecialCharacters(flattenedTitle, encode) + \"</\" + type + \">\";\n};\n\nvar generateTagsAsString = function generateTagsAsString(type, tags, encode) {\n    return tags.reduce(function (str, tag) {\n        var attributeHtml = Object.keys(tag).filter(function (attribute) {\n            return !(attribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || attribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT);\n        }).reduce(function (string, attribute) {\n            var attr = typeof tag[attribute] === \"undefined\" ? attribute : attribute + \"=\\\"\" + encodeSpecialCharacters(tag[attribute], encode) + \"\\\"\";\n            return string ? string + \" \" + attr : attr;\n        }, \"\");\n\n        var tagContent = tag.innerHTML || tag.cssText || \"\";\n\n        var isSelfClosing = _HelmetConstants.SELF_CLOSING_TAGS.indexOf(type) === -1;\n\n        return str + \"<\" + type + \" \" + _HelmetConstants.HELMET_ATTRIBUTE + \"=\\\"true\\\" \" + attributeHtml + (isSelfClosing ? \"/>\" : \">\" + tagContent + \"</\" + type + \">\");\n    }, \"\");\n};\n\nvar convertElementAttributestoReactProps = function convertElementAttributestoReactProps(attributes) {\n    var initProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return Object.keys(attributes).reduce(function (obj, key) {\n        obj[_HelmetConstants.REACT_TAG_MAP[key] || key] = attributes[key];\n        return obj;\n    }, initProps);\n};\n\nvar convertReactPropstoHtmlAttributes = function convertReactPropstoHtmlAttributes(props) {\n    var initAttributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return Object.keys(props).reduce(function (obj, key) {\n        obj[_HelmetConstants.HTML_TAG_MAP[key] || key] = props[key];\n        return obj;\n    }, initAttributes);\n};\n\nvar generateTitleAsReactComponent = function generateTitleAsReactComponent(type, title, attributes) {\n    var _initProps;\n\n    // assigning into an array to define toString function on it\n    var initProps = (_initProps = {\n        key: title\n    }, _initProps[_HelmetConstants.HELMET_ATTRIBUTE] = true, _initProps);\n    var props = convertElementAttributestoReactProps(attributes, initProps);\n\n    return [_react2.default.createElement(_HelmetConstants.TAG_NAMES.TITLE, props, title)];\n};\n\nvar generateTagsAsReactComponent = function generateTagsAsReactComponent(type, tags) {\n    return tags.map(function (tag, i) {\n        var _mappedTag;\n\n        var mappedTag = (_mappedTag = {\n            key: i\n        }, _mappedTag[_HelmetConstants.HELMET_ATTRIBUTE] = true, _mappedTag);\n\n        Object.keys(tag).forEach(function (attribute) {\n            var mappedAttribute = _HelmetConstants.REACT_TAG_MAP[attribute] || attribute;\n\n            if (mappedAttribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || mappedAttribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT) {\n                var content = tag.innerHTML || tag.cssText;\n                mappedTag.dangerouslySetInnerHTML = { __html: content };\n            } else {\n                mappedTag[mappedAttribute] = tag[attribute];\n            }\n        });\n\n        return _react2.default.createElement(type, mappedTag);\n    });\n};\n\nvar getMethodsForTag = function getMethodsForTag(type, tags, encode) {\n    switch (type) {\n        case _HelmetConstants.TAG_NAMES.TITLE:\n            return {\n                toComponent: function toComponent() {\n                    return generateTitleAsReactComponent(type, tags.title, tags.titleAttributes, encode);\n                },\n                toString: function toString() {\n                    return generateTitleAsString(type, tags.title, tags.titleAttributes, encode);\n                }\n            };\n        case _HelmetConstants.ATTRIBUTE_NAMES.BODY:\n        case _HelmetConstants.ATTRIBUTE_NAMES.HTML:\n            return {\n                toComponent: function toComponent() {\n                    return convertElementAttributestoReactProps(tags);\n                },\n                toString: function toString() {\n                    return generateElementAttributesAsString(tags);\n                }\n            };\n        default:\n            return {\n                toComponent: function toComponent() {\n                    return generateTagsAsReactComponent(type, tags);\n                },\n                toString: function toString() {\n                    return generateTagsAsString(type, tags, encode);\n                }\n            };\n    }\n};\n\nvar mapStateOnServer = function mapStateOnServer(_ref) {\n    var baseTag = _ref.baseTag,\n        bodyAttributes = _ref.bodyAttributes,\n        encode = _ref.encode,\n        htmlAttributes = _ref.htmlAttributes,\n        linkTags = _ref.linkTags,\n        metaTags = _ref.metaTags,\n        noscriptTags = _ref.noscriptTags,\n        scriptTags = _ref.scriptTags,\n        styleTags = _ref.styleTags,\n        _ref$title = _ref.title,\n        title = _ref$title === undefined ? \"\" : _ref$title,\n        titleAttributes = _ref.titleAttributes;\n    return {\n        base: getMethodsForTag(_HelmetConstants.TAG_NAMES.BASE, baseTag, encode),\n        bodyAttributes: getMethodsForTag(_HelmetConstants.ATTRIBUTE_NAMES.BODY, bodyAttributes, encode),\n        htmlAttributes: getMethodsForTag(_HelmetConstants.ATTRIBUTE_NAMES.HTML, htmlAttributes, encode),\n        link: getMethodsForTag(_HelmetConstants.TAG_NAMES.LINK, linkTags, encode),\n        meta: getMethodsForTag(_HelmetConstants.TAG_NAMES.META, metaTags, encode),\n        noscript: getMethodsForTag(_HelmetConstants.TAG_NAMES.NOSCRIPT, noscriptTags, encode),\n        script: getMethodsForTag(_HelmetConstants.TAG_NAMES.SCRIPT, scriptTags, encode),\n        style: getMethodsForTag(_HelmetConstants.TAG_NAMES.STYLE, styleTags, encode),\n        title: getMethodsForTag(_HelmetConstants.TAG_NAMES.TITLE, { title: title, titleAttributes: titleAttributes }, encode)\n    };\n};\n\nexports.convertReactPropstoHtmlAttributes = convertReactPropstoHtmlAttributes;\nexports.handleClientStateChange = handleClientStateChange;\nexports.mapStateOnServer = mapStateOnServer;\nexports.reducePropsToState = reducePropsToState;\nexports.requestAnimationFrame = requestAnimationFrame;\nexports.warn = warn;","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar styles = {\n  overlay: function overlay(isOpen) {\n    return {\n      position: 'fixed',\n      zIndex: 1000,\n      width: '100%',\n      height: '100%',\n      background: 'rgba(0, 0, 0, 0.3)',\n      opacity: isOpen ? 1 : 0,\n      MozTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      OTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transition: isOpen ? 'opacity 0.3s' : 'opacity 0.3s, transform 0s 0.3s'\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      zIndex: 1100,\n      width: width,\n      height: '100%',\n      MozTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  menu: function menu() {\n    return {\n      height: '100%',\n      boxSizing: 'border-box',\n      overflow: 'auto'\n    };\n  },\n\n  itemList: function itemList() {\n    return {\n      height: '100%'\n    };\n  },\n\n  item: function item() {\n    return {\n      display: 'block',\n      outline: 'none'\n    };\n  }\n};\n\nexports['default'] = styles;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar BurgerIcon = (function (_Component) {\n  _inherits(BurgerIcon, _Component);\n\n  function BurgerIcon(props) {\n    _classCallCheck(this, BurgerIcon);\n\n    _get(Object.getPrototypeOf(BurgerIcon.prototype), 'constructor', this).call(this, props);\n    this.state = {\n      hover: false\n    };\n  }\n\n  _createClass(BurgerIcon, [{\n    key: 'getLineStyle',\n    value: function getLineStyle(index) {\n      return {\n        position: 'absolute',\n        height: '20%',\n        left: 0,\n        right: 0,\n        top: 20 * (index * 2) + '%',\n        opacity: this.state.hover ? 0.6 : 1\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon = undefined;\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        opacity: 0,\n        fontSize: 8,\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: 'bm-icon',\n          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmIcon)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement(\n          'span',\n          null,\n          [0, 1, 2].map(function (bar) {\n            return _react2['default'].createElement('span', {\n              key: bar,\n              className: ('bm-burger-bars ' + _this.props.barClassName).trim(),\n              style: _extends({}, _this.getLineStyle(bar), _this.props.styles.bmBurgerBars)\n            });\n          })\n        );\n      }\n\n      return _react2['default'].createElement(\n        'div',\n        {\n          className: ('bm-burger-button ' + this.props.className).trim(),\n          style: _extends({ zIndex: 1000 }, this.props.styles.bmBurgerButton)\n        },\n        icon,\n        _react2['default'].createElement(\n          'button',\n          {\n            onClick: this.props.onClick,\n            onMouseOver: function () {\n              return _this.setState({ hover: true });\n            },\n            onMouseOut: function () {\n              return _this.setState({ hover: false });\n            },\n            style: buttonStyle\n          },\n          'Open Menu'\n        )\n      );\n    }\n  }]);\n\n  return BurgerIcon;\n})(_react.Component);\n\nexports['default'] = BurgerIcon;\n\nBurgerIcon.propTypes = {\n  barClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\n\nBurgerIcon.defaultProps = {\n  barClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar CrossIcon = (function (_Component) {\n  _inherits(CrossIcon, _Component);\n\n  function CrossIcon() {\n    _classCallCheck(this, CrossIcon);\n\n    _get(Object.getPrototypeOf(CrossIcon.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(CrossIcon, [{\n    key: 'getCrossStyle',\n    value: function getCrossStyle(type) {\n      return {\n        position: 'absolute',\n        width: 3,\n        height: 14,\n        transform: type === 'before' ? 'rotate(45deg)' : 'rotate(-45deg)'\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon;\n      var buttonWrapperStyle = {\n        position: 'absolute',\n        width: 24,\n        height: 24,\n        right: 8,\n        top: 8\n      };\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        textIndent: -9999,\n        background: 'transparent',\n        outline: 'none',\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: 'bm-cross',\n          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmCross)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement(\n          'span',\n          { style: { position: 'absolute', top: '6px', right: '14px' } },\n          ['before', 'after'].map(function (type, i) {\n            return _react2['default'].createElement('span', {\n              key: i,\n              className: ('bm-cross ' + _this.props.crossClassName).trim(),\n              style: _extends({}, _this.getCrossStyle(type), _this.props.styles.bmCross)\n            });\n          })\n        );\n      }\n\n      return _react2['default'].createElement(\n        'div',\n        {\n          className: ('bm-cross-button ' + this.props.className).trim(),\n          style: _extends({}, buttonWrapperStyle, this.props.styles.bmCrossButton)\n        },\n        icon,\n        _react2['default'].createElement(\n          'button',\n          { onClick: this.props.onClick, style: buttonStyle },\n          'Close Menu'\n        )\n      );\n    }\n  }]);\n\n  return CrossIcon;\n})(_react.Component);\n\nexports['default'] = CrossIcon;\n\nCrossIcon.propTypes = {\n  crossClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\n\nCrossIcon.defaultProps = {\n  crossClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0.4s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  },\n\n  item: function item(isOpen, width, right, nthChild) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0s 0.2s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-1,0h101c0,0-97.833,153.603-97.833,396.167C2.167,627.579,100,800,100,800H-1V0z',\n    pathOpen: 'M-1,0h101c0,0,0-1,0,395c0,404,0,405,0,405H-1V0z',\n    animate: function animate(path) {\n      path.animate({ path: this.pathOpen }, 400, window.mina.easeinout);\n    }\n  },\n\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: 120,\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : '',\n      MsTransform: right ? 'rotateY(180deg)' : '',\n      OTransform: right ? 'rotateY(180deg)' : '',\n      WebkitTransform: right ? 'rotateY(180deg)' : '',\n      transform: right ? 'rotateY(180deg)' : ''\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.3s'\n    };\n  },\n\n  menu: function menu(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      width: 180,\n      whiteSpace: 'nowrap',\n      boxSizing: 'border-box',\n      overflow: 'visible'\n    };\n  },\n\n  itemList: function itemList(isOpen, width, right) {\n    if (right) {\n      return {\n        position: 'relative',\n        left: '-110px',\n        width: '170%',\n        overflow: 'auto'\n      };\n    }\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transition: isOpen ? 'all 0.3s' : 'all 0.3s 0.1s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","window.eve = require('eve')\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16, new Date().getTime());\n                           return true;\n                       },\n    requestID,\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n        frame();\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function (timeStamp) {\n        // Manual invokation?\n        if (!timeStamp) {\n            // Frame loop stopped?\n            if (!requestID) {\n                // Start frame loop...\n                requestID = requestAnimFrame(frame);\n            }\n            return;\n        }\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        requestID = len ? requestAnimFrame(frame) : false;\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in general case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && frame();\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < 1 / p) {\n            l = s * n * n;\n        } else {\n            if (n < 2 / p) {\n                n -= 1.5 / p;\n                l = s * n * n + .75;\n            } else {\n                if (n < 2.5 / p) {\n                    n -= 2.25 / p;\n                    l = s * n * n + .9375;\n                } else {\n                    n -= 2.625 / p;\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n\n// Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.5.1\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            try {\n                w = glob.doc.querySelector(String(w));\n                return wrap(w);\n            } catch (e) {\n                return null;\n            }\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    /*\\\n     * Snap.url\n     [ method ]\n     **\n     * Wraps path into `\"url('<path>')\"`.\n     - value (string) path\n     = (string) wrapped path\n    \\*/\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  type == \"null\" && o === null ||\n            type == typeof o && o !== null ||\n            type == \"object\" && o === Object(o) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan;\n            bestLength = scanLength;\n            bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before;\n            bestLength = beforeLength;\n            bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after;\n            bestLength = afterLength;\n            bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n\n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = C == 0 ? null :\n        V == r ? (g - b) / C :\n        V == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = C == 0 ? null :\n        M == r ? (g - b) / C :\n        M == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    L = (M + m) / 2;\n    S = C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L);\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) ||\n            el.node.parentNode && wrap(el.node.parentNode) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open(postData ? \"POST\" : \"GET\", url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.type == \"tspan\") {\n            return Snap._.box(this.node.getClientRects().item(0));\n        }\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = Snap.url(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + b * this.c,\n                bNew = a * this.b + b * this.d;\n            this.e += e * this.a + f * this.c;\n            this.f += e * this.b + f * this.d;\n            this.c = c * this.a + d * this.c;\n            this.d = c * this.b + d * this.d;\n\n            this.a = aNew;\n            this.b = bNew;\n            return this;\n        };\n        /*\\\n         * Matrix.multLeft\n         [ method ]\n         **\n         * Multiplies a passed affine transform to the left: M * this.\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + c * this.b,\n                cNew = a * this.c + c * this.d,\n                eNew = a * this.e + c * this.f + e;\n            this.b = b * this.a + d * this.b;\n            this.d = b * this.c + d * this.d;\n            this.f = b * this.e + d * this.f + f;\n\n            this.a = aNew;\n            this.c = cNew;\n            this.e = eNew;\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.e += x * this.a + y * this.c;\n            this.f += x * this.b + y * this.d;\n            return this;\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.translate(cx, cy);\n            this.a *= x;\n            this.b *= x;\n            this.c *= y;\n            this.d *= y;\n            (cx || cy) && this.translate(-cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.skewX\n         [ method ]\n         **\n         * Skews the matrix along the x-axis\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skewX = function (x) {\n            return this.skew(x, 0);\n        };\n        /*\\\n         * Matrix.skewY\n         [ method ]\n         **\n         * Skews the matrix along the y-axis\n         - y (number) Angle to skew along the y-axis (in degrees).\n        \\*/\n        matrixproto.skewY = function (y) {\n            return this.skew(0, y);\n        };\n        /*\\\n         * Matrix.skew\n         [ method ]\n         **\n         * Skews the matrix\n         - y (number) Angle to skew along the y-axis (in degrees).\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skew = function (x, y) {\n            x = x || 0;\n            y = y || 0;\n            x = Snap.rad(x);\n            y = Snap.rad(y);\n            var c = math.tan(x).toFixed(9);\n            var b = math.tan(y).toFixed(9);\n            return this.add(1, b, c, 1, 0, 0);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.b], [this.c, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    /*\\\n     * Snap.deurl\n     [ method ]\n     **\n     * Unwraps path from `\"url(<path>)\"`.\n     - value (string) url path\n     = (string) unwrapped path\n    \\*/\n    Snap.deurl = function (value) {\n        var res = String(value).match(reURLValue);\n        return res ? res[2] : value;\n    }\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            var clip,\n                node = value.node;\n            while (node) {\n                if (node.nodeName === \"clipPath\") {\n                    clip = new Element(node);\n                    break;\n                }\n                if (node.nodeName === \"svg\") {\n                    clip = undefined;\n                    break;\n                }\n                node = node.parentNode;\n            }\n            if (!clip) {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        var len = stops.length,\n            start = 0,\n            j = 0;\n        function seed(i, end) {\n            var step = (end - start) / (i - j);\n            for (var k = j; k < i; k++) {\n                stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n            }\n            j = i;\n            start = end;\n        }\n        len--;\n        for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n            seed(i, stops[i].offset);\n        }\n        stops[len].offset = stops[len].offset || 100;\n        seed(len, stops[len].offset);\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.fill\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while (clazz = classes[j++]) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        /*\\\n         * Element.stops\n         [ method ]\n         **\n         * Only for gradients!\n         * Returns array of gradient stops elements.\n         = (array) the stops array.\n        \\*/\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        /*\\\n         * Element.addStop\n         [ method ]\n         **\n         * Only for gradients!\n         * Adds another stop to the gradient.\n         - color (string) stops color\n         - offset (number) stops offset 0..100\n         = (object) gradient element\n        \\*/\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            var stops = this.stops(),\n                inserted;\n            for (var i = 0; i < stops.length; i++) {\n                var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n                if (stopOffset > offset) {\n                    this.node.insertBefore(stop, stops[i].node);\n                    inserted = true;\n                    break;\n                }\n            }\n            if (!inserted) {\n                this.node.appendChild(stop);\n            }\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        /*\\\n         * Element.setStops\n         [ method ]\n         **\n         * Only for gradients!\n         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n         - str (string) gradient descriptor part after `()`.\n         = (object) gradient element\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         | g.setStops(\"#fff-#000-#f00-#fc0\");\n        \\*/\n        function GsetStops(str) {\n            var grad = str,\n                stops = this.stops();\n            if (typeof str == \"string\") {\n                grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n            }\n            if (!Snap.is(grad, \"array\")) {\n                return;\n            }\n            for (var i = 0; i < stops.length; i++) {\n                if (grad[i]) {\n                    var color = Snap.color(grad[i].color),\n                        attr = {\"offset\": grad[i].offset + \"%\"};\n                    attr[\"stop-color\"] = color.hex;\n                    if (color.opacity < 1) {\n                        attr[\"stop-opacity\"] = color.opacity;\n                    }\n                    stops[i].attr(attr);\n                } else {\n                    stops[i].remove();\n                }\n            }\n            for (i = stops.length; i < grad.length; i++) {\n                this.addStop(grad[i].color, grad[i].offset);\n            }\n            return this;\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length;\n            for (var i = 0; i < len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            el.setStops = GsetStops;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + +r, y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + (j % 2 ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!rx || !ry) {\n            return [x1, y1, x2, y2, x2, y2];\n        }\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = x * x / (rx * rx) + y * y / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    /*\\\n     * Set.remove\n     [ method ]\n     **\n     * Removes all children of the set.\n     *\n     = (object) Set object\n    \\*/\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    /*\\\n     * Set.attr\n     [ method ]\n     **\n     * Equivalent of @Element.attr.\n     = (object) Set object\n    \\*/\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Inserts set elements after given element.\n     **\n     - element (object) set will be inserted after this element\n     = (object) Set object\n    \\*/\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    /*\\\n     * Set.getBBox\n     [ method ]\n     **\n     * Union of all bboxes of the set. See @Element.getBBox.\n     = (object) bounding box descriptor. See @Element.getBBox.\n    \\*/\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Creates a clone of the set.\n     **\n     = (object) New Set object\n    \\*/\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    /*\\\n     * Snap.Set\n     [ property ]\n     **\n     * Set constructor.\n    \\*/\n    Snap.Set = Set;\n    /*\\\n     * Snap.set\n     [ method ]\n     **\n     * Creates a set and fills it with list of arguments.\n     **\n     = (object) New Set object\n     | var r = paper.rect(0, 0, 10, 10),\n     |     s1 = Snap.set(), // empty set\n     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n    \\*/\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[%a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t1 = t1 || new Snap.Matrix;\n        t2 = t2 || new Snap.Matrix;\n        t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n        t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if (tt1[0] != tt2[0] ||\n                tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) ||\n                tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + k++ + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(obj);\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (typeof b == \"string\") {\n                b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n            }\n            a = this.matrix;\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n            } else {\n                b = Snap._.transform2matrix(b, this.getBBox());\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (opacity == null) {\n            if (color == null) {\n                opacity = blur;\n                blur = 4;\n                color = \"#000\";\n            } else {\n                opacity = color;\n                color = blur;\n                blur = 4;\n            }\n        }\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\n// Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        has = \"hasOwnProperty\";\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = attrs.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n});\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    // Colours are from https://www.materialui.co\n    var red         = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n        pink        = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n        purple      = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n        deeppurple  = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n        indigo      = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n        blue        = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n        lightblue   = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n        cyan        = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n        teal        = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n        green       = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n        lightgreen  = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n        lime        = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n        yellow      = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n        amber       = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n        orange      = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n        deeporange  = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n        brown       = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n        grey        = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n        bluegrey    = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n    /*\\\n     * Snap.mui\n     [ property ]\n     **\n     * Contain Material UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.mui = {};\n    /*\\\n     * Snap.flat\n     [ property ]\n     **\n     * Contain Flat UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.flat = {};\n    function saveColor(colors) {\n        colors = colors.split(/(?=#)/);\n        var color = new String(colors[5]);\n        color[50] = colors[0];\n        color[100] = colors[1];\n        color[200] = colors[2];\n        color[300] = colors[3];\n        color[400] = colors[4];\n        color[500] = colors[5];\n        color[600] = colors[6];\n        color[700] = colors[7];\n        color[800] = colors[8];\n        color[900] = colors[9];\n        if (colors[10]) {\n            color.A100 = colors[10];\n            color.A200 = colors[11];\n            color.A400 = colors[12];\n            color.A700 = colors[13];\n        }\n        return color;\n    }\n    Snap.mui.red = saveColor(red);\n    Snap.mui.pink = saveColor(pink);\n    Snap.mui.purple = saveColor(purple);\n    Snap.mui.deeppurple = saveColor(deeppurple);\n    Snap.mui.indigo = saveColor(indigo);\n    Snap.mui.blue = saveColor(blue);\n    Snap.mui.lightblue = saveColor(lightblue);\n    Snap.mui.cyan = saveColor(cyan);\n    Snap.mui.teal = saveColor(teal);\n    Snap.mui.green = saveColor(green);\n    Snap.mui.lightgreen = saveColor(lightgreen);\n    Snap.mui.lime = saveColor(lime);\n    Snap.mui.yellow = saveColor(yellow);\n    Snap.mui.amber = saveColor(amber);\n    Snap.mui.orange = saveColor(orange);\n    Snap.mui.deeporange = saveColor(deeporange);\n    Snap.mui.brown = saveColor(brown);\n    Snap.mui.grey = saveColor(grey);\n    Snap.mui.bluegrey = saveColor(bluegrey);\n    Snap.flat.turquoise = \"#1abc9c\";\n    Snap.flat.greensea = \"#16a085\";\n    Snap.flat.sunflower = \"#f1c40f\";\n    Snap.flat.orange = \"#f39c12\";\n    Snap.flat.emerland = \"#2ecc71\";\n    Snap.flat.nephritis = \"#27ae60\";\n    Snap.flat.carrot = \"#e67e22\";\n    Snap.flat.pumpkin = \"#d35400\";\n    Snap.flat.peterriver = \"#3498db\";\n    Snap.flat.belizehole = \"#2980b9\";\n    Snap.flat.alizarin = \"#e74c3c\";\n    Snap.flat.pomegranate = \"#c0392b\";\n    Snap.flat.amethyst = \"#9b59b6\";\n    Snap.flat.wisteria = \"#8e44ad\";\n    Snap.flat.clouds = \"#ecf0f1\";\n    Snap.flat.silver = \"#bdc3c7\";\n    Snap.flat.wetasphalt = \"#34495e\";\n    Snap.flat.midnightblue = \"#2c3e50\";\n    Snap.flat.concrete = \"#95a5a6\";\n    Snap.flat.asbestos = \"#7f8c8d\";\n    /*\\\n     * Snap.importMUIColors\n     [ method ]\n     **\n     * Imports Material UI colours into global object.\n     | Snap.importMUIColors();\n     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.importMUIColors = function () {\n        for (var color in Snap.mui) {\n            if (Snap.mui.hasOwnProperty(color)) {\n                window[color] = Snap.mui[color];\n            }\n        }\n    };\n});\n\nmodule.exports = Snap\n","// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.4 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.5.4\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        objtos = Object.prototype.toString,\n        Str = String,\n        isArray = Array.isArray || function (ar) {\n            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n        },\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        eve = function (name, scope) {\n            var oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event;\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n    // Undocumented. Debug only.\n    eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = isArray(name) ? name : name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    /*\\\n     * eve.separator\n     [ method ]\n\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n     * here. Be aware that if you pass a string longer than one character it will be treated as\n     * a list of characters.\n\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n    \\*/\n    eve.separator = function (sep) {\n        if (sep) {\n            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n            sep = \"[\" + sep + \"]\";\n            separator = new RegExp(sep);\n        } else {\n            separator = /[\\.\\/]/;\n        }\n    };\n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     - name (array) if you don’t want to use separators, you can use array of strings\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment.\n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = isArray(name) ? name : Str(name).split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n        }\n        return cur;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return isArray(current_event) ? current_event : current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = isArray(name) ? name : Str(name).split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events],\n            inodes = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                        inodes.unshift({\n                            n: e,\n                            name: names[i]\n                        });\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                        inodes.unshift({\n                            n: e,\n                            name: key\n                        });\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n        // prune inner nodes in path\n        prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n            e = inodes[i];\n            for (key in e.n[e.name].f) {\n                // not empty (has listeners)\n                continue prune;\n            }\n            for (key in e.n[e.name].n) {\n                // not empty (has children)\n                continue prune;\n            }\n            // is empty\n            delete e.n[e.name];\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.off(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    glob.eve = eve;\n    typeof module != \"undefined\" && module.exports ? module.exports = eve : typeof define === \"function\" && define.amd ? define(\"eve\", [], function () { return eve; }) : glob.eve = eve;\n})(typeof window != \"undefined\" ? window : this);\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-7.312,0H0c0,0,0,113.839,0,400c0,264.506,0,400,0,400h-7.312V0z',\n    pathOpen: 'M-7.312,0H15c0,0,66,113.339,66,399.5C81,664.006,15,800,15,800H-7.312V0z;M-7.312,0H100c0,0,0,113.839,0,400c0,264.506,0,400,0,400H-7.312V0z',\n    animate: function animate(path) {\n      var pos = 0;\n      var steps = this.pathOpen.split(';');\n      var stepsTotal = steps.length;\n      var mina = window.mina;\n\n      var nextStep = function nextStep() {\n        if (pos > stepsTotal - 1) return;\n\n        path.animate({ path: steps[pos] }, pos === 0 ? 400 : 500, pos === 0 ? mina.easein : mina.elastic, function () {\n          nextStep();\n        });\n\n        pos++;\n      };\n\n      nextStep();\n    }\n  },\n\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      MsTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      OTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      WebkitTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      transform: right ? 'rotateY(180deg)' : 'rotateY(0deg)'\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: isOpen ? 'transform 0.4s 0s' : 'transform 0.4s'\n    };\n  },\n\n  menu: function menu(isOpen, width, right) {\n    width -= 140;\n    return {\n      position: 'fixed',\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n\n  item: function item(isOpen, width, right, nthChild) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s, transform 0.3s 0.4s' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n\n  closeButton: function closeButton(isOpen, width, right) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transformOrigin: right ? '100% 50%' : '0% 50%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      MsTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      OTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transformOrigin: '100%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer() {\n    return {\n      perspective: '1500px'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transition: 'all 0.5s ease-in-out'\n    };\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      perspectiveOrigin: '0% 50%',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      visibility: isOpen ? 'visible' : 'hidden',\n      MozTransform: 'translate3d(0, 0, 0)',\n      MsTransform: 'translate3d(0, 0, 0)',\n      OTransform: 'translate3d(0, 0, 0)',\n      WebkitTransform: 'translate3d(0, 0, 0)',\n      transform: 'translate3d(0, 0, 0)',\n      zIndex: 1000\n    };\n  },\n\n  overlay: function overlay(isOpen, width, right) {\n    return {\n      zIndex: 1400,\n      MozTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.5s',\n      visibility: isOpen ? 'visible' : 'hidden'\n    };\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s',\n      zIndex: 1200,\n      position: 'relative'\n    };\n  },\n\n  burgerIcon: function burgerIcon(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.1s',\n      position: 'relative',\n      zIndex: 1300\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];"],"sourceRoot":""}