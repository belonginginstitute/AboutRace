{"version":3,"sources":["webpack:///./src/components/allClips.js","webpack:///./src/templates/clip.js"],"names":["ClipCard","styled_components__WEBPACK_IMPORTED_MODULE_2__","b","div","withConfig","displayName","ClipCaption","ClipPoster","props","background","Clip","_ref","clip","link","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","gatsby__WEBPACK_IMPORTED_MODULE_3__","style","color","textDecoration","to","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_4___default","title","relationships","field_poster_image","localFile","publicURL","src","field_external_video_url","uri","frameborder","webkitallowfullscreen","mozallowfullscreen","allowfullscreen","__webpack_exports__","_ref2","data","selected","array","allNodeClip","edges","filter","el","node","field_episode","parseInt","padding","map","edge","i","key","253","e","t","r","d","f","g","n","l","o","c","p","ChosenClipCard","styled_components__WEBPACK_IMPORTED_MODULE_4__","ChosenClipCaption","Chosen","ChosenClip","react__WEBPACK_IMPORTED_MODULE_2___default","width","height","frameBorder","allowFullScreen","ClipTemplate","_this","_React$Component","call","this","state","render","_this2","nodeClip","field_re","className","margin","border","onClick","setState","teaching","field_include_in_the_teaching_se","__typename","_components_subtheme__WEBPACK_IMPORTED_MODULE_6__","article","relatedContent","faq","playable","marginLeft","_components_allClips_js__WEBPACK_IMPORTED_MODULE_3__","Component","clipQuery"],"mappings":"uJAKMA,EAAWC,EAAAC,EAAOC,IAAlBC,YAAAC,YAAA,sBAAWJ,EAAX,mNAeAK,EAAcL,EAAAC,EAAOC,IAArBC,YAAAC,YAAA,yBAAcJ,EAAd,yHAQAM,EAAaN,EAAAC,EAAOC,IAApBC,YAAAC,YAAA,wBAAaJ,EAAb,uHAMgB,SAAAO,GAAA,OAASA,EAAMC,WAAN,OAA2BD,EAAMC,WAAjC,aAGlBC,EAAO,SAAAC,GAAqB,IAAlBC,EAAkBD,EAAlBC,KAAMC,EAAYF,EAAZE,KAC5B,OACEC,EAAAC,EAAAC,cAAChB,EAAD,KAEEa,EACCC,EAAAC,EAAAC,cAACC,EAAAF,GAAKG,OAAQC,MAAM,UAAWC,eAAe,QAASC,GAAA,UAAcC,IAAUV,EAAKW,QACnFT,EAAAC,EAAAC,cAACT,GAAWE,WAAYG,EAAKY,cAAcC,oBAAsBb,EAAKY,cAAcC,mBAAmBC,UAAUC,YACjHb,EAAAC,EAAAC,cAACV,EAAD,KACEM,EAAKW,QAIPT,EAAAC,EAAAC,cAAA,UAAQO,MAAOX,EAAKW,MAAOK,KAAQhB,EAAKiB,0BAA4BjB,EAAKiB,yBAAyBC,KAAvE,+BAA0GC,YAAY,IAAIC,yBAAsBC,sBAAmBC,uBA0BrMC,EAAApB,EAjBiB,SAAAqB,GAAwB,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,SACrBC,EAAQF,EAAKG,YAAYC,MAK7B,OAHGH,IACFC,EAAQA,EAAMG,OAAQ,SAAAC,GAAA,MAAmB,QAAbL,GAA4BK,EAAGC,KAAKC,gBAAkBC,SAASR,MAG1FxB,EAAAC,EAAAC,cAAA,OAAKE,OAAQ6B,QAAS,WAEnBR,EAAMS,IAAI,SAACC,EAAMC,GAAP,OACRpC,EAAAC,EAAAC,cAACN,GAAKyC,IAAA,QAAaD,EAAKtC,KAAMqC,EAAKL,KAAM/B,eAAMuC,IAAA,SAAAC,EAAAC,EAAAJ,GAAA,aAAAA,EAAAK,EAAAD,GAAAJ,EAAAM,EAAAF,EAAA,+BAAAG,IAAAP,EAAAM,EAAAF,EAAA,8BAAAI,IAAA,IAAAC,EAAAT,EAAA,IAAAU,EAAAV,EAAAS,KAAA5C,GAAAmC,EAAA,KAAAA,EAAA,IAAAK,EAAAL,EAAAS,EAAA5C,GAAA8C,EAAAX,EAAA,KAAAY,EAAAZ,EAAA,IAAAa,GAAAb,EAAA,IAAAA,EAAA,MCvDjDc,EAAiBC,EAAA/D,EAAOC,IAAxBC,YAAAC,YAAA,wBAAiB4D,EAAjB,+EAQAC,EAAoBD,EAAA/D,EAAOC,IAA3BC,YAAAC,YAAA,2BAAoB4D,EAApB,kIASAE,EAASF,EAAA/D,EAAOC,IAAhBC,YAAAC,YAAA,gBAAS4D,EAAT,0HAUOG,EAAa,SAAAzD,GAAqB,IAAlBC,EAAkBD,EAAlBC,KACrBgB,GADuCjB,EAAZE,MAClBD,EAAKiB,0BAA4BjB,EAAKiB,yBAAyBC,KAAxE,gCAOP,OACCuC,EAAAtD,EAAAC,cAACmD,EAAD,KACEE,EAAAtD,EAAAC,cAACgD,EAAD,KACAK,EAAAtD,EAAAC,cAAA,UACIsD,MAAM,QACNC,OAAO,OACP3C,IAAKA,EACL4C,YAAY,IACZC,gBAAgB,UAGnBJ,EAAAtD,EAAAC,cAACkD,EAAD,SAAqBtD,EAAKW,SAKzBmD,cAEJ,SAAAA,IAAa,IAAAC,EAAA,OACXA,EAAAC,EAAAC,KAAAC,aACKC,SAFMJ,8BAKbK,kBAAS,IAAAC,EAAAH,KACCzC,EAASyC,KAAKtE,MAAd6B,KAER,IAAIA,EAAM,OAAO,KAEjB,IAAM6C,EAAW7C,EAAOA,EAAK6C,SAAW,KAClCC,EAAYD,GAAYA,EAAS1D,cAAc2D,SAAYD,EAAS1D,cAAc2D,YAExF,OACEd,EAAAtD,EAAAC,cAAA,OAAKoE,UAAU,eACXF,EAAUb,EAAAtD,EAAAC,cAACoD,GAAWxD,KAAMsE,IAAe,KAC7Cb,EAAAtD,EAAAC,cAAA,OAAKE,OAAS6B,QAAS,GAAIsC,OAAQ,GAAIC,2BACrCjB,EAAAtD,EAAAC,cAAA,UAAQuE,QAAS,WAAQN,EAAKO,UAAWC,gBAAzC,eAGApB,EAAAtD,EAAAC,cAAA,UAAQuE,QAAS,WAAQN,EAAKO,UAAWC,gBAAzC,YAIEN,EAASzC,OAAO,SAAAE,GAAA,OAAUqC,EAAKF,MAAMU,UAAY7C,EAAK8C,mCACrD1C,IAAI,SAACJ,EAAMM,GACR,MAAI,iBAAAN,EAAK+C,WAELtB,EAAAtD,EAAAC,cAAC4E,EAAA7E,GACCoC,IAAA,WAAgBD,EAChBA,EAAGA,EACH2C,QAASjD,EACTkD,oBAGK,aAAAlD,EAAK+C,WAEZtB,EAAAtD,EAAAC,cAAC4E,EAAA9B,GACCX,IAAA,WAAgBD,EAChBA,EAAGA,EACH6C,IAAKnD,IAGA,cAAAA,EAAK+C,WAEZtB,EAAAtD,EAAAC,cAAC4E,EAAA1F,GACCiD,IAAA,QAAaD,EACbA,EAAGA,EACHtC,KAAMgC,EACNoD,mBAAA,KAQd3B,EAAAtD,EAAAC,cAAA,MAAIE,OAAQC,MAAO,UAAW8E,WAAY,KAA1C,aACA5B,EAAAtD,EAAAC,cAACkF,EAAAnF,GAASsB,KAAMA,QA5DlBqC,CAAqBL,EAAAtD,EAAMoF,uBAoE1B,IAAMC","file":"component---src-templates-clip-js-646d8cf209fc43854c3a.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport kebabCase from 'lodash/kebabCase'\n\nconst ClipCard = styled.div`\n\twidth: 300px;\n\tbackground-color:#292929;\n\tcolor: white;\n\tdisplay:inline-block;\n\tvertical-align: top;\n\tmargin-right:30px;\n\tmargin-bottom: 30px;\n\ttransition: all .3s;\n\tborder-radius: 6px;\n\t&:hover {\n\t  transition: all .3s;\n\t}\n\tcursor: pointer;\n`\nconst ClipCaption = styled.div`\n\tfont-family: 'Lato';\n\tfont-size: 14px;\n\tline-height: 1.5;\n\tfont-weight: 300;\n\tletter-spacing: 0.04em;\n\tpadding: 15px 30px 30px 30px;\n`\nconst ClipPoster = styled.div`\n\theight:200px;\n\twidth:100%;\n\tbackground-color:red;\n\tbackground-size:cover;\n\tbackground-position: center;\n  background-image: ${props => props.background ?  `url(${props.background})` : `none`};\n`\n\nexport const Clip = ({ clip, link }) =>  {\n\treturn (\n\t\t\t<ClipCard>\n\t\t\t\t{\n\t\t\t\t\tlink ?\n\t\t\t\t\t\t<Link style={{color:'inherit', textDecoration:'none'}} to={`/clips/${kebabCase(clip.title)}`}>\n\t\t\t\t\t\t\t<ClipPoster background={clip.relationships.field_poster_image && clip.relationships.field_poster_image.localFile.publicURL} />\n\t\t\t\t\t\t\t<ClipCaption>\n\t\t\t\t\t\t\t\t{clip.title}\n\t\t\t\t\t\t\t</ClipCaption>\n\t\t\t\t\t\t</Link> :\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<iframe title={clip.title} src={`${clip.field_external_video_url && clip.field_external_video_url.uri}?title=0&byline=0&portrait=0`} frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>\n\t\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t</ClipCard>\n\t\t)\n}\n\n\nconst AllClips = ({ data, selected }) => {\n\tlet array = data.allNodeClip.edges\n\n\tif(selected)\n\t\tarray = array.filter( el => selected === 'all' ? true : el.node.field_episode === parseInt(selected) )\n\t\n\treturn (\n\t  <div style={{padding: '0 30px'}}>\n\t    {\n\t    \tarray.map((edge, i) =>\n\t\t      <Clip key={`clip-${i}`} clip={edge.node} link={true} />\n\t\t    )\n\t\t  }\n\t  </div>\n\t)\n}\n\nexport default AllClips\n\n","import React from \"react\"\nimport AllClips, { Clip } from '../components/allClips.js'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport {\n  getCards,\n  QuickFactCard,\n  FAQCard,\n  ClipCard,\n  ArticleCard\n} from '../components/subtheme'\nimport { graphql } from 'gatsby'\n\nconst ChosenClipCard = styled.div`\n  height: 100%;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: auto;\n  margin-right: 30px;\n`\nconst ChosenClipCaption = styled.div`\n  font-size: 22px;\n  font-weight: 400;\n  line-height:1.25;\n  display: inline-block;\n  padding-bottom: 30px;\n  color:#ffe4c1;\n  letter-spacing: 0.02em;\n`\nconst Chosen = styled.div`\n  background-color:black;\n  height:480px;\n  margin-bottom: 60px;\n  padding: 0px;\n  position: relative;\n  display: flex;\n  align-items: center;\n`\n\nexport const ChosenClip = ({ clip, link }) =>  {\n  const src = `${clip.field_external_video_url && clip.field_external_video_url.uri}?title=0&byline=0&portrait=0`;\n\n  /*\n    webkitAllowFullScreen=\"true\"\n    mozAllowFullScreen=\"true\"\n  */\n\n\treturn (\n\t\t<Chosen>\n\t\t  <ChosenClipCard>\n\t\t\t <iframe \n        width='720px' \n        height='100%' \n        src={src} \n        frameBorder=\"0\" \n        allowFullScreen=\"true\"\n      />\n\t\t\t</ChosenClipCard>\n     <ChosenClipCaption> {clip.title}</ChosenClipCaption>\n\t\t</Chosen>\n\t)\n}\n\nclass ClipTemplate extends React.Component {\n  \n  constructor(){\n    super()\n    this.state = {}\n  }\n\n  render() {\n    const { data } = this.props\n\n    if(!data) return null\n\n    const nodeClip = data ? data.nodeClip : null;\n    const field_re = (nodeClip && nodeClip.relationships.field_re) ? nodeClip.relationships.field_re : []\n\n    return (\n      <div className='darkwrapper'>\n        { nodeClip? <ChosenClip clip={nodeClip} /> : null }\n        <div style={{ padding: 10, margin: 10, border: `1px solid black`}}>\n          <button onClick={() => { this.setState({ teaching: false}) }}>\n            All Content\n          </button>\n          <button onClick={() => { this.setState({ teaching: true}) }}>\n            Teaching\n          </button>\n          {\n            field_re.filter(node => (!this.state.teaching || node.field_include_in_the_teaching_se) )\n            .map((node, i) => {\n                if (node.__typename == `node__article`) {\n                  return (\n                    <ArticleCard\n                      key={`article-${i}`}\n                      i={i}\n                      article={node}\n                      relatedContent\n                    />\n                  )\n                } else if (node.__typename == `node__faq`) {\n                  return (\n                    <FAQCard\n                      key={`faqcard-${i}`}\n                      i={i}\n                      faq={node}\n                    />\n                  )\n                } else if (node.__typename == `node__clip`) {\n                  return (\n                    <ClipCard\n                      key={`clip-${i}`}\n                      i={i}\n                      clip={node}\n                      playable\n                    />\n                  )\n                }\n              }\n            )\n          }\n        </div>\n        <h4 style={{color: '#ffe4c1', marginLeft: 30}}>All Clips</h4>\n        <AllClips data={data}/>\n      </div>\n    )\n  }\n}\n\nexport default ClipTemplate;\n\nexport const clipQuery = graphql`\n  query clipQuery($id: String) {\n    nodeClip(id: { eq: $id }) {\n      ...ClipFragment\n    }\n    allNodeClip {\n      edges {\n        node {\n          ...ClipFragment\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}