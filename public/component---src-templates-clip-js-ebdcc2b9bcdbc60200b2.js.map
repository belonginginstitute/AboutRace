{"version":3,"sources":["webpack:///./src/templates/clip.js","webpack:///./src/components/allClips.js"],"names":["ChosenClipCard","styled_components__WEBPACK_IMPORTED_MODULE_4__","b","div","withConfig","displayName","ChosenClipCaption","Chosen","ChosenClip","_ref","clip","src","link","field_external_video_url","uri","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","width","height","frameBorder","allowFullScreen","title","ClipTemplate","_this","_React$Component","call","this","state","render","_this2","data","props","nodeClip","field_re","relationships","className","style","padding","margin","border","onClick","setState","teaching","filter","node","field_include_in_the_teaching_se","map","i","__typename","_components_subtheme__WEBPACK_IMPORTED_MODULE_6__","key","article","relatedContent","c","faq","playable","color","marginLeft","_components_allClips_js__WEBPACK_IMPORTED_MODULE_3__","Component","clipQuery","ClipCard","styled_components__WEBPACK_IMPORTED_MODULE_2__","ClipCaption","ClipPoster","background","Clip","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","textDecoration","to","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_4___default","field_poster_image","localFile","publicURL","frameborder","webkitallowfullscreen","mozallowfullscreen","allowfullscreen","__webpack_exports__","_ref2","selected","array","allNodeClip","edges","el","field_episode","parseInt","edge"],"mappings":"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","file":"component---src-templates-clip-js-ebdcc2b9bcdbc60200b2.js","sourcesContent":["import React from \"react\"\nimport AllClips, { Clip } from '../components/allClips.js'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport {\n  getCards,\n  QuickFactCard,\n  FAQCard,\n  ClipCard,\n  ArticleCard\n} from '../components/subtheme'\nimport { graphql } from 'gatsby'\n\nconst ChosenClipCard = styled.div`\n  height: 100%;\n  position: absolute;\n  top: 0;\n  bottom: 0;\n  width: auto;\n  margin-right: 30px;\n`\nconst ChosenClipCaption = styled.div`\n  font-size: 22px;\n  font-weight: 400;\n  line-height:1.25;\n  display: inline-block;\n  padding-bottom: 30px;\n  color:#ffe4c1;\n  letter-spacing: 0.02em;\n`\nconst Chosen = styled.div`\n  background-color:black;\n  height:480px;\n  margin-bottom: 60px;\n  padding: 0px;\n  position: relative;\n  display: flex;\n  align-items: center;\n`\n\nexport const ChosenClip = ({ clip, link }) =>  {\n  const src = `${clip.field_external_video_url && clip.field_external_video_url.uri}?title=0&byline=0&portrait=0`;\n\n  /*\n    webkitAllowFullScreen=\"true\"\n    mozAllowFullScreen=\"true\"\n  */\n\n\treturn (\n\t\t<Chosen>\n\t\t  <ChosenClipCard>\n\t\t\t <iframe \n        width='720px' \n        height='100%' \n        src={src} \n        frameBorder=\"0\" \n        allowFullScreen=\"true\"\n      />\n\t\t\t</ChosenClipCard>\n     <ChosenClipCaption> {clip.title}</ChosenClipCaption>\n\t\t</Chosen>\n\t)\n}\n\nclass ClipTemplate extends React.Component {\n  \n  constructor(){\n    super()\n    this.state = {}\n  }\n\n  render() {\n    const { data } = this.props\n\n    if(!data) return null\n\n    const nodeClip = data ? data.nodeClip : null;\n    const field_re = (nodeClip && nodeClip.relationships.field_re) ? nodeClip.relationships.field_re : []\n\n    return (\n      <div className='darkwrapper'>\n        { nodeClip? <ChosenClip clip={nodeClip} /> : null }\n        <div style={{ padding: 10, margin: 10, border: `1px solid black`}}>\n          <button onClick={() => { this.setState({ teaching: false}) }}>\n            All Content\n          </button>\n          <button onClick={() => { this.setState({ teaching: true}) }}>\n            Teaching\n          </button>\n          {\n            field_re.filter(node => (!this.state.teaching || node.field_include_in_the_teaching_se) )\n            .map((node, i) => {\n                if (node.__typename == `node__article`) {\n                  return (\n                    <ArticleCard\n                      key={`article-${i}`}\n                      i={i}\n                      article={node}\n                      relatedContent\n                    />\n                  )\n                } else if (node.__typename == `node__faq`) {\n                  return (\n                    <FAQCard\n                      key={`faqcard-${i}`}\n                      i={i}\n                      faq={node}\n                    />\n                  )\n                } else if (node.__typename == `node__clip`) {\n                  return (\n                    <ClipCard\n                      key={`clip-${i}`}\n                      i={i}\n                      clip={node}\n                      playable\n                    />\n                  )\n                }\n              }\n            )\n          }\n        </div>\n        <h4 style={{color: '#ffe4c1', marginLeft: 30}}>All Clips</h4>\n        <AllClips data={data}/>\n      </div>\n    )\n  }\n}\n\nexport default ClipTemplate;\n\nexport const clipQuery = graphql`\n  query clipQuery($id: String) {\n    nodeClip(id: { eq: $id }) {\n      ...ClipFragment\n    }\n    allNodeClip {\n      edges {\n        node {\n          ...ClipFragment\n        }\n      }\n    }\n  }\n`","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport kebabCase from 'lodash/kebabCase'\n\nconst ClipCard = styled.div`\n\twidth: 300px;\n\tbackground-color:#292929;\n\tcolor: white;\n\tdisplay:inline-block;\n\tvertical-align: top;\n\tmargin-right:30px;\n\tmargin-bottom: 30px;\n\ttransition: all .3s;\n\tborder-radius: 6px;\n\t&:hover {\n\t  transition: all .3s;\n\t}\n\tcursor: pointer;\n`\nconst ClipCaption = styled.div`\n\tfont-family: 'Lato';\n\tfont-size: 14px;\n\tline-height: 1.5;\n\tfont-weight: 300;\n\tletter-spacing: 0.04em;\n\tpadding: 15px 30px 30px 30px;\n`\nconst ClipPoster = styled.div`\n\theight:200px;\n\twidth:100%;\n\tbackground-color:red;\n\tbackground-size:cover;\n\tbackground-position: center;\n  background-image: ${props => props.background ?  `url(${props.background})` : `none`};\n`\n\nexport const Clip = ({ clip, link }) =>  {\n\treturn (\n\t\t\t<ClipCard>\n\t\t\t\t{\n\t\t\t\t\tlink ?\n\t\t\t\t\t\t<Link style={{color:'inherit', textDecoration:'none'}} to={`/clips/${kebabCase(clip.title)}`}>\n\t\t\t\t\t\t\t<ClipPoster background={clip.relationships.field_poster_image && clip.relationships.field_poster_image.localFile.publicURL} />\n\t\t\t\t\t\t\t<ClipCaption>\n\t\t\t\t\t\t\t\t{clip.title}\n\t\t\t\t\t\t\t</ClipCaption>\n\t\t\t\t\t\t</Link> :\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<iframe title={clip.title} src={`${clip.field_external_video_url && clip.field_external_video_url.uri}?title=0&byline=0&portrait=0`} frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>\n\t\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t</ClipCard>\n\t\t)\n}\n\n\nconst AllClips = ({ data, selected }) => {\n\tlet array = data.allNodeClip.edges\n\n\tif(selected)\n\t\tarray = array.filter( el => selected === 'all' ? true : el.node.field_episode === parseInt(selected) )\n\t\n\treturn (\n\t  <div style={{padding: '0 30px'}}>\n\t    {\n\t    \tarray.map((edge, i) =>\n\t\t      <Clip key={`clip-${i}`} clip={edge.node} link={true} />\n\t\t    )\n\t\t  }\n\t  </div>\n\t)\n}\n\nexport default AllClips\n\n"],"sourceRoot":""}