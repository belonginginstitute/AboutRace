{"version":3,"sources":["webpack:///./node_modules/query-string/index.js","webpack:///./node_modules/strict-uri-encode/index.js","webpack:///./node_modules/decode-uri-component/index.js","webpack:///./src/pages/teaching.js"],"names":["strictUriEncode","__webpack_require__","decodeComponent","encode","value","options","strict","encodeURIComponent","decode","extract","input","queryStart","indexOf","slice","parse","formatter","result","arrayFormat","key","accumulator","exec","replace","concat","Object","assign","ret","create","trim","param","split","keys","sort","reduce","Boolean","Array","isArray","keysSorter","a","b","Number","map","exports","stringify","obj","index","join","value2","push","length","filter","x","parseUrl","url","query","module","str","charCodeAt","toString","toUpperCase","singleMatcher","RegExp","multiMatcher","decodeComponents","components","decodeURIComponent","err","left","right","prototype","call","tokens","match","i","encodedURI","TypeError","replaceMap","%FE%FF","%FF%FE","entries","queryString","Wrapper","styled_components__WEBPACK_IMPORTED_MODULE_3__","div","withConfig","displayName","IntroText","SubTitle","h4","closeHandler","gatsby__WEBPACK_IMPORTED_MODULE_4__","c","CloseButton","__webpack_exports__","default","_ref","data","location","queryParams","search","lesson","lessonData","allNodeLessonPlan","edges","edge","node","id","react__WEBPACK_IMPORTED_MODULE_2___default","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_8__","_components_overlay__WEBPACK_IMPORTED_MODULE_6__","visible","onClick","title","dangerouslySetInnerHTML","__html","field_lesson_plan","processed","className","style","padding","field_subjects","field_grade_levels","field_lesson_summary","field_objectives","to","_components_SubthemeContainer__WEBPACK_IMPORTED_MODULE_7__","articles","allNodeArticle","interviews","allNodeInterview"],"mappings":"2FACA,MAAAA,EAAAC,EAAA,KACAC,EAAAD,EAAA,KAwFA,SAAAE,EAAAC,EAAAC,GACA,OAAAA,EAAAF,OACAE,EAAAC,OAAAN,EAAAI,GAAAG,mBAAAH,GAGAA,EAGA,SAAAI,EAAAJ,EAAAC,GACA,OAAAA,EAAAG,OACAN,EAAAE,GAGAA,EAiBA,SAAAK,EAAAC,GACA,MAAAC,EAAAD,EAAAE,QAAA,KACA,WAAAD,EACA,GAEAD,EAAAG,MAAAF,EAAA,GAGA,SAAAG,EAAAJ,EAAAL,GAGA,MAAAU,EA3FA,SAAAV,GACA,IAAAW,EAEA,OAAAX,EAAAY,aACA,YACA,OAAAC,EAAAd,EAAAe,KACAH,EAAA,aAAAI,KAAAF,GAEAA,IAAAG,QAAA,eAEAL,YAKAG,EAAAD,KACAC,EAAAD,OAGAC,EAAAD,GAAAF,EAAA,IAAAZ,GARAe,EAAAD,GAAAd,GAUA,cACA,OAAAc,EAAAd,EAAAe,KACAH,EAAA,UAAAI,KAAAF,GACAA,IAAAG,QAAA,YAEAL,WAKAG,EAAAD,GAKAC,EAAAD,MAAAI,OAAAH,EAAAD,GAAAd,GAJAe,EAAAD,IAAAd,GALAe,EAAAD,GAAAd,GAWA,QACA,OAAAc,EAAAd,EAAAe,cACAA,EAAAD,GAKAC,EAAAD,MAAAI,OAAAH,EAAAD,GAAAd,GAJAe,EAAAD,GAAAd,IAzCA,CAyFAC,EAAAkB,OAAAC,QAA0BhB,UAAAS,YAAA,QAAkCZ,IAK5DoB,EAAAF,OAAAG,OAAA,MAEA,oBAAAhB,EACA,OAAAe,EAKA,KAFAf,IAAAiB,OAAAN,QAAA,cAGA,OAAAI,EAGA,UAAAG,KAAAlB,EAAAmB,MAAA,MACA,IAAAX,EAAAd,GAAAwB,EAAAP,QAAA,WAAAQ,MAAA,KAIAzB,aAAA,KAAAI,EAAAJ,EAAAC,GAEAU,EAAAP,EAAAU,EAAAb,GAAAD,EAAAqB,GAGA,OAAAF,OAAAO,KAAAL,GAAAM,OAAAC,OAAA,CAAAhB,EAAAE,KACA,MAAAd,EAAAqB,EAAAP,GAQA,OAPAe,QAAA7B,IAAA,iBAAAA,IAAA8B,MAAAC,QAAA/B,GAEAY,EAAAE,GAtDA,SAAAkB,EAAA1B,GACA,OAAAwB,MAAAC,QAAAzB,GACAA,EAAAqB,OAGA,iBAAArB,EACA0B,EAAAb,OAAAO,KAAApB,IACAqB,KAAA,CAAAM,EAAAC,IAAAC,OAAAF,GAAAE,OAAAD,IACAE,IAAAtB,GAAAR,EAAAQ,IAGAR,EAXA,CAsDAN,GAEAY,EAAAE,GAAAd,EAGAY,GACEO,OAAAG,OAAA,OAGFe,EAAAhC,UACAgC,EAAA3B,QAEA2B,EAAAC,UAAA,EAAAC,EAAAtC,WAOAA,EAAAkB,OAAAC,QALArB,UACAG,UACAW,YAAA,QAGAZ,IAEA0B,OACA1B,EAAA0B,KAAA,UAGA,MAAAhB,EArLA,SAAAV,GACA,OAAAA,EAAAY,aACA,YACA,OAAAC,EAAAd,EAAAwC,IACA,OAAAxC,GACAD,EAAAe,EAAAb,GACA,IACAuC,EACA,KACAC,KAAA,KACA1C,EAAAe,EAAAb,GACA,IACAF,EAAAyC,EAAAvC,GACA,KACAF,EAAAC,EAAAC,IACAwC,KAAA,IAEA,cACA,OAAA3B,EAAAd,IACA,OAAAA,GAAAD,EAAAe,EAAAb,GAAA,MAAAwC,KAAA,KACA1C,EAAAe,EAAAb,GACA,MACAF,EAAAC,EAAAC,IACAwC,KAAA,IAEA,QACA,OAAA3B,EAAAd,IACA,OAAAA,EAAAD,EAAAe,EAAAb,IACAF,EAAAe,EAAAb,GACA,IACAF,EAAAC,EAAAC,IACAwC,KAAA,KA/BA,CAqLAxC,GAEA,OAAAsC,EAAApB,OAAAO,KAAAa,GAAAZ,KAAA1B,EAAA0B,MAAAS,IAAAtB,IACA,MAAAd,EAAAuC,EAAAzB,GAEA,YAAAd,EACA,SAGA,UAAAA,EACA,OAAAD,EAAAe,EAAAb,GAGA,GAAA6B,MAAAC,QAAA/B,GAAA,CACA,MAAAY,KAEA,UAAA8B,KAAA1C,EAAAS,iBACAiC,GAIA9B,EAAA+B,KAAAhC,EAAAG,EAAA4B,EAAA9B,EAAAgC,SAGA,OAAAhC,EAAA6B,KAAA,KAGA,OAAA1C,EAAAe,EAAAb,GAAA,IAAAF,EAAAC,EAAAC,KACE4C,OAAAC,KAAAF,OAAA,GAAAH,KAAA,UAGFJ,EAAAU,SAAA,EAAAzC,EAAAL,MAEA+C,IAAA1C,EAAAmB,MAAA,YACAwB,MAAAvC,EAAAL,EAAAC,GAAAL,wCC1NAiD,EAAAb,QAAAc,IAAAhD,mBAAAgD,GAAAlC,QAAA,WAAA6B,OAA6EA,EAAAM,WAAA,GAAAC,SAAA,IAAAC,oDCA7E,IACAC,EAAA,IAAAC,OADA,eACA,MACAC,EAAA,IAAAD,OAAA,wBAEA,SAAAE,EAAAC,EAAAlC,GACA,IAEA,OAAAmC,mBAAAD,EAAAlB,KAAA,KACE,MAAAoB,IAIF,OAAAF,EAAAf,OACA,OAAAe,EAGAlC,KAAA,EAGA,IAAAqC,EAAAH,EAAAlD,MAAA,EAAAgB,GACAsC,EAAAJ,EAAAlD,MAAAgB,GAEA,OAAAK,MAAAkC,UAAA9C,OAAA+C,QAAAP,EAAAI,GAAAJ,EAAAK,IAGA,SAAA3D,EAAAE,GACA,IACA,OAAAsD,mBAAAtD,GACE,MAAAuD,GAGF,IAFA,IAAAK,EAAA5D,EAAA6D,MAAAZ,GAEAa,EAAA,EAAiBA,EAAAF,EAAAtB,OAAmBwB,IAGpCF,GAFA5D,EAAAoD,EAAAQ,EAAAE,GAAA3B,KAAA,KAEA0B,MAAAZ,GAGA,OAAAjD,GAyCA4C,EAAAb,QAAA,SAAAgC,GACA,oBAAAA,EACA,UAAAC,UAAA,6DAAAD,EAAA,KAGA,IAIA,OAHAA,IAAApD,QAAA,WAGA2C,mBAAAS,GACE,MAAAR,GAEF,OAjDA,SAAAvD,GAQA,IANA,IAAAiE,GACAC,SAAA,KACAC,SAAA,MAGAN,EAAAV,EAAAzC,KAAAV,GACA6D,GAAA,CACA,IAEAI,EAAAJ,EAAA,IAAAP,mBAAAO,EAAA,IACG,MAAAN,GACH,IAAAjD,EAAAR,EAAA+D,EAAA,IAEAvD,IAAAuD,EAAA,KACAI,EAAAJ,EAAA,IAAAvD,GAIAuD,EAAAV,EAAAzC,KAAAV,GAIAiE,EAAA,WAIA,IAFA,IAAAG,EAAAvD,OAAAO,KAAA6C,GAEAH,EAAA,EAAgBA,EAAAM,EAAA9B,OAAoBwB,IAAA,CAEpC,IAAAtD,EAAA4D,EAAAN,GACA9D,IAAAW,QAAA,IAAAuC,OAAA1C,EAAA,KAAAyD,EAAAzD,IAGA,OAAAR,EAlCA,CAiDA+D,mKCnFMM,EAAc9E,EAAQ,KAEtB+E,EAAUC,EAAA3C,EAAO4C,IAAjBC,YAAAC,YAAA,qBAAUH,EAAV,0CAKAI,EAAYJ,EAAA3C,EAAO4C,IAAnBC,YAAAC,YAAA,uBAAYH,EAAZ,qHAUAK,EAAWL,EAAA3C,EAAOiD,GAAlBJ,YAAAC,YAAA,sBAAWH,EAAX,wBAIAO,EAAe,kBAAMjE,OAAAkE,EAAAC,EAAAnE,CAAAwB,MAErB4C,EAAcV,EAAA3C,EAAO4C,IAArBC,YAAAC,YAAA,yBAAcH,EAAd,2DAONW,EAAAC,QAAA,SAAeC,GAAwB,IAArBC,EAAqBD,EAArBC,KAAMC,EAAeF,EAAfE,SAEhBC,EAAclB,EAAYjE,MAAMkF,EAASE,QACvCC,EAAWF,EAAXE,OACFC,EAAcD,EAAiBJ,EAAKM,kBAAkBC,MAAMrD,OAAQ,SAAAsD,GAAA,OAAQA,EAAKC,KAAKC,KAAON,IAAQ,GAAIK,KAAlF,KAE7B,OACEE,EAAArE,EAAAsE,cAACC,EAAAvE,GAAO2D,SAAUA,GAChBU,EAAArE,EAAAsE,cAAC3B,EAAD,KACE0B,EAAArE,EAAAsE,cAACE,EAAAxE,GAAQoE,GAAG,eAAeK,UAAWX,GAElCC,GACAM,EAAArE,EAAAsE,cAACE,EAAAvE,EAAD,KACEoE,EAAArE,EAAAsE,cAACE,EAAAnB,EAAD,KACEgB,EAAArE,EAAAsE,cAAChB,GAAYoB,QAASvB,GAAtB,SACAkB,EAAArE,EAAAsE,cAAA,WAAMP,EAAWY,QAEnBN,EAAArE,EAAAsE,cAAA,OACEM,yBACEC,OAAQd,EAAWe,kBAAkBC,eAM/CV,EAAArE,EAAAsE,cAACtB,EAAD,4GAIAqB,EAAArE,EAAAsE,cAAA,0BACAD,EAAArE,EAAAsE,cAAA,OAAKU,UAAU,MAAMC,OAAQC,QAAS,WAEpCxB,EAAKM,kBAAkBC,MAAM9D,IAAI,SAAC+D,EAAM/B,GAAP,OAC/BkC,EAAArE,EAAAsE,cAAA,OAAKU,UAAU,cAAcC,OAAQC,QAAQ,IAAKrG,IAAA,YAAiBsD,GACjEkC,EAAArE,EAAAsE,cAAA,UAAKJ,EAAKC,KAAKQ,OACfN,EAAArE,EAAAsE,cAAA,WACED,EAAArE,EAAAsE,cAACrB,EAAD,kBACAoB,EAAArE,EAAAsE,cAAA,KAAGM,yBAA2BC,OAAQX,EAAKC,KAAKgB,gBAAkBjB,EAAKC,KAAKgB,eAAeJ,cAE7FV,EAAArE,EAAAsE,cAAA,WACED,EAAArE,EAAAsE,cAACrB,EAAD,sBACAoB,EAAArE,EAAAsE,cAAA,KAAGM,yBAA2BC,OAAQX,EAAKC,KAAKiB,oBAAsBlB,EAAKC,KAAKiB,mBAAmBL,cAErGV,EAAArE,EAAAsE,cAAA,WACED,EAAArE,EAAAsE,cAACrB,EAAD,kBACAoB,EAAArE,EAAAsE,cAAA,KAAGM,yBAA2BC,OAAQX,EAAKC,KAAKkB,sBAAwBnB,EAAKC,KAAKkB,qBAAqBN,cAEzGV,EAAArE,EAAAsE,cAAA,WACED,EAAArE,EAAAsE,cAACrB,EAAD,oBACAoB,EAAArE,EAAAsE,cAAA,KAAGM,yBAA2BC,OAAQX,EAAKC,KAAKmB,kBAAoBpB,EAAKC,KAAKmB,iBAAiBP,cAEjGV,EAAArE,EAAAsE,cAAClB,EAAApD,GAAKuF,GAAA,IAAQ7C,EAAYrC,UAAZnB,OAAAC,UAA2ByE,GAAaE,OAAQI,EAAKC,KAAKC,OACtEC,EAAArE,EAAAsE,cAAA,uCAQRD,EAAArE,EAAAsE,cAAA,sBAEEpF,OAAAsG,EAAAvF,EAAAf,EACEuG,SAAU/B,EAAKgC,eAAezB,MAAM9D,IAAI,SAAA+D,GAAA,OAAQA,EAAKC,SAIzDE,EAAArE,EAAAsE,cAAA,wBAEEpF,OAAAsG,EAAAvF,EAAAf,EACEyG,WAAYjC,EAAKkC,iBAAiB3B,MAAM9D,IAAI,SAAA+D,GAAA,OAAQA,EAAKC,YAQ9D,IAAMnD","file":"component---src-pages-teaching-js-8daa00d41aa052337278.js","sourcesContent":["'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, index) => {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, options),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, options)\n\t\t\t\t].join('');\n\t\t\t};\n\t\tcase 'bracket':\n\t\t\treturn (key, value) => {\n\t\t\t\treturn value === null ? [encode(key, options), '[]'].join('') : [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, options)\n\t\t\t\t].join('');\n\t\t\t};\n\t\tdefault:\n\t\t\treturn (key, value) => {\n\t\t\t\treturn value === null ? encode(key, options) : [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, options)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction extract(input) {\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parse(input, options) {\n\toptions = Object.assign({decode: true, arrayFormat: 'none'}, options);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof input !== 'string') {\n\t\treturn ret;\n\t}\n\n\tinput = input.trim().replace(/^[?#&]/, '');\n\n\tif (!input) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of input.split('&')) {\n\t\tlet [key, value] = param.replace(/\\+/g, ' ').split('=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : decode(value, options);\n\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\treturn Object.keys(ret).sort().reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (obj, options) => {\n\tconst defaults = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t};\n\n\toptions = Object.assign(defaults, options);\n\n\tif (options.sort === false) {\n\t\toptions.sort = () => {};\n\t}\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\treturn obj ? Object.keys(obj).sort(options.sort).map(key => {\n\t\tconst value = obj[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tconst result = [];\n\n\t\t\tfor (const value2 of value.slice()) {\n\t\t\t\tif (value2 === undefined) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, value2, result.length));\n\t\t\t}\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&') : '';\n};\n\nexports.parseUrl = (input, options) => {\n\treturn {\n\t\turl: input.split('?')[0] || '',\n\t\tquery: parse(extract(input), options)\n\t};\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link, push, graphql } from 'gatsby'\nimport kebabCase from 'lodash/kebabCase'\nimport { Overlay, OverlayHeader, OverlayBody }  from '../components/overlay'\nimport { getCards } from '../components/SubthemeContainer'\nimport Layout from \"../components/layout\"\n\nconst queryString = require('query-string');\n\nconst Wrapper = styled.div`\n  max-width: 100%;\n  background-color: gray;\n`\n\nconst IntroText = styled.div`\n  font-weight: 300;\n  font-size: 48px;\n  line-height: 1.25;\n  z-index:99999;\n  padding-top: 60px;\n  margin: 0 45px;\n  font-family: 'Lato';\n`\n\nconst SubTitle = styled.h4`\n  margin-bottom: 15px;\n`\n\nconst closeHandler = () => push(`?`)\n\nconst CloseButton = styled.div`\n  float: right;\n  color: red;\n  cursor: pointer;\n  font-weight: bold;\n`\n\nexport default ({ data, location }) => {\n\n  const queryParams = queryString.parse(location.search)\n  const { lesson } = queryParams;\n  const lessonData = !lesson ? null : (data.allNodeLessonPlan.edges.filter( edge => edge.node.id === lesson)[0]).node\n\n  return (\n    <Layout location={location}>\n      <Wrapper>\n        <Overlay id=\"film-overlay\" visible={!!lesson}>\n          { \n            lessonData && \n            <OverlayBody>\n              <OverlayHeader>\n                <CloseButton onClick={closeHandler}>Close</CloseButton>\n                <div>{lessonData.title}</div>\n              </OverlayHeader>\n              <div\n                dangerouslySetInnerHTML={{\n                  __html: lessonData.field_lesson_plan.processed,\n                }}\n              />\n            </OverlayBody>\n          }\n        </Overlay>\n        <IntroText>\n          Teach topics from the film with specially curated lesson plans, handouts, articles, and interviews.\n        </IntroText>\n\n        <h2>Lesson Plans</h2>\n        <div className=\"row\" style={{padding: '0 30px'}}>\n        {\n          data.allNodeLessonPlan.edges.map((edge, i) => (\n            <div className=\"articleCard\" style={{padding:30}} key={`teaching-${i}`}>\n              <h2>{edge.node.title}</h2>\n              <div>\n                <SubTitle>Subjects:</SubTitle>\n                <p dangerouslySetInnerHTML={{ __html: edge.node.field_subjects && edge.node.field_subjects.processed }} />\n              </div>\n              <div>\n                <SubTitle>Grade Levels:</SubTitle>\n                <p dangerouslySetInnerHTML={{ __html: edge.node.field_grade_levels && edge.node.field_grade_levels.processed }} />\n              </div>\n              <div>\n                <SubTitle>Overview:</SubTitle>\n                <p dangerouslySetInnerHTML={{ __html: edge.node.field_lesson_summary && edge.node.field_lesson_summary.processed }} />\n              </div>\n              <div>\n                <SubTitle>Objectives:</SubTitle>\n                <p dangerouslySetInnerHTML={{ __html: edge.node.field_objectives && edge.node.field_objectives.processed }} />\n              </div>\n              <Link to={`?${queryString.stringify({ ...queryParams, lesson: edge.node.id })}`}>\n                <button>\n                  View lesson plan\n                </button>\n              </Link>\n            </div>\n          ))\n        }\n        </div>\n        <h2>Articles</h2>\n        {\n          getCards({\n            articles: data.allNodeArticle.edges.map(edge => edge.node),\n          })\n        }\n\n        <h2>Interviews</h2>\n        {\n          getCards({\n            interviews: data.allNodeInterview.edges.map(edge => edge.node),\n          })\n        }\n     </Wrapper>\n   </Layout>\n  )\n}\n\nexport const query = graphql`\n  query TeachingQuery {\n    allNodeLessonPlan {\n      edges {\n        node {\n          id\n          title\n          field_activity{\n            processed\n          }\n          field_overview {\n            processed\n          }\n          field_subjects {\n            processed\n          }\n          field_objectives {\n            processed\n          }\n          field_copyright_a {\n            processed\n          }\n          field_description {\n            processed\n          }\n          field_lesson_plan {\n            processed\n          }\n          field_grade_levels {\n            processed\n          }\n          field_lesson_summary {\n            processed\n          }\n          field_time_allotment {\n            processed\n          }\n          field_lesson_plan_author {\n            processed\n          }\n          field_less_plan_author_bio {\n            processed\n          }\n        }\n      }\n    }\n    allNodeArticle(filter: { field_include_in_the_teaching_se: { eq: true }}) {\n      edges {\n        node {\n          ... ArticleFragment\n        }\n      }\n    }\n    allNodeInterview(filter: { field_include: { eq: true }}) {\n      edges {\n        node {\n          ... InterviewFragment\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}