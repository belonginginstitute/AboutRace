{"version":3,"sources":["webpack:///./src/pages/qa.js"],"names":["queryString","__webpack_require__","Title","styled_components__WEBPACK_IMPORTED_MODULE_4__","b","div","withConfig","displayName","IntroText","Summary","_ref","data","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","className","gatsby__WEBPACK_IMPORTED_MODULE_5__","to","fields","slug","field_question_summary","processed","field_title","QA","props","_this","_Component","call","this","onSelected","selected","queryParams","parse","window","location","search","episode","stringify","Object","assign","history","pushState","document","title","setState","state","componentDidMount","render","_this$props","_components_layout__WEBPACK_IMPORTED_MODULE_8__","style","backgroundColor","_components_Filter__WEBPACK_IMPORTED_MODULE_7__","color","allNodeFaq","edges","map","edge","i","key","node","react__WEBPACK_IMPORTED_MODULE_3__","Component","__webpack_exports__","default","h","query"],"mappings":"qOAOMA,EAAcC,EAAQ,KAEtBC,EAAQC,EAAAC,EAAOC,IAAfC,YAAAC,YAAA,aAAQJ,EAAR,KAIAK,EAAYL,EAAAC,EAAOC,IAAnBC,YAAAC,YAAA,iBAAYJ,EAAZ,uGAUAM,EAAU,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KACjB,OACIC,EAAAC,EAAAC,cAAA,OAAKC,UAAW,eAEdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBAEbH,EAAAC,EAAAC,cAACZ,EAAD,KACEU,EAAAC,EAAAC,cAACE,EAAAH,GAAKI,GAAA,OAAWN,EAAKO,OAAOC,MAEzBR,EAAKS,uBACDT,EAAKS,uBAAuBC,UAC5BV,EAAKW,YAAYD,eAW/BE,cACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAA,OACjBA,EAAAC,EAAAC,KAAAC,KAAMJ,IAANI,MAQFC,WAAa,SAAAC,GACX,IAAIC,EAAc/B,EAAYgC,MAAMC,OAAOC,SAASC,QACpDJ,EAAYK,QAAUN,EACtB,IAAMK,EAAS,IAAMnC,EAAYqC,UAAZC,OAAAC,UAA2BR,IAEhDE,OAAOO,QAAQC,aAAcR,OAAOS,SAASC,MAAOR,GAEpDV,EAAKmB,UAAUd,cAZfL,EAAKoB,OACHf,SAHe,OAFAL,sCAmBnBqB,6BACE,IAEMhB,EAFc9B,EAAYgC,MAAMC,OAAOC,SAASC,QAC9CC,SAC6B,MAErCR,KAAKgB,UAAUd,gBAGjBiB,kBAAS,IACCjB,EAAaF,KAAKiB,MAAlBf,SADDkB,EAEoBpB,KAAKJ,MAAxBb,EAFDqC,EAECrC,KAAMuB,EAFPc,EAEOd,SAEd,OACEtB,EAAAC,EAAAC,cAACmC,EAAApC,GAAOqB,SAAUA,GAChBtB,EAAAC,EAAAC,cAAA,OACEoC,OACEC,gBAAiB,SAGrBvC,EAAAC,EAAAC,cAACsC,EAAAvC,GAAOwC,MAAM,QAAQvB,SAAUA,EAAUD,WAAYD,KAAKC,aAC3DjB,EAAAC,EAAAC,cAACN,EAAD,+KAKEG,EAAK2C,WAAWC,MAAMC,IAAI,SAACC,EAAMC,GAAP,OACxB9C,EAAAC,EAAAC,cAACL,GAAQkD,IAAA,MAAWD,EAAK/C,KAAM8C,EAAKG,cA9C1CrC,CAAWsC,EAAAC,WA0DjBC,EAAAC,QAAAC,EAEO,IAAMC","file":"component---src-pages-qa-js-38fa76b6145cce6ccb53.js","sourcesContent":["import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { Link, graphql} from 'gatsby'\nimport kebabCase from 'lodash/kebabCase'\nimport Filter from '../components/Filter'\nimport Layout from \"../components/layout\"\n\nconst queryString = require('query-string');\n\nconst Title = styled.div`\n    \n`\n\nconst IntroText = styled.div`\n  font-weight: 300;\n  font-size: 48px;\n  line-height: 1.25;\n  z-index:99999;\n  margin: 60px 45px;\n  font-family: 'Lato';\n`\n\n\nconst Summary = ({ data }) => {\n  return (\n      <div className={\"articleCard\"}>\n       \n        <div className=\"articleExcerpt\">\n          \n          <Title>\n            <Link to={`/qa/${data.fields.slug}`}>\n              {\n                data.field_question_summary \n                  ? data.field_question_summary.processed\n                  : data.field_title.processed\n              }\n            </Link>\n          </Title>\n          \n        </div>\n       \n      </div>\n  )\n}///\n\nclass QA extends Component {\n  constructor(props) {\n    super(props);\n    const selected = 'all'\n\n    this.state = {\n      selected\n    };\n  }\n\n  onSelected = selected => {\n    let queryParams = queryString.parse(window.location.search)\n    queryParams.episode = selected;\n    const search = `?` + queryString.stringify({ ...queryParams});\n\n    window.history.pushState({}, window.document.title, search)\n\n    this.setState({selected})\n  }\n\n  componentDidMount() {\n    const queryParams = queryString.parse(window.location.search)\n    const { episode } = queryParams;\n    const selected = episode ? episode : 'all';\n\n    this.setState({selected})\n  }\n\n  render() {\n    const { selected } = this.state;\n    const { data, location } = this.props;\n\n    return (\n      <Layout location={location}>\n        <div\n          style={{\n            backgroundColor: 'gray'\n          }}\n        >\n        <Filter color='black' selected={selected} onSelected={this.onSelected}/>\n        <IntroText>\n          The experts answer your questions about issues from the film.\n          Does race have a biological basis? Has the idea of race always been with us? Why does race still matter?\n        </IntroText>\n        {\n          data.allNodeFaq.edges.map((edge, i) =>\n            <Summary key={`QA-${i}`} data={edge.node} />\n          )\n        }\n        </div>\n      </Layout>\n    )\n  }\n}\n\n// TODO: uncomment this once episode information is in the data\n// data.allNodeFaq.edges.filter( el => selected === 'all' ? true : el.node.field_episode === parseInt(selected) ).map((edge, i) =>\n\nexport default QA;\n\nexport const query = graphql`\n  query QAQuery {\n    allNodeFaq {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          field_title {\n            processed\n          }\n          field_question_summary {\n            processed\n          }\n        }\n      }\n    }\n  }\n`\n"],"sourceRoot":""}