{"version":3,"sources":["webpack:///./src/pages/themes-articles.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["ContentNodeComponent","_ref","data","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","title","SubThemeComponent","_ref2","name","relationships","articles","map","article","style","color","ThemeComponent","_ref3","subthemes","subTheme","t","default","_ref4","allTaxonomyTermThemes","edges","_ref5","node","query","dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e"],"mappings":"gKAGMA,EAAuB,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OAC3BC,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,yBADF,KAC6BH,EAAKI,QAI9BC,EAAoB,SAAAC,GAAA,IAAGN,EAAHM,EAAGN,KAAH,OACxBC,EAAAC,EAAAC,cAAA,uBACYF,EAAAC,EAAAC,cAAA,cAASH,EAAKO,MACvBP,EAAKQ,cAAcC,SAClBR,EAAAC,EAAAC,cAAA,UACGH,EAAKQ,cAAcC,SAASC,IAAI,SAAAC,GAAA,OAC/BV,EAAAC,EAAAC,cAACL,GAAqBE,KAAMW,OAIhCV,EAAAC,EAAAC,cAAA,QAAMS,OAASC,MAAO,QAAtB,oBAKAC,EAAiB,SAAAC,GAAA,IAAGf,EAAHe,EAAGf,KAAH,OACrBC,EAAAC,EAAAC,cAAA,oBACSF,EAAAC,EAAAC,cAAA,cAASH,EAAKO,MACpBP,EAAKQ,cAAcQ,UAClBf,EAAAC,EAAAC,cAAA,UACGH,EAAKQ,cAAcQ,UAAUN,IAAI,SAAAO,GAAA,OAChChB,EAAAC,EAAAC,cAACE,GAAkBL,KAAMiB,OAI7BhB,EAAAC,EAAAC,cAAA,6BAAAe,EAAAC,QAAA,SAKSC,GAAA,IAAGpB,EAAHoB,EAAGpB,KAAH,OACbC,EAAAC,EAAAC,cAAA,UACGH,EAAKqB,sBAAsBC,MAAMZ,IAAI,SAAAa,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACpCvB,EAAAC,EAAAC,cAACW,GAAed,KAAMwB,QAKrB,IAAMC,kCC/Cb,IAAAC,EAAAC,EAAA,IAAAC,EACAC,EAAAC,SAAAC,UACAC,EAAA,wBACA,SAGAH,GAAAF,EAAA,KAAAD,EAAAG,EAHA,QAIAI,gBACAC,IAAA,WACA,IACA,UAAAC,MAAAC,MAAAJ,GAAA,GACK,MAAAK,GACL","file":"component---src-pages-themes-articles-js-c64aec93a98d53138ded.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nconst ContentNodeComponent = ({ data }) => (\n  <li>\n    <strong>Article</strong>: {data.title}\n  </li>\n)\n\nconst SubThemeComponent = ({ data }) => (\n  <li>\n    Subtheme: <strong>{data.name}</strong>\n    {data.relationships.articles ? (\n      <ul>\n        {data.relationships.articles.map(article => (\n          <ContentNodeComponent data={article} />\n        ))}\n      </ul>\n    ) : (\n      <span style={{ color: 'red' }}> (no articles)</span>\n    )}\n  </li>\n)\n\nconst ThemeComponent = ({ data }) => (\n  <li>\n    Theme: <strong>{data.name}</strong>\n    {data.relationships.subthemes ? (\n      <ul>\n        {data.relationships.subthemes.map(subTheme => (\n          <SubThemeComponent data={subTheme} />\n        ))}\n      </ul>\n    ) : (\n      <div>No subthemes</div>\n    )}\n  </li>\n)\n\nexport default ({ data }) => (\n  <ul>\n    {data.allTaxonomyTermThemes.edges.map(({ node }) => (\n      <ThemeComponent data={node} />\n    ))}\n  </ul>\n)\n\nexport const query = graphql`\n  query ThemesArticlesQuery {\n    allTaxonomyTermThemes {\n      edges {\n        node {\n          id\n          name\n          relationships {\n            subthemes: backref_field_belongs_to_theme {\n              name\n              id\n              relationships {\n                articles: backref_field_belongs_to_subtheme_node_article {\n                  title\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}