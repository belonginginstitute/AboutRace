{"version":3,"sources":["webpack:///./src/pages/clips.js","webpack:///./node_modules/query-string/index.js","webpack:///./node_modules/strict-uri-encode/index.js","webpack:///./node_modules/decode-uri-component/index.js","webpack:///./node_modules/core-js/modules/es6.regexp.search.js"],"names":["queryString","__webpack_require__","ClipsIntro","styled_components__WEBPACK_IMPORTED_MODULE_4__","b","div","withConfig","displayName","Clips","props","_this","_Component","call","this","onSelected","selected","queryParams","parse","window","location","search","episode","stringify","Object","assign","setState","state","componentDidMount","render","_this$props","data","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","_components__WEBPACK_IMPORTED_MODULE_7__","e","className","d","react__WEBPACK_IMPORTED_MODULE_3__","Component","t","default","query","strictUriEncode","decodeComponent","encode","value","options","strict","encodeURIComponent","decode","extract","input","queryStart","indexOf","slice","formatter","result","arrayFormat","key","accumulator","exec","replace","concat","ret","create","trim","param","split","keys","sort","reduce","Boolean","Array","isArray","keysSorter","Number","map","exports","obj","index","join","value2","push","length","filter","x","parseUrl","url","module","str","charCodeAt","toString","toUpperCase","singleMatcher","RegExp","multiMatcher","decodeComponents","components","decodeURIComponent","err","left","right","prototype","tokens","match","i","encodedURI","TypeError","replaceMap","%FE%FF","%FF%FE","entries","defined","SEARCH","$search","regexp","O","fn","String"],"mappings":"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","file":"component---src-pages-clips-js-2d7f9698b416531860dc.js","sourcesContent":["import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { Link, graphql } from 'gatsby'\nimport kebabCase from 'lodash/kebabCase'\nimport {AllClips, Layout, Filter} from '../components'\n\nconst queryString = require('query-string');\n\nconst ClipsIntro = styled.div\n`\n\tfont-size:24px;\n\tmargin-bottom:60px;\n\tline-height:1.5;\n`\n\nclass Clips extends Component {\n\tconstructor(props) {\n\t  super(props);\n\t\tconst selected = 'all'\n\n\t  this.state = {\n\t  \tselected\n\t  };\n\t}\n\n\tonSelected = selected => {\n\t\tlet queryParams = queryString.parse(window.location.search)\n\t\tqueryParams.episode = selected;\n\t\tconst search = `?` + queryString.stringify({ ...queryParams});\n\n\t\t// uncomment if you want to have url changed\n\t\t// history.pushState({}, window.document.title, search)\n\n\t\tthis.setState({selected})\n\t}\n\n\tcomponentDidMount() {\n\t\tconst queryParams = queryString.parse(window.location.search)\n\t\tconst { episode } = queryParams;\n\t\tconst selected = episode ? episode : 'all';\n\n\t\tthis.setState({selected})\n\t}\n\n\trender() {\n\t\tconst { selected } = this.state;\n\t\tconst { data, location } = this.props;\n\n\t\treturn (\n\t\t\t<Layout location={location}>\n\t\t\t\t<div className='darkwrapper'>\n\t\t\t\t\t<Filter selected={selected} onSelected={this.onSelected}/>\n\t\t\t\t\t<ClipsIntro>\n\t\t\t\t\t\tVarious clips from the film featured here. Buy a copy of the film here.\n\t\t\t\t\t</ClipsIntro>\n\t\t\t\t\t<AllClips data={data} selected={selected}/>\n\t\t\t\t</div>\n\t\t\t</Layout>\n\t\t)\n\t}\n}\n\nexport default Clips;\n\nexport const query = graphql`\n  query ClipsQuery {\n    allNodeClip {\n\t\t  edges {\n\t\t    node {\n\t\t      field_episode\n\t\t      title\n\t\t    \tfield_title_of_clip {\n\t\t        processed\n\t\t      }\n\t\t       relationships {\n\t\t        field_poster_image {\n\t\t          localFile {\n\t\t            publicURL\n\t\t          }\n\t\t        }\n\t\t      }\n\t\t    }\n\t\t  }\n\t\t}\n  }\n`\n\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, index) => {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, options),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, options)\n\t\t\t\t].join('');\n\t\t\t};\n\t\tcase 'bracket':\n\t\t\treturn (key, value) => {\n\t\t\t\treturn value === null ? [encode(key, options), '[]'].join('') : [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, options)\n\t\t\t\t].join('');\n\t\t\t};\n\t\tdefault:\n\t\t\treturn (key, value) => {\n\t\t\t\treturn value === null ? encode(key, options) : [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, options)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction extract(input) {\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parse(input, options) {\n\toptions = Object.assign({decode: true, arrayFormat: 'none'}, options);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof input !== 'string') {\n\t\treturn ret;\n\t}\n\n\tinput = input.trim().replace(/^[?#&]/, '');\n\n\tif (!input) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of input.split('&')) {\n\t\tlet [key, value] = param.replace(/\\+/g, ' ').split('=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : decode(value, options);\n\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\treturn Object.keys(ret).sort().reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (obj, options) => {\n\tconst defaults = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t};\n\n\toptions = Object.assign(defaults, options);\n\n\tif (options.sort === false) {\n\t\toptions.sort = () => {};\n\t}\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\treturn obj ? Object.keys(obj).sort(options.sort).map(key => {\n\t\tconst value = obj[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tconst result = [];\n\n\t\t\tfor (const value2 of value.slice()) {\n\t\t\t\tif (value2 === undefined) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, value2, result.length));\n\t\t\t}\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&') : '';\n};\n\nexports.parseUrl = (input, options) => {\n\treturn {\n\t\turl: input.split('?')[0] || '',\n\t\tquery: parse(extract(input), options)\n\t};\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n","// @@search logic\nrequire('./_fix-re-wks')('search', 1, function (defined, SEARCH, $search) {\n  // 21.1.3.15 String.prototype.search(regexp)\n  return [function search(regexp) {\n    'use strict';\n    var O = defined(this);\n    var fn = regexp == undefined ? undefined : regexp[SEARCH];\n    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n  }, $search];\n});\n"],"sourceRoot":""}