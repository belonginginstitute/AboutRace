{"version":3,"sources":["webpack:///./src/components/Title.js","webpack:///./src/components/ThemeCard/SubThemeCard.js","webpack:///./src/components/ThemeCard/index.js","webpack:///./src/components/rccard.js","webpack:///./src/components/Filter.js","webpack:///./src/pages/index.js","webpack:///./src/components/allClips.js"],"names":["Title","styled_components_browser_es","b","div","withConfig","displayName","l","n","c","p","d","u","s","Container","Object","Link","a","SubThemeCard_Title","Description","ThemeCard_SubThemeCard","render","data","this","props","title","name","description","value","link","kebabCase_default","react_default","createElement","to","dangerouslySetInnerHTML","__html","Component","gradient","ThemeCard_Container","background","backgrounGrayscale","open","ThemeCard_Title","ThemeCard_Description","Chevron","SubThemes","components_ThemeCard","ThemeCard","_this","_React$Component","call","state","_this2","relationships","field_theme_image","localFile","publicURL","childImageSharp","grayscale","src","e","processed","window","Image","subthemes","onClick","setState","map","key","rccard_RCCard","gatsby_browser_entry","slug","className","style","type","backgroundImage","imgSrc","backgroundSize","backgroundPosition","children","rccard","FLEX","BASE_CARD_WIDTH","Row","color","Element","selected","Filter_Title","components_Filter","_this$props","onSelected","t","react","O","i","r","o","_","C","E","T","S","I","262","HomeBackground","styled_components__WEBPACK_IMPORTED_MODULE_2__","default","_ref","location","react__WEBPACK_IMPORTED_MODULE_0___default","_components__WEBPACK_IMPORTED_MODULE_3__","k","allTaxonomyTermThemes","edges","_ref2","node","j","query","ClipCard","ClipCaption","ClipPoster","Clip","clip","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_3__","textDecoration","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_4___default","field_poster_image","field_external_video_url","uri","frameborder","webkitallowfullscreen","mozallowfullscreen","allowfullscreen","__webpack_exports__","array","allNodeClip","filter","el","field_episode","parseInt","padding","edge"],"mappings":"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","file":"component---src-pages-index-js-d3ac353a6dbc16decab8.js","sourcesContent":["import styled from 'styled-components'\n\nexport default styled.div`\n  color: white;\n  text-align: center;\n  font-family: Lato;\n  font-size: 36px;\n  font-weight: 300;\n  letter-spacing: 0.04em;\n  padding-top: 120px;\n  margin-bottom: 75px;\n`;","import React from 'react'\nimport styled from 'styled-components'\nimport kebabCase from 'lodash/kebabCase'\nimport { Link } from '../';\n\nconst Container = styled(Link)`\n  color: white;\n  padding: 1vw;\n  font-family: 'Lato';\n  text-align: center;\n`\n\nconst Title = styled.div`\n  position: relative;\n  font-size: 20pt;\n  line-height: 26px;\n  font-weight: bold;\n  padding-bottom: 1vh;\n\n  &:after {\n    content: \"\\00a0\\00a0\";\n    position: absolute;\n    bottom: -.25vh;\n    left: calc(50% - 50px);\n    width: 100px;\n    height: 1px;\n    border-bottom: 2px solid #D83C46;\n  }\n`\n\nconst Description = styled.div`\n  font-family: 'Tisa Pro';\n  font-size: 16pt;\n  padding-top: 1vh;\n  padding-bottom: 1vh;\n`\n\nclass SubThemeCard extends React.Component {\n  render() {\n    const {data} = this.props;\n    const title = data.name;\n    const description = data.description ? data.description.value : '';\n    const link = `/subthemes/${kebabCase(title)}`\n\n    return (\n      <Container to={link}>\n        <Title>{title}</Title>\n        <Description dangerouslySetInnerHTML={{ __html: description }} />\n      </Container>\n    )\n  }\n}\n\nexport default SubThemeCard\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport SubThemeCard from './SubThemeCard'\n\nconst gradient = `linear-gradient(to bottom, rgba(0,0,0,0) 0%,rgba(1,1,2,0.64) 25%,rgba(1,1,2,1) 100%)`\n\nconst Container = styled.div`\n  border-radius: 45;\n  width: 90%;\n  margin-left: 5%;\n  margin-bottom: 60px;\n  margin-right: 0;\n  display: inline-block;\n  vertical-align: top;\n  position: relative;\n  overflow: hidden;\n  box-shadow: rgba(39, 39, 39, 0.58) 0px 3px 57px 0px;\n  user-select: none;\n  border-radius: 60px;\n  color: white;\n  \n  background-size: cover !important;\n  background-attachment: fixed;\n  transition: all .5s ease;\n\n  &:hover {\n    background-size: 125% auto !important;\n    transition: all .5s ease;\n    background: ${ props => props.background ? `url(${props.background}) center no-repeat` : `none`};\n    background: ${ props => props.background ? `${gradient}, url(${props.background}) center no-repeat` : `none`};\n  }\n\n  background: ${ props => props.background ? `url(${props.background}) center no-repeat` : `none`};\n  background: ${ props => props.backgrounGrayscale ? `url(${props.backgrounGrayscale}) center no-repeat` : `none`};\n  background: ${ props => props.backgrounGrayscale ? `${gradient}, url(${props.backgrounGrayscale}) center no-repeat` : `none`}; \n\n  height: ${props => props.open ? '100vh' : '60vh'};\n`;\n\nconst Title = styled.div`\n  font-family: Lato;\n  font-size: 48px;\n  line-height: 1;\n  text-align: left;\n  letter-spacing: 0.011em;\n  padding-top: 30vh;\n  padding-bottom: 5vh;\n  text-align: center;\n`;\n\nconst Description = styled.div`\n  font-family: Lato;\n  text-align: center;\n  padding-left: 10vw;\n  padding-right: 10vw;\n`;\n\nconst Chevron = styled.div`\n  cursor: pointer;\n  position: absolute;\n  right: 1vw;\n  top: 30vh;\n  font-family: 'Lato';\n  font-size: 100px;\n  color: white;\n\n  transform: ${ props => props.open ? 'rotate(90deg)' : 'none'};\n`\n\nconst SubThemes = styled.div`\n  display: grid;\n  grid-template-columns: 30vw 30vw 30vw;\n  /*grid-template-rows: 40vh 40vh;*/\n`\n\nclass ThemeCard extends React.Component {\n  constructor(props) {\n    super(props);\n  \n    this.state = {\n      open: false\n    };\n  }\n\n  render() {\n    const { open } = this.state;\n    const { data } = this.props\n    const background = data.relationships.field_theme_image && data.relationships.field_theme_image.localFile.publicURL\n    let backgrounGrayscale = '';\n\n    try{\n      backgrounGrayscale = data.relationships.field_theme_image.localFile.childImageSharp.grayscale.src;\n    }catch(e){\n      backgrounGrayscale = background\n    }\n\n    const description = data.description && data.description.processed\n\n    //preloading images for smoother effect\n    if(typeof window !== 'undefined'){\n      let img = new window.Image();\n      img.src = background;\n    }\n    \n    const { subthemes } = data.relationships;\n\n    return (\n      <Container\n        open={open}\n        background={background}\n        backgrounGrayscale={backgrounGrayscale}\n        onClick={() => this.setState({open: !open})}\n      >\n        <Title>{data.name}</Title>\n        <Description dangerouslySetInnerHTML={{ __html: description }} />\n        <Chevron open={open}>〉</Chevron>\n        {\n          <SubThemes>\n            {\n              open && subthemes.map( (data, key) => <SubThemeCard key={key} data={data} />)\n            }\n          </SubThemes>\n        }\n      </Container>\n    )\n  }\n}\n\nexport default ThemeCard\n","import React from \"react\"\nimport { Link } from 'gatsby'\nimport kebabCase from 'lodash/kebabCase'\nimport styled, { css } from 'styled-components';\n\nclass RCCard extends React.Component {\n    render() {\n        return (\n        <Link to={`/${this.props.slug}s/${kebabCase(this.props.title)}`} className={this.props.className} style={this.props.style}>\n            {this.props.type ?\n            <h4>{this.props.type}</h4> :\n            null }\n            <div className={'RCimage'} style={{\n              backgroundImage: `url(${this.props.imgSrc})`,\n              backgroundSize: 'cover',\n              backgroundPosition: 'center'\n            }}>\n            </div>\n            <p>{this.props.title}</p>\n\n            {this.props.children}\n        </Link>\n        )\n    }\n}\n\nconst BASE_CARD_WIDTH = 350;\nconst FLEX = 100;\nconst MAX_WIDTH_CONSTANT = .7;\nconst ARTICLE_MULTIPLIER = 1.5;\nconst QUICK_FACT_MULTIPLIER = 1.5;\n\nconst StyledRCCard = styled(RCCard)`\n  display: inline-block;\n  height: auto;\n  flex: ${FLEX} ${FLEX} ${BASE_CARD_WIDTH}px;\n  border: solid thin lightgrey;\n  background-color: #f7f7f7;\n  -webkit-box-shadow: 0px 2px 15px 0px rgba(179,179,179,0.38);\n  -moz-box-shadow: 0px 2px 15px 0px rgba(179,179,179,0.38);\n  box-shadow: 0px 2px 15px 0px rgba(179,179,179,0.38);\n  margin-bottom: 20px;\n  font-family: \"ff-tisa-web-pro\";\n  vertical-align: top;\n  text-align: left;\n  margin-left: 10px;\n  margin-right: 10px;\n  max-width: ${BASE_CARD_WIDTH * MAX_WIDTH_CONSTANT}px\n\n  // Link styling\n  color: inherit;\n  text-decoration: inherit;\n\n  ${props => props.background && css`\n    background-image: url('${props.background}');\n    background-size: cover;\n  `}\n  \n  ${props => props.type === `Article` && css`\n    flex: ${FLEX * ARTICLE_MULTIPLIER} ${FLEX * ARTICLE_MULTIPLIER} ${BASE_CARD_WIDTH * ARTICLE_MULTIPLIER}px;\n    max-width: ${BASE_CARD_WIDTH * MAX_WIDTH_CONSTANT * ARTICLE_MULTIPLIER}px;\n  `}\n\n  ${props => props.type === `QuickFact` && css`\n    flex: ${FLEX * QUICK_FACT_MULTIPLIER} ${FLEX * QUICK_FACT_MULTIPLIER} ${BASE_CARD_WIDTH * QUICK_FACT_MULTIPLIER}px;\n    max-width: ${BASE_CARD_WIDTH * MAX_WIDTH_CONSTANT * QUICK_FACT_MULTIPLIER}px;\n  `}\n`;\n\nexport default StyledRCCard;\n\n","import React, { Component } from 'react'\nimport styled from 'styled-components'\n\nconst Row = styled.div`\n  display: flex;\n  flex-direction: row;\n  padding: 10px;\n  color: ${props => props.color ? props.color : `white`};\n`\n\nconst Element = styled.div`\n  cursor: pointer;\n  margin-left: 10px;\n  font-weight: ${props => props.selected ?  `bold` : `normal`};\n`\n\nconst Title = styled.div`\n  text-decoration: underline;\n`\n\nclass Filter extends Component {\n  render() {\n    const {selected, onSelected, color} = this.props;\n    return (\n      <Row color={color}>\n        Sort by:&nbsp;\n        <Element\n          selected={selected === 'all'}\n          onClick={() => onSelected('all')}\n        >\n          All\n        </Element>\n        <Element\n          selected={selected === '1'}\n          onClick={() => onSelected('1')}\n        >\n          <Title>Episode One:</Title> The Difference Between Us\n        </Element>\n        <Element\n          selected={selected === '2'}\n          onClick={() => onSelected('2')}\n        >\n          <Title>Episode Two:</Title> The Story We Tell\n        </Element>\n        <Element\n          selected={selected === '3'}\n          onClick={() => onSelected('3')}\n        >\n          <Title>Episode Three:</Title> The House We Live In\n        </Element>\n      </Row>\n    )\n  }\n}///\n\nexport default Filter;\n","import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport kebabCase from 'lodash/kebabCase'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Layout,\r\n  Link,\r\n  Title,\r\n  ThemeCard\r\n} from \"../components\"\r\n\r\nconst HomeBackground = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: -999999;\r\n  height: 100%;\r\n  width:100%;\r\n`\r\n\r\nexport default ({ data, location }) => (\r\n  <Layout location={location}>\r\n    <div>\r\n      <HomeBackground />\r\n      <Title>Explore themes from the film:</Title>\r\n      {\r\n        data.allTaxonomyTermThemes.edges.map( ({ node }, key) =>\r\n          <ThemeCard key={key} data={node} />\r\n        )\r\n      }\r\n    </div>\r\n  </Layout>\r\n)\r\n\r\n\r\nexport const query = graphql`\r\n  query IndexQuery {\r\n    \r\n    allTaxonomyTermThemes {\r\n      edges {\r\n        node {\r\n          id\r\n          name\r\n          description {\r\n            processed\r\n          }\r\n          relationships {\r\n            field_theme_image {\r\n              localFile {\r\n                publicURL\r\n                childImageSharp {\r\n                  id\r\n                  grayscale: resize(width: 1000, grayscale: true) {\r\n                    src\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            subthemes: backref_field_belongs_to_theme {\r\n              name\r\n              id\r\n              description {\r\n                value\r\n              }\r\n              relationships {\r\n                contentNodes: backref_field_belongs_to_subtheme {\r\n                  __typename\r\n                  ... on node__article {\r\n                    title\r\n                  }\r\n                  ... on node__faq {\r\n                    title\r\n                  }\r\n                  ... on node__clip {\r\n                    title\r\n                  }\r\n                  ... on node__quickfact {\r\n                    title\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    trailerClip:nodeClip(id: { eq:\"dda11171-b3eb-44b4-8fa2-06bd24f545b1\" } ) {\r\n      ...ClipFragment\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport kebabCase from 'lodash/kebabCase'\n\nconst ClipCard = styled.div`\n\twidth: 300px;\n\tbackground-color:#292929;\n\tcolor: white;\n\tdisplay:inline-block;\n\tvertical-align: top;\n\tmargin-right:30px;\n\tmargin-bottom: 30px;\n\ttransition: all .3s;\n\tborder-radius: 6px;\n\t&:hover {\n\t  transition: all .3s;\n\t}\n\tcursor: pointer;\n`\nconst ClipCaption = styled.div`\n\tfont-family: 'Lato';\n\tfont-size: 14px;\n\tline-height: 1.5;\n\tfont-weight: 300;\n\tletter-spacing: 0.04em;\n\tpadding: 15px 30px 30px 30px;\n`\nconst ClipPoster = styled.div`\n\theight:200px;\n\twidth:100%;\n\tbackground-color:red;\n\tbackground-size:cover;\n\tbackground-position: center;\n  background-image: ${props => props.background ?  `url(${props.background})` : `none`};\n`\n\nexport const Clip = ({ clip, link }) =>  {\n\treturn (\n\t\t\t<ClipCard>\n\t\t\t\t{\n\t\t\t\t\tlink ?\n\t\t\t\t\t\t<Link style={{color:'inherit', textDecoration:'none'}} to={`/clips/${kebabCase(clip.title)}`}>\n\t\t\t\t\t\t\t<ClipPoster background={clip.relationships.field_poster_image && clip.relationships.field_poster_image.localFile.publicURL} />\n\t\t\t\t\t\t\t<ClipCaption>\n\t\t\t\t\t\t\t\t{clip.title}\n\t\t\t\t\t\t\t</ClipCaption>\n\t\t\t\t\t\t</Link> :\n\t\t\t\t\t\t\n\t\t\t\t\t\t\t<iframe title={clip.title} src={`${clip.field_external_video_url && clip.field_external_video_url.uri}?title=0&byline=0&portrait=0`} frameborder=\"0\" webkitallowfullscreen mozallowfullscreen allowfullscreen></iframe>\n\t\t\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t</ClipCard>\n\t\t)\n}\n\n\nconst AllClips = ({ data, selected }) => {\n\tlet array = data.allNodeClip.edges\n\n\tif(selected)\n\t\tarray = array.filter( el => selected === 'all' ? true : el.node.field_episode === parseInt(selected) )\n\t\n\treturn (\n\t  <div style={{padding: '0 30px'}}>\n\t    {\n\t    \tarray.map((edge, i) =>\n\t\t      <Clip key={`clip-${i}`} clip={edge.node} link={true} />\n\t\t    )\n\t\t  }\n\t  </div>\n\t)\n}\n\nexport default AllClips\n\n"],"sourceRoot":""}