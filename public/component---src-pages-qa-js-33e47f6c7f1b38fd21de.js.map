{"version":3,"sources":["webpack:///./src/pages/qa.js","webpack:///./node_modules/core-js/modules/es6.regexp.search.js","webpack:///./node_modules/query-string/index.js","webpack:///./node_modules/strict-uri-encode/index.js","webpack:///./node_modules/decode-uri-component/index.js"],"names":["queryString","__webpack_require__","Title","styled_components__WEBPACK_IMPORTED_MODULE_4__","b","div","withConfig","displayName","IntroText","Summary","_ref","data","react__WEBPACK_IMPORTED_MODULE_3___default","a","createElement","className","gatsby__WEBPACK_IMPORTED_MODULE_5__","Link","to","fields","slug","field_question_summary","processed","field_title","QA","props","_this","_Component","call","this","onSelected","selected","queryParams","parse","window","location","search","episode","stringify","Object","assign","history","pushState","document","title","setState","state","componentDidMount","render","_this$props","_components__WEBPACK_IMPORTED_MODULE_6__","g","style","backgroundColor","e","color","allNodeFaq","edges","map","edge","i","key","node","react__WEBPACK_IMPORTED_MODULE_3__","Component","__webpack_exports__","default","y","query","defined","SEARCH","$search","regexp","O","fn","RegExp","String","strictUriEncode","decodeComponent","encode","value","options","strict","encodeURIComponent","decode","extract","input","queryStart","indexOf","slice","formatter","result","arrayFormat","accumulator","exec","replace","concat","ret","create","trim","param","split","keys","sort","reduce","Boolean","Array","isArray","keysSorter","Number","exports","obj","index","join","value2","push","length","filter","x","parseUrl","url","module","str","charCodeAt","toString","toUpperCase","singleMatcher","multiMatcher","decodeComponents","components","decodeURIComponent","err","left","right","prototype","tokens","match","encodedURI","TypeError","replaceMap","%FE%FF","%FF%FE","entries"],"mappings":"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","file":"component---src-pages-qa-js-33e47f6c7f1b38fd21de.js","sourcesContent":["import React, { Component } from 'react'\nimport styled from 'styled-components'\nimport { Link, graphql} from 'gatsby'\n\nimport {\n  Layout, \n  Filter\n} from '../components'\n\nconst queryString = require('query-string');\n\nconst Title = styled.div`\n    \n`\n\nconst IntroText = styled.div`\n  font-weight: 300;\n  font-size: 48px;\n  line-height: 1.25;\n  z-index:99999;\n  margin: 60px 45px;\n  font-family: 'Lato';\n`\n\n\nconst Summary = ({ data }) => {\n  return (\n      <div className={\"articleCard\"}>\n       \n        <div className=\"articleExcerpt\">\n          \n          <Title>\n            <Link to={`/qa/${data.fields.slug}`}>\n              {\n                data.field_question_summary \n                  ? data.field_question_summary.processed\n                  : data.field_title.processed\n              }\n            </Link>\n          </Title>\n          \n        </div>\n       \n      </div>\n  )\n}///\n\nclass QA extends Component {\n  constructor(props) {\n    super(props);\n    const selected = 'all'\n\n    this.state = {\n      selected\n    };\n  }\n\n  onSelected = selected => {\n    let queryParams = queryString.parse(window.location.search)\n    queryParams.episode = selected;\n    const search = `?` + queryString.stringify({ ...queryParams});\n\n    window.history.pushState({}, window.document.title, search)\n\n    this.setState({selected})\n  }\n\n  componentDidMount() {\n    const queryParams = queryString.parse(window.location.search)\n    const { episode } = queryParams;\n    const selected = episode ? episode : 'all';\n\n    this.setState({selected})\n  }\n\n  render() {\n    const { selected } = this.state;\n    const { data, location } = this.props;\n\n    return (\n      <Layout location={location}>\n        <div\n          style={{\n            backgroundColor: 'gray'\n          }}\n        >\n        <Filter color='black' selected={selected} onSelected={this.onSelected}/>\n        <IntroText>\n          The experts answer your questions about issues from the film.\n          Does race have a biological basis? Has the idea of race always been with us? Why does race still matter?\n        </IntroText>\n        {\n          data.allNodeFaq.edges.map((edge, i) =>\n            <Summary key={`QA-${i}`} data={edge.node} />\n          )\n        }\n        </div>\n      </Layout>\n    )\n  }\n}\n\n// TODO: uncomment this once episode information is in the data\n// data.allNodeFaq.edges.filter( el => selected === 'all' ? true : el.node.field_episode === parseInt(selected) ).map((edge, i) =>\n\nexport default QA;\n\nexport const query = graphql`\n  query QAQuery {\n    allNodeFaq {\n      edges {\n        node {\n          fields {\n            slug\n          }\n          field_title {\n            processed\n          }\n          field_question_summary {\n            processed\n          }\n        }\n      }\n    }\n  }\n`\n","// @@search logic\nrequire('./_fix-re-wks')('search', 1, function (defined, SEARCH, $search) {\n  // 21.1.3.15 String.prototype.search(regexp)\n  return [function search(regexp) {\n    'use strict';\n    var O = defined(this);\n    var fn = regexp == undefined ? undefined : regexp[SEARCH];\n    return fn !== undefined ? fn.call(regexp, O) : new RegExp(regexp)[SEARCH](String(O));\n  }, $search];\n});\n","'use strict';\nconst strictUriEncode = require('strict-uri-encode');\nconst decodeComponent = require('decode-uri-component');\n\nfunction encoderForArrayFormat(options) {\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, index) => {\n\t\t\t\treturn value === null ? [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'[',\n\t\t\t\t\tindex,\n\t\t\t\t\t']'\n\t\t\t\t].join('') : [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'[',\n\t\t\t\t\tencode(index, options),\n\t\t\t\t\t']=',\n\t\t\t\t\tencode(value, options)\n\t\t\t\t].join('');\n\t\t\t};\n\t\tcase 'bracket':\n\t\t\treturn (key, value) => {\n\t\t\t\treturn value === null ? [encode(key, options), '[]'].join('') : [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'[]=',\n\t\t\t\t\tencode(value, options)\n\t\t\t\t].join('');\n\t\t\t};\n\t\tdefault:\n\t\t\treturn (key, value) => {\n\t\t\t\treturn value === null ? encode(key, options) : [\n\t\t\t\t\tencode(key, options),\n\t\t\t\t\t'=',\n\t\t\t\t\tencode(value, options)\n\t\t\t\t].join('');\n\t\t\t};\n\t}\n}\n\nfunction parserForArrayFormat(options) {\n\tlet result;\n\n\tswitch (options.arrayFormat) {\n\t\tcase 'index':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /\\[(\\d*)\\]$/.exec(key);\n\n\t\t\t\tkey = key.replace(/\\[\\d*\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = {};\n\t\t\t\t}\n\n\t\t\t\taccumulator[key][result[1]] = value;\n\t\t\t};\n\t\tcase 'bracket':\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tresult = /(\\[\\])$/.exec(key);\n\t\t\t\tkey = key.replace(/\\[\\]$/, '');\n\n\t\t\t\tif (!result) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = [value];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t\tdefault:\n\t\t\treturn (key, value, accumulator) => {\n\t\t\t\tif (accumulator[key] === undefined) {\n\t\t\t\t\taccumulator[key] = value;\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\taccumulator[key] = [].concat(accumulator[key], value);\n\t\t\t};\n\t}\n}\n\nfunction encode(value, options) {\n\tif (options.encode) {\n\t\treturn options.strict ? strictUriEncode(value) : encodeURIComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction decode(value, options) {\n\tif (options.decode) {\n\t\treturn decodeComponent(value);\n\t}\n\n\treturn value;\n}\n\nfunction keysSorter(input) {\n\tif (Array.isArray(input)) {\n\t\treturn input.sort();\n\t}\n\n\tif (typeof input === 'object') {\n\t\treturn keysSorter(Object.keys(input))\n\t\t\t.sort((a, b) => Number(a) - Number(b))\n\t\t\t.map(key => input[key]);\n\t}\n\n\treturn input;\n}\n\nfunction extract(input) {\n\tconst queryStart = input.indexOf('?');\n\tif (queryStart === -1) {\n\t\treturn '';\n\t}\n\treturn input.slice(queryStart + 1);\n}\n\nfunction parse(input, options) {\n\toptions = Object.assign({decode: true, arrayFormat: 'none'}, options);\n\n\tconst formatter = parserForArrayFormat(options);\n\n\t// Create an object with no prototype\n\tconst ret = Object.create(null);\n\n\tif (typeof input !== 'string') {\n\t\treturn ret;\n\t}\n\n\tinput = input.trim().replace(/^[?#&]/, '');\n\n\tif (!input) {\n\t\treturn ret;\n\t}\n\n\tfor (const param of input.split('&')) {\n\t\tlet [key, value] = param.replace(/\\+/g, ' ').split('=');\n\n\t\t// Missing `=` should be `null`:\n\t\t// http://w3.org/TR/2012/WD-url-20120524/#collect-url-parameters\n\t\tvalue = value === undefined ? null : decode(value, options);\n\n\t\tformatter(decode(key, options), value, ret);\n\t}\n\n\treturn Object.keys(ret).sort().reduce((result, key) => {\n\t\tconst value = ret[key];\n\t\tif (Boolean(value) && typeof value === 'object' && !Array.isArray(value)) {\n\t\t\t// Sort object keys, not values\n\t\t\tresult[key] = keysSorter(value);\n\t\t} else {\n\t\t\tresult[key] = value;\n\t\t}\n\n\t\treturn result;\n\t}, Object.create(null));\n}\n\nexports.extract = extract;\nexports.parse = parse;\n\nexports.stringify = (obj, options) => {\n\tconst defaults = {\n\t\tencode: true,\n\t\tstrict: true,\n\t\tarrayFormat: 'none'\n\t};\n\n\toptions = Object.assign(defaults, options);\n\n\tif (options.sort === false) {\n\t\toptions.sort = () => {};\n\t}\n\n\tconst formatter = encoderForArrayFormat(options);\n\n\treturn obj ? Object.keys(obj).sort(options.sort).map(key => {\n\t\tconst value = obj[key];\n\n\t\tif (value === undefined) {\n\t\t\treturn '';\n\t\t}\n\n\t\tif (value === null) {\n\t\t\treturn encode(key, options);\n\t\t}\n\n\t\tif (Array.isArray(value)) {\n\t\t\tconst result = [];\n\n\t\t\tfor (const value2 of value.slice()) {\n\t\t\t\tif (value2 === undefined) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tresult.push(formatter(key, value2, result.length));\n\t\t\t}\n\n\t\t\treturn result.join('&');\n\t\t}\n\n\t\treturn encode(key, options) + '=' + encode(value, options);\n\t}).filter(x => x.length > 0).join('&') : '';\n};\n\nexports.parseUrl = (input, options) => {\n\treturn {\n\t\turl: input.split('?')[0] || '',\n\t\tquery: parse(extract(input), options)\n\t};\n};\n","'use strict';\nmodule.exports = str => encodeURIComponent(str).replace(/[!'()*]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n","'use strict';\nvar token = '%[a-f0-9]{2}';\nvar singleMatcher = new RegExp(token, 'gi');\nvar multiMatcher = new RegExp('(' + token + ')+', 'gi');\n\nfunction decodeComponents(components, split) {\n\ttry {\n\t\t// Try to decode the entire string first\n\t\treturn decodeURIComponent(components.join(''));\n\t} catch (err) {\n\t\t// Do nothing\n\t}\n\n\tif (components.length === 1) {\n\t\treturn components;\n\t}\n\n\tsplit = split || 1;\n\n\t// Split the array in 2 parts\n\tvar left = components.slice(0, split);\n\tvar right = components.slice(split);\n\n\treturn Array.prototype.concat.call([], decodeComponents(left), decodeComponents(right));\n}\n\nfunction decode(input) {\n\ttry {\n\t\treturn decodeURIComponent(input);\n\t} catch (err) {\n\t\tvar tokens = input.match(singleMatcher);\n\n\t\tfor (var i = 1; i < tokens.length; i++) {\n\t\t\tinput = decodeComponents(tokens, i).join('');\n\n\t\t\ttokens = input.match(singleMatcher);\n\t\t}\n\n\t\treturn input;\n\t}\n}\n\nfunction customDecodeURIComponent(input) {\n\t// Keep track of all the replacements and prefill the map with the `BOM`\n\tvar replaceMap = {\n\t\t'%FE%FF': '\\uFFFD\\uFFFD',\n\t\t'%FF%FE': '\\uFFFD\\uFFFD'\n\t};\n\n\tvar match = multiMatcher.exec(input);\n\twhile (match) {\n\t\ttry {\n\t\t\t// Decode as big chunks as possible\n\t\t\treplaceMap[match[0]] = decodeURIComponent(match[0]);\n\t\t} catch (err) {\n\t\t\tvar result = decode(match[0]);\n\n\t\t\tif (result !== match[0]) {\n\t\t\t\treplaceMap[match[0]] = result;\n\t\t\t}\n\t\t}\n\n\t\tmatch = multiMatcher.exec(input);\n\t}\n\n\t// Add `%C2` at the end of the map to make sure it does not replace the combinator before everything else\n\treplaceMap['%C2'] = '\\uFFFD';\n\n\tvar entries = Object.keys(replaceMap);\n\n\tfor (var i = 0; i < entries.length; i++) {\n\t\t// Replace all decoded components\n\t\tvar key = entries[i];\n\t\tinput = input.replace(new RegExp(key, 'g'), replaceMap[key]);\n\t}\n\n\treturn input;\n}\n\nmodule.exports = function (encodedURI) {\n\tif (typeof encodedURI !== 'string') {\n\t\tthrow new TypeError('Expected `encodedURI` to be of type `string`, got `' + typeof encodedURI + '`');\n\t}\n\n\ttry {\n\t\tencodedURI = encodedURI.replace(/\\+/g, ' ');\n\n\t\t// Try the built in decoder first\n\t\treturn decodeURIComponent(encodedURI);\n\t} catch (err) {\n\t\t// Fallback to a more advanced decoder\n\t\treturn customDecodeURIComponent(encodedURI);\n\t}\n};\n"],"sourceRoot":""}