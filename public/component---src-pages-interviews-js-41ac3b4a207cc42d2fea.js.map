{"version":3,"sources":["webpack:///./src/pages/interviews.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["GreyBackground","styled_components__WEBPACK_IMPORTED_MODULE_1__","b","div","withConfig","displayName","IntroText","InterviewCard","InterviewTitle","InterviewExcerpt","InterviewImage","props","background","InterviewMain","AllInterviews","TopText","InterviewSummary","_ref2","data","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","gatsby__WEBPACK_IMPORTED_MODULE_2__","style","flexGrow","flexShrink","marginBottom","flexBasis","textDecoration","color","to","lodash_kebabCase__WEBPACK_IMPORTED_MODULE_3___default","title","relationships","field_interviewee","localFile","publicURL","fontSize","fontWeight","letterSpacing","field_interviewee_name","processed","dangerouslySetInnerHTML","__html","field_interview_summary","fontFamily","__webpack_exports__","default","_ref3","display","verticalAlign","taxonomyTermInterviewsPage","description","className","allNodeInterview","edges","map","edge","i","node","query","m","module","exports","__webpack_require__","createContext","prop_types__WEBPACK_IMPORTED_MODULE_1___default","object","string","isRequired","func","ProdPageRenderer","_ref","location","pageResources","_loader__WEBPACK_IMPORTED_MODULE_3__","getResourcesForPathname","pathname","_page_renderer__WEBPACK_IMPORTED_MODULE_2__","propTypes","shape","s"],"mappings":"6LAMMA,EAAiBC,EAAAC,EAAOC,IAAxBC,YAAAC,YAAA,8BAAiBJ,EAAjB,wEAQAK,EAAYL,EAAAC,EAAOC,IAAnBC,YAAAC,YAAA,yBAAYJ,EAAZ,yKAWAM,EAAgBN,EAAAC,EAAOC,IAAvBC,YAAAC,YAAA,6BAAgBJ,EAAhB,gDAmBAO,EAAiBP,EAAAC,EAAOC,IAAxBC,YAAAC,YAAA,8BAAiBJ,EAAjB,uHASAQ,EAAmBR,EAAAC,EAAOC,IAA1BC,YAAAC,YAAA,gCAAmBJ,EAAnB,2FASAS,EAAiBT,EAAAC,EAAOC,IAAxBC,YAAAC,YAAA,8BAAiBJ,EAAjB,6JAQgB,SAAAU,GAAA,OAClBA,EAAMC,WAAN,OAA0BD,EAAMC,WAAhC,aAEEC,EAAgBZ,EAAAC,EAAOC,IAAvBC,YAAAC,YAAA,6BAAgBJ,EAAhB,KAGAa,EAAgBb,EAAAC,EAAOC,IAAvBC,YAAAC,YAAA,6BAAgBJ,EAAhB,6EAqBAc,GAfgBd,EAAAC,EAAOC,IAAvBC,YAAAC,YAAA,6BAAgBJ,EAAhB,wOAeUA,EAAAC,EAAOC,IAAjBC,YAAAC,YAAA,uBAAUJ,EAAV,gGAiBAe,EAAmB,SAAAC,GAAc,IAAXC,EAAWD,EAAXC,KAC1B,OACEC,EAAAC,EAAAC,cAACC,EAAAF,GAAKG,OACJC,SAAU,EACVC,WAAY,EACZC,aAAc,GACdC,UAAW,mBACXC,eAAgB,OAChBC,MAAO,WACNC,GAAA,eAAmBC,IAAUb,EAAKc,QACnCb,EAAAC,EAAAC,cAACd,EAAD,KACEY,EAAAC,EAAAC,cAACX,GAAeE,WACdM,EAAKe,cAAcC,mBACnBhB,EAAKe,cAAcC,kBAAkBC,UAAUC,YAEjDjB,EAAAC,EAAAC,cAACR,EAAD,KACKM,EAAAC,EAAAC,cAACb,EAAD,KACCW,EAAAC,EAAAC,cAAA,OAAKE,OACGc,SAAS,GACTC,WAAW,IACXC,cAAc,SACdb,aAAa,MAJrB,kBAMOR,EAAKsB,uBAAuBC,WACpCtB,EAAAC,EAAAC,cAACZ,GACAiC,yBACMC,OAAQzB,EAAK0B,yBAA2B1B,EAAK0B,wBAAwBH,aAE3EtB,EAAAC,EAAAC,cAACC,EAAAF,GAAKG,OAAQsB,WAAW,OAAQjB,eAAe,OAAQC,MAAM,UAAWQ,SAAS,GAAIE,cAAc,SAAUD,WAAW,KAAMR,GAAA,eAAmBC,IAAUb,EAAKc,QAAjK,sBAmBdc,EAAAC,QAAA,SAAeC,GAAA,IAAG9B,EAAH8B,EAAG9B,KAAH,OACbC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACN,EAAD,KACEI,EAAAC,EAAAC,cAAA,MAAIE,OAAQG,aAAa,EAAGuB,QAAQ,eAAgBC,cAAc,WAAlE,eAEF/B,EAAAC,EAAAC,cAACf,GAAUoC,yBACGC,OAAQzB,EAAKiC,2BAA2BC,aAAelC,EAAKiC,2BAA2BC,YAAYX,aAEjHtB,EAAAC,EAAAC,cAAA,OAAKgC,UAAW,cAChBlC,EAAAC,EAAAC,cAACrB,EAAD,MAEEmB,EAAAC,EAAAC,cAACP,EAAD,KACGI,EAAKoC,iBAAiBC,MAAMC,IAAI,SAACC,EAAMC,GAAP,OAC/BvC,EAAAC,EAAAC,cAACL,GAAiBE,KAAMuC,EAAKE,aAOhC,IAAMC,oCCrLb,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAA,OALAH,EAAEd,SAAYc,wKCKpB1C,EAAAC,EAAM6C,kBAoBzBC,EAAA9C,EAAU+C,OACTD,EAAA9C,EAAUgD,OAAOC,WAChBH,EAAA9C,EAAUkD,KACRJ,EAAA9C,EAAUkD,iGCtBhBC,EAAmB,SAAAC,GAAkB,IAAfC,EAAeD,EAAfC,SACpBC,EAAgBC,EAAAvD,EAAOwD,wBAAwBH,EAASI,UAC9D,OAAO1D,EAAAC,EAAMC,cAAcyD,EAAA1D,GACzBqD,WACAC,mBAIJH,EAAiBQ,WACfN,SAAUP,EAAA9C,EAAU4D,OAClBH,SAAUX,EAAA9C,EAAUgD,OAAOC,aAC1BA,YAGLvB,EAAAC,QAAAkC","file":"component---src-pages-interviews-js-41ac3b4a207cc42d2fea.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { Link } from 'gatsby'\nimport kebabCase from 'lodash/kebabCase'\nimport { graphql } from 'gatsby'\n\nconst GreyBackground = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: -999999;\n  height: 100%;\n  width:100%;\n`\nconst IntroText = styled.div`\n  font-weight: 300;\n  font-size: 48px;\n  line-height: 1.25;\n  z-index:99999;\n  padding: 15px 45px 60px 45px;\n  margin-bottom: 60px;\n  font-family: 'Lato';\n  color: snow;\n  background-color: #25292b;\n`\nconst InterviewCard = styled.div`\n  // background-color: #f5f6f9;\n  // padding: 30px;\n  // height: 100%;\n  position: relative;\n  // border-radius: 6px;\n  // border: solid thin lightgrey;\n  overflow:hidden;\n  // -webkit-box-shadow: 0px 2px 15px 0px rgba(179,179,179,0.38);\n  // -moz-box-shadow: 0px 2px 15px 0px rgba(179,179,179,0.38);\n  // box-shadow: 0px 2px 15px 0px rgba(179,179,179,0.38);\n  // transition: all .3s;\n  &:hover {\n    // -webkit-box-shadow: 0px 7px 15px 2px rgba(179,179,179,0.78);\n    // -moz-box-shadow: 0px 7px 15px 2px rgba(179,179,179,0.78);\n    // box-shadow: 0px 7px 15px 2px rgba(179,179,179,0.78);\n    // transition: all .3s;\n  }\n`\nconst InterviewTitle = styled.div`\n  margin-bottom: 11.25px;\n  font-size:20px;\n  font-family:'Lato';\n  z-index:99999;\n  line-height:1;\n  color: inherit;\n  font-weight: 700;\n`\nconst InterviewExcerpt = styled.div`\n  line-height: 1.5;\n  font-weight: 500;\n  opacity: 0.9;\n  font-size: 14px;\n  & > p {\n    margin-bottom: 7.5px;\n  }\n`\nconst InterviewImage = styled.div`\n  background-color:red;\n  border-radius: 50%;\n  height: 145px;\n  width: 145px;\n  margin-bottom: 15px;\n  background-position: center;\n  background-size:cover;\n  background-image: ${props =>\n    props.background ? `url(${props.background})` : `none`};\n`\nconst InterviewMain = styled.div`\n\n`\nconst AllInterviews = styled.div`\n  display: flex;\n  justify-content: space-between;\n  flex-wrap: wrap;\n  margin: 0 45px;\n`\nconst AuthorBioText = styled.div`\n  width: 100%;\n  height: auto;\n  position: absolute;\n  bottom: 0;\n  left:0;\n  z-index: 9999999999;\n  background-color: rgba(255, 255, 255, 0.96);\n  padding: 30px;\n  font-size: 14px;\n  line-height: 1.5;\n  font-weight:500;\n  border-top: solid thin lightgrey;\n  font-family: 'Lato';\n`\nconst TopText = styled.div`\n  width: 100%;\n  text-align: center;\n  padding: 36px 45px;\n  top:0;\n  background-color: #25292b;\n  color: white;\n`\n\nconst AuthorBio = ({ data }) => (\n  <div\n  dangerouslySetInnerHTML={{\n    __html: data.field_interviewee_bio && data.field_interviewee_bio.processed,\n  }}\n  />\n)\n\nconst InterviewSummary = ({ data }) => {\n  return (\n    <Link style={{\n      flexGrow: 0,\n      flexShrink: 1,\n      marginBottom: 60,\n      flexBasis: 'calc(25% - 30px)',\n      textDecoration: 'none',\n      color: 'inherit'\n    }} to={`/interviews/${kebabCase(data.title)}`}>\n      <InterviewCard>\n        <InterviewImage background={\n          data.relationships.field_interviewee &&\n          data.relationships.field_interviewee.localFile.publicURL\n        } />\n        <InterviewMain>   \n             <InterviewTitle>\n              <div style={{\n                      fontSize:14,\n                      fontWeight:600,\n                      letterSpacing:'0.04em',\n                      marginBottom:7.5}}>\n                      Interview with\n              </div>{data.field_interviewee_name.processed}</InterviewTitle>\n             <InterviewExcerpt \n              dangerouslySetInnerHTML={{\n                    __html: data.field_interview_summary && data.field_interview_summary.processed,\n              }} />\n              <Link style={{fontFamily:'Lato', textDecoration:'none', color:'#5599B4', fontSize:13, letterSpacing:'0.04em', fontWeight:700}} to={`/interviews/${kebabCase(data.title)}`}>Read interview</Link>\n             {/* <AuthorBioText>\n                <AuthorBio data={data}> </AuthorBio>\n             </AuthorBioText> */}\n          {/* {data.relationships.field_belongs_to_subtheme ? (\n          <ul>\n            {data.relationships.field_belongs_to_subtheme.map(subTheme => (\n              <InterviewSummary data={subTheme} />\n            ))}\n          </ul>\n        ) : (\n          <div>No subthemes</div>\n        )} */}\n        </InterviewMain>\n      </InterviewCard>\n    </Link>\n  )\n}\n\nexport default ({ data }) => (\n  <div>\n    <TopText>          \n      <h4 style={{marginBottom:0, display:'inline-block', verticalAlign:'middle'}}>interviews</h4>\n    </TopText>\n    <IntroText dangerouslySetInnerHTML={{\n                  __html: data.taxonomyTermInterviewsPage.description && data.taxonomyTermInterviewsPage.description.processed,\n                }} />\n    <div className={\"interviews\"}>\n    <GreyBackground />\n  \n      <AllInterviews>\n        {data.allNodeInterview.edges.map((edge, i) => (\n          <InterviewSummary data={edge.node} />\n        ))}\n      </AllInterviews>\n    </div>\n  </div>\n)\n\nexport const query = graphql`\n  query InterviewsQuery {\n    taxonomyTermInterviewsPage {\n      id\n      description {\n        processed\n      }\n    }\n    allNodeInterview {\n        edges {\n          node {\n            title\n            field_key_quote {\n              processed\n            }\n            field_interview_summary {\n              processed\n            }\n            field_interviewee_name {\n              processed\n            }\n            field_interviewee_bio {\n              processed\n            }\n            field_full_length_version {\n              processed\n            }\n            relationships {\n              field_interviewee {\n                localFile {\n                  publicURL\n                }\n              }\n            }\n          }\n        }\n      }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.NODE_ENV !== `production`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, { withPrefix, push, replace, navigateTo } from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  push,\n  replace,\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathname(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}