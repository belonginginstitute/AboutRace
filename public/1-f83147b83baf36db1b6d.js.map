{"version":3,"sources":["webpack:///./node_modules/core-js/modules/es6.function.name.js","webpack:///./node_modules/react-burger-menu/lib/menuFactory.js","webpack:///./node_modules/react-burger-menu/lib/BurgerMenu.js","webpack:///./node_modules/react-helmet/lib/Helmet.js","webpack:///./node_modules/react-burger-menu/lib/snapsvgImporter.js","webpack:///./node_modules/react-helmet/lib/HelmetConstants.js","webpack:///./node_modules/react-burger-menu/lib/menus/reveal.js","webpack:///./node_modules/react-burger-menu/lib/menus/fallDown.js","webpack:///./node_modules/react-burger-menu/lib/menus/scaleRotate.js","webpack:///./node_modules/react-burger-menu/lib/menus/scaleDown.js","webpack:///./node_modules/react-burger-menu/lib/menus/pushRotate.js","webpack:///./node_modules/react-burger-menu/lib/menus/push.js","webpack:///./node_modules/react-burger-menu/lib/menus/bubble.js","webpack:///./node_modules/eve/eve.js","webpack:///./node_modules/snapsvg-cjs/dist/snap.svg-cjs.js","webpack:///./node_modules/react-burger-menu/lib/menus/elastic.js","webpack:///./node_modules/react-burger-menu/lib/menus/stack.js","webpack:///./node_modules/react-burger-menu/lib/CrossIcon.js","webpack:///./node_modules/react-burger-menu/lib/BurgerIcon.js","webpack:///./node_modules/react-burger-menu/lib/baseStyles.js","webpack:///./node_modules/react-burger-menu/lib/menus/slide.js","webpack:///./node_modules/react-helmet/lib/HelmetUtils.js","webpack:///./node_modules/deep-equal/lib/is_arguments.js","webpack:///./node_modules/deep-equal/lib/keys.js","webpack:///./node_modules/deep-equal/index.js","webpack:///./node_modules/shallowequal/index.js","webpack:///./node_modules/exenv/index.js","webpack:///./node_modules/react-side-effect/lib/index.js"],"names":["dP","__webpack_require__","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e","245","t","n","Object","defineProperty","exports","value","_extends","assign","target","i","arguments","length","source","key","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","writable","Constructor","protoProps","staticProps","_get","_x3","_x4","_x5","_again","object","property","receiver","desc","getOwnPropertyDescriptor","getter","parent","getPrototypeOf","_interopRequireDefault","obj","__esModule","default","_react","_react2","_reactDom2","_propTypes2","_baseStyles2","_BurgerIcon2","_CrossIcon2","styles","Menu","_Component","instance","TypeError","state","isOpen","subClass","superClass","create","constructor","setPrototypeOf","__proto__","Component","_this","options","noStateChange","newState","applyWrapperStyles","setState","onStateChange","timeoutId","clearTimeout","setTimeout","set","bodyClassName","document","querySelector","classList","pageWrap","pageWrapId","handleExternalWrapper","outerContainer","outerContainerId","id","wrapperStyles","html","body","wrapper","getElementById","builtStyles","getStyle","prop","style","forEach","element","console","error","el","index","inline","propName","replace","charAt","toUpperCase","output","width","formattedWidth","right","window","event","keyCode","toggleMenu","disableOverlayClick","Error","customOnKeyDown","onkeydown","disableCloseOnEsc","listenForClose","bind","morphShape","path","svg","findDOMNode","lib","select","animate","attr","pathInitial","nextProps","_this3","createElement","noOverlay","className","overlayClassName","trim","onClick","shouldDisableOverlayClick","getStyles","morphShapeClassName","height","viewBox","preserveAspectRatio","d","menuClassName","itemListClassName","Children","map","children","item","extraProps","itemClassName","filter","join","cloneElement","customCrossIcon","customIcon","crossButtonClassName","crossClassName","customBurgerIcon","burgerButtonClassName","barClassName","burgerBarClassName","propTypes","string","oneOfType","oneOf","func","bool","isRequired","number","defaultProps","module","247","slide","stack","elastic","bubble","push","pushRotate","scaleDown","scaleRotate","fallDown","reveal","248","Helmet","_reactSideEffect2","_deepEqual2","_HelmetUtils","_HelmetConstants","_objectWithoutProperties","keys","indexOf","_class","_temp","HelmetSideEffects","reducePropsToState","handleClientStateChange","mapStateOnServer","HelmetExport","_React$Component","HelmetWrapper","self","ReferenceError","apply","shouldComponentUpdate","mapNestedChildrenToProps","child","nestedChildren","type","TAG_NAMES","SCRIPT","NOSCRIPT","innerHTML","STYLE","cssText","flattenArrayTypeChildren","_ref","_extends2","arrayTypeChildren","newChildProps","concat","mapObjectTypeChildren","_ref2","_extends3","_extends4","newProps","TITLE","titleAttributes","BODY","bodyAttributes","HTML","htmlAttributes","mapArrayTypeChildrenToProps","newFlattenedProps","arrayChildName","_extends5","warnOnInvalidChildren","mapChildrenToProps","_this2","_child$props","childProps","convertReactPropstoHtmlAttributes","LINK","META","render","_props","canUseDOM","base","arrayOf","node","defaultTitle","defer","encodeSpecialCharacters","link","meta","noscript","onChangeClientState","script","title","titleTemplate","peek","rewind","mappedState","baseTag","linkTags","metaTags","noscriptTags","scriptTags","styleTags","renderStatic","Snap","269","ATTRIBUTE_NAMES","BASE","HEAD","REACT_TAG_MAP","VALID_TAG_NAMES","name","TAG_PROPERTIES","CHARSET","CSS_TEXT","HREF","HTTPEQUIV","INNER_HTML","ITEM_PROP","NAME","PROPERTY","REL","SRC","accesskey","charset","class","contenteditable","contextmenu","http-equiv","itemprop","tabindex","HELMET_PROPS","DEFAULT_TITLE","DEFER","ENCODE_SPECIAL_CHARACTERS","ON_CHANGE_CLIENT_STATE","TITLE_TEMPLATE","HTML_TAG_MAP","reduce","SELF_CLOSING_TAGS","HELMET_ATTRIBUTE","282","_menuFactory2","menuWrap","visibility","MozTransform","MsTransform","OTransform","WebkitTransform","transform","zIndex","overlay","transition","position","burgerIcon","overflow","283","perspective","perspectiveOrigin","284","transformStyle","285","transformOrigin","286","287","288","_snapsvgImporter2","pathOpen","pos","steps","split","stepsTotal","mina","nextStep","easein","left","menu","opacity","nthChild","closeButton","289","__WEBPACK_AMD_DEFINE_RESULT__","glob","current_event","stop","has","separator","comaseparator","numsort","events","firstDefined","lastDefined","objtos","Str","isArray","eve","a","b","ii","toString","String","Array","ar","scope","l","oldstop","args","slice","listeners","z","indexed","queue","out","ce","sort","_events","items","k","j","jj","nes","names","es","sep","RegExp","on","exist","attrs","nt","subname","cur","test","nts","off","unbind","splice","inodes","unshift","funcs","prune","once","f2","version","requestID","animations","requestAnimFrame","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","oRequestAnimationFrame","msRequestAnimationFrame","callback","Date","getTime","idgen","idprefix","timer","now","sta","val","s","ds","dur","B","speed","spd","duration","stopit","update","pause","pdif","resume","frame","res","start","end","easing","timeStamp","len","A","anim","linear","status","time","getById","easeout","Math","pow","easeinout","q","Q","sqrt","x","y","abs","backin","backout","sin","PI","bounce","p","root","w","h","nodeType","wrap","is","Element","doc","Paper","_","win","tokenRegex","objNotationRegex","toFloat","parseFloat","toInt","parseInt","math","mmax","max","mmin","min","E","round","objectToString","colourRegExp","commaSpaces","hsrg","hs","rg","pathCommand","tCommand","pathValues","ID","xlink","xmlns","hub","$","createTextNode","text","createComment","substring","getAttributeNS","getAttribute","nodeValue","setAttributeNS","setAttribute","removeAttribute","createElementNS","o","toLowerCase","isFinite","cacher","postprocessor","newf","arg","cache","count","array","shift","rad","deg","url","format","str","all","quote","quotedName","isFunc","clone","angle","tan","cos","asin","num","acos","atan","atan2","x1","y1","x2","y2","x3","y3","len2","closestPoint","distance2","dx","dy","best","bestLength","scan","scanDistance","pathNode","pathLength","getTotalLength","precision","pathSegList","numberOfItems","bestDistance","Infinity","scanLength","getPointAtLength","before","after","beforeLength","afterLength","beforeDistance","afterDistance","distance","snapTo","values","tolerance","rem","getRGB","colour","r","g","hex","rgbtoString","toHex","red","green","blue","rgb","hsb2rgb","hsl2rgb","hsb","hsl","toFixed","color","getElementsByTagName","defaultView","getComputedStyle","getPropertyValue","hsbtoString","hsltoString","prepareRGB","clr","packageRGB","rgb2hsl","rgb2hsb","v","R","G","X","C","V","L","M","m","parsePathString","pathString","pth","arr","paramCounts","c","u","data","params","parseTransformString","TString","getSomeSVG","ownerSVGElement","add2group","list","appendChild","childNodes","snap","paper","tagName","nodeName","anims","add","mask","pattern","symbol","method","Fragment","frag","make","defs","proto","ownerDocument","dom","contentDocument","svgTransform2string","tstr","rgTransform","transform2matrix","bbox","tdata","Matrix","bb","tlen","command","absolute","inver","invert","translate","rotate","scale","_unit2px","mgr","getW","getBBox","getH","nam","fill","removeChild","contains","compareDocumentPosition","getSomeDefs","parentNode","pdefs","query","selectAll","nodelist","querySelectorAll","setInterval","attributes","json","att","parse","createDocumentFragment","full","div","firstChild","fragment","ch","toJSON","jsonFiller","css","lastIndexOf","letter","cssAttr","alignment-baseline","baseline-shift","clip","clip-path","clip-rule","color-interpolation","color-interpolation-filters","color-profile","color-rendering","cursor","direction","display","dominant-baseline","enable-background","fill-opacity","fill-rule","flood-color","flood-opacity","font","font-family","font-size","font-size-adjust","font-stretch","font-style","font-variant","font-weight","glyph-orientation-horizontal","glyph-orientation-vertical","image-rendering","kerning","letter-spacing","lighting-color","marker","marker-end","marker-mid","marker-start","pointer-events","shape-rendering","stop-color","stop-opacity","stroke","stroke-dasharray","stroke-dashoffset","stroke-linecap","stroke-linejoin","stroke-miterlimit","stroke-opacity","stroke-width","text-anchor","text-decoration","text-rendering","unicode-bidi","word-spacing","writing-mode","ajax","postData","req","XMLHttpRequest","pd","encodeURIComponent","open","setRequestHeader","onreadystatechange","readyState","send","load","responseText","getElementByPoint","canvas","elem","box","docElem","clientTop","clientLeft","elementFromPoint","opera","so","getBoundingClientRect","documentElement","top","pageYOffset","scrollTop","pageXOffset","scrollLeft","sr","createSVGRect","hits","getIntersectionList","plugin","elproto","unit2px","isWithoutTransform","getClientRects","removed","localMatrix","original","href","pathfinder","deflt","bboxwt","realPath","matrix","propString","extractTransform","doReturn","papa","global","getCTM","local","ms","localString","toTransformString","globalMatrix","totalMatrix","diffMatrix","total","gradientTransform","patternTransform","append","it","appendTo","prepend","first","insertBefore","prependTo","nextSibling","insertAfter","remove","asPX","use","xlink:href","cloneNode","els","ids","uses","urltest","linktest","oldid","old","fs","toDefs","toPattern","patternUnits","refX","refY","cx","cy","markerWidth","markerHeight","orient","eldata","chld","removeData","outerSVG","innerSVG","toDataURL","btoa","contents","unescape","matrixproto","norm","normalize","mag","aNew","bNew","multLeft","cNew","eNew","me","skewX","skew","skewY","fromCharCode","offset","determinant","row","scalex","shear","scaley","isSimple","isSuperSimple","noRotation","shorter","clipIt","reURLValue","URL","fillStroke","grad","gradient","deurl","gradrg","setFontSize","fontSize","getFontSize","tokens","stops","seed","step","toAbsolute","txt","baseVal","vb","rx","ry","tp","textPath","tuner","chunk","tuned","setter","textExtract","chi","textContent","internal","rgNotSpace","addClass","clazz","finalValue","classes","curClasses","removeClass","hasClass","toggleClass","flag","operators","+","-","/","*","reUnit","reAddon","getNumber","plus","evnt","atr","unit","aUnit","op","isNaN","bplus","from","to","rect","circle","preload","onerror","src","img","onload","image","offsetWidth","offsetHeight","ellipse","group","vbx","vby","vbw","vbh","ptrn","vx","vy","vw","vh","line","polyline","points","polygon","Gstops","GaddStop","inserted","GgetBBox","GsetStops","addStop","gradientLinear","setStops","gradientRadial","fx","fy","gradientUnits","clear","next","p2s","paths","ps","sleep","r1","r2","r0","rectPath","pathClone","pathArray","getPointAtSegmentLength","p1x","p1y","c1x","c1y","c2x","c2y","p2x","p2y","bezlen","findDotsAtSegment","x4","y4","ll","t2","getLengthFactory","istotal","subpath","O","onlystart","point","sp","subpaths","path2curve","getSubpathsAtLength","t1","t13","t12","t3","mx","my","nx","ny","alpha","bezierBBox","curveDim","isPointInsideBBox","isBBoxIntersect","bbox1","bbox2","base3","p1","p2","p3","p4","z2","Tvalues","Cvalues","sum","ct","xbase","ybase","comb","intersect","denominator","px","py","px2","py2","interHelper","bez1","bez2","justCount","n1","n2","dots1","dots2","xy","di","di1","dj","dj1","ci","cj","interPathHelper","path1","path2","x1m","y1m","x2m","y2m","pi","pj","intr","kk","segment1","segment2","pathBBox","Y","dim","xmin","ymin","ellipsePath","getPath","pathToAbsolute","pa0","pa","crz","dots","pop","catmullRom2bezier","l2c","q2c","ax","ay","x0","y0","b2ac","sqrtb2ac","tvalues","bounds","mt","jlen","curve","bx","by","qx","qy","attrs2","processPath","pcom","T","a2c","large_arc_flag","sweep_flag","recursive","_120","f1","rx2","ry2","df","f2old","x2old","y2old","c1","s1","c2","s2","hx","hy","m1","m2","m3","m4","newres","fixArc","pp","pcoms1","pcoms2","fixM","a1","a2","pfirst","seg","seg2","seglen","seg2len","crp","iLen","getSubpath","closest","inside","found","intersection","intersectionNumber","isPointInside","toRelative","lowerCase","rel","toCubic","pathi","Set","bindings","setproto","thisArg","Animation","each","begin","handler","cb","callbacker","aname","unbound","insertion","tail","todel","arglen","exclude","getEmpty","getViewBox","getColour","path2array","isNumeric","equal","Number","tt1","tt2","maxlength","arr1","arr2","bUnit","supportsTouch","touchMap","mousedown","mousemove","mouseup","getScroll","preventTouch","originalEvent","preventDefault","stopTouch","stopPropagation","addEvent","fn","realName","scrollY","scrollX","targetTouches","olde","clientX","clientY","addEventListener","removeEventListener","drag","dragMove","dragi","touch","touches","identifier","_drag","move_scope","dragUp","unmousemove","unmouseup","end_scope","start_scope","eventName","hover","f_in","f_out","scope_in","scope_out","mouseover","mouseout","unhover","unmouseover","unmouseout","draggable","onmove","onstart","onend","origTransform","init","undrag","unmousedown","pproto","rgurl","filstr","filterUnits","blur","def","shadow","grayscale","amount","sepia","saturate","hueRotate","amount2","brightness","contrast","firstLetter","getAlign","way","align","animation","inAnim","_attrs","_callback","curStatus","eq","fkeys","tkeys","saveColor","colors","A100","A200","A400","A700","mui","flat","pink","purple","deeppurple","indigo","lightblue","cyan","teal","lightgreen","lime","yellow","amber","orange","deeporange","brown","grey","bluegrey","turquoise","greensea","sunflower","emerland","nephritis","carrot","pumpkin","peterriver","belizehole","alizarin","pomegranate","amethyst","wisteria","clouds","silver","wetasphalt","midnightblue","concrete","asbestos","importMUIColors","whiteSpace","boxSizing","itemList","292","293","_x","_x2","CrossIcon","icon","bmCross","getCrossStyle","bmCrossButton","margin","padding","border","textIndent","background","outline","294","BurgerIcon","bmIcon","bar","getLineStyle","bmBurgerBars","bmBurgerButton","onMouseOver","onMouseOut","295","296","297","warn","_typeof","Symbol","iterator","_objectAssign2","clock","getAttributesFromPropsList","tagType","propsList","tagAttrs","current","getTagsFromPropsList","primaryAttributes","approvedSeenTags","reverse","approvedTags","instanceTags","instanceSeenTags","tag","primaryAttributeKey","attributeKey","lowerCaseAttributeKey","tagUnion","getInnermostProperty","rafPolyfill","currentTime","cafPolyfill","cancelAnimationFrame","webkitCancelAnimationFrame","mozCancelAnimationFrame","msg","_helmetCallback","commitTagChanges","updateAttributes","updateTitle","tagUpdates","updateTags","addedTags","removedTags","_tagUpdates$tagType","newTags","oldTags","flattenArray","possibleArray","elementTag","helmetAttributeString","helmetAttributes","attributesToRemove","attributeKeys","attribute","indexToSave","_i","tags","headElement","head","tagNodes","indexToDelete","newElement","styleSheet","some","existingTag","isEqualNode","generateElementAttributesAsString","convertElementAttributestoReactProps","initProps","getMethodsForTag","encode","toComponent","_initProps","attributeString","flattenedTitle","_mappedTag","mappedTag","mappedAttribute","content","dangerouslySetInnerHTML","__html","attributeHtml","tagContent","isSelfClosing","initAttributes","_ref$title","innermostBaseTag","innermostTitle","innermostTemplate","innermostDefaultTitle","supportsArgumentsClass","supported","unsupported","propertyIsEnumerable","shim","pSlice","objectKeys","isArguments","deepEqual","actual","expected","opts","strict","isUndefinedOrNull","isBuffer","ka","kb","copy","301","objA","objB","compare","compareContext","ret","keysA","keysB","bHasOwnProperty","idx","valueA","valueB","302","ExecutionEnvironment","canUseWorkers","Worker","canUseEventListeners","attachEvent","canUseViewport","screen","303","_interopDefault","ex","React","React__default","shallowEqual","handleStateChangeOnClient","WrappedComponent","mountedInstances","emitChange","SideEffect","recordedState","componentWillMount","componentDidUpdate","componentWillUnmount","displayName"],"mappings":"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","file":"1-f83147b83baf36db1b6d.js","sourcesContent":["var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x3, _x4, _x5) { var _again = true; _function: while (_again) { var object = _x3, property = _x4, receiver = _x5; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x3 = parent; _x4 = property; _x5 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactDom = require('react-dom');\n\nvar _reactDom2 = _interopRequireDefault(_reactDom);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _baseStyles = require('./baseStyles');\n\nvar _baseStyles2 = _interopRequireDefault(_baseStyles);\n\nvar _BurgerIcon = require('./BurgerIcon');\n\nvar _BurgerIcon2 = _interopRequireDefault(_BurgerIcon);\n\nvar _CrossIcon = require('./CrossIcon');\n\nvar _CrossIcon2 = _interopRequireDefault(_CrossIcon);\n\nexports['default'] = function (styles) {\n  var Menu = (function (_Component) {\n    _inherits(Menu, _Component);\n\n    function Menu(props) {\n      _classCallCheck(this, Menu);\n\n      _get(Object.getPrototypeOf(Menu.prototype), 'constructor', this).call(this, props);\n      this.state = {\n        isOpen: false\n      };\n    }\n\n    _createClass(Menu, [{\n      key: 'toggleMenu',\n      value: function toggleMenu() {\n        var _this = this;\n\n        var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n        var isOpen = options.isOpen;\n        var noStateChange = options.noStateChange;\n\n        var newState = {\n          isOpen: typeof isOpen !== 'undefined' ? isOpen : !this.state.isOpen\n        };\n\n        this.applyWrapperStyles();\n\n        this.setState(newState, function () {\n          !noStateChange && _this.props.onStateChange(newState);\n\n          // Timeout ensures wrappers are cleared after animation finishes.\n          _this.timeoutId && clearTimeout(_this.timeoutId);\n          _this.timeoutId = setTimeout(function () {\n            _this.timeoutId = null;\n            if (!newState.isOpen) {\n              _this.applyWrapperStyles(false);\n            }\n          }, 500);\n        });\n      }\n\n      // Applies component-specific styles to external wrapper elements.\n    }, {\n      key: 'applyWrapperStyles',\n      value: function applyWrapperStyles() {\n        var set = arguments.length <= 0 || arguments[0] === undefined ? true : arguments[0];\n\n        if (this.props.bodyClassName) {\n          var body = document.querySelector('body');\n          body.classList[set ? 'add' : 'remove'](this.props.bodyClassName);\n        }\n\n        if (styles.pageWrap && this.props.pageWrapId) {\n          this.handleExternalWrapper(this.props.pageWrapId, styles.pageWrap, set);\n        }\n\n        if (styles.outerContainer && this.props.outerContainerId) {\n          this.handleExternalWrapper(this.props.outerContainerId, styles.outerContainer, set);\n        }\n      }\n\n      // Sets or unsets styles on DOM elements outside the menu component.\n      // This is necessary for correct page interaction with some of the menus.\n      // Throws and returns if the required external elements don't exist,\n      // which means any external page animations won't be applied.\n    }, {\n      key: 'handleExternalWrapper',\n      value: function handleExternalWrapper(id, wrapperStyles, set) {\n        var html = document.querySelector('html');\n        var body = document.querySelector('body');\n        var wrapper = document.getElementById(id);\n\n        if (!wrapper) {\n          console.error(\"Element with ID '\" + id + \"' not found\");\n          return;\n        }\n\n        var builtStyles = this.getStyle(wrapperStyles);\n\n        for (var prop in builtStyles) {\n          if (builtStyles.hasOwnProperty(prop)) {\n            wrapper.style[prop] = set ? builtStyles[prop] : '';\n          }\n        }\n\n        // Prevent any horizontal scroll.\n        [html, body].forEach(function (element) {\n          element.style['overflow-x'] = set ? 'hidden' : '';\n        });\n      }\n\n      // Builds styles incrementally for a given element.\n    }, {\n      key: 'getStyles',\n      value: function getStyles(el, index, inline) {\n        var propName = 'bm' + el.replace(el.charAt(0), el.charAt(0).toUpperCase());\n\n        // Set base styles.\n        var output = _baseStyles2['default'][el] ? this.getStyle(_baseStyles2['default'][el]) : {};\n\n        // Add animation-specific styles.\n        if (styles[el]) {\n          output = _extends({}, output, this.getStyle(styles[el], index + 1));\n        }\n\n        // Add custom styles.\n        if (this.props.styles[propName]) {\n          output = _extends({}, output, this.props.styles[propName]);\n        }\n\n        // Add element inline styles.\n        if (inline) {\n          output = _extends({}, output, inline);\n        }\n\n        return output;\n      }\n    }, {\n      key: 'getStyle',\n      value: function getStyle(style, index) {\n        var width = this.props.width;\n\n        var formattedWidth = typeof width !== 'string' ? width + 'px' : width;\n        return style(this.state.isOpen, formattedWidth, this.props.right, index);\n      }\n    }, {\n      key: 'listenForClose',\n      value: function listenForClose(e) {\n        e = e || window.event;\n\n        if (this.state.isOpen && (e.key === 'Escape' || e.keyCode === 27)) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'shouldDisableOverlayClick',\n      value: function shouldDisableOverlayClick() {\n        if (typeof this.props.disableOverlayClick === 'function') {\n          return this.props.disableOverlayClick();\n        } else {\n          return this.props.disableOverlayClick;\n        }\n      }\n    }, {\n      key: 'componentWillMount',\n      value: function componentWillMount() {\n        if (!styles) {\n          throw new Error('No styles supplied');\n        }\n      }\n    }, {\n      key: 'componentDidMount',\n      value: function componentDidMount() {\n        // Bind ESC key handler (unless disabled or custom function supplied).\n        if (this.props.customOnKeyDown) {\n          window.onkeydown = this.props.customOnKeyDown;\n        } else if (!this.props.disableCloseOnEsc) {\n          window.onkeydown = this.listenForClose.bind(this);\n        }\n\n        // Allow initial open state to be set by props.\n        if (this.props.isOpen) {\n          this.toggleMenu({ isOpen: true, noStateChange: true });\n        }\n      }\n    }, {\n      key: 'componentWillUnmount',\n      value: function componentWillUnmount() {\n        window.onkeydown = null;\n\n        this.applyWrapperStyles(false);\n      }\n    }, {\n      key: 'componentDidUpdate',\n      value: function componentDidUpdate() {\n        var _this2 = this;\n\n        if (styles.svg) {\n          (function () {\n            var morphShape = _reactDom2['default'].findDOMNode(_this2, 'bm-morph-shape');\n            var path = styles.svg.lib(morphShape).select('path');\n\n            if (_this2.state.isOpen) {\n              // Animate SVG path.\n              styles.svg.animate(path);\n            } else {\n              // Reset path (timeout ensures animation happens off screen).\n              setTimeout(function () {\n                path.attr('d', styles.svg.pathInitial);\n              }, 300);\n            }\n          })();\n        }\n      }\n    }, {\n      key: 'componentWillReceiveProps',\n      value: function componentWillReceiveProps(nextProps) {\n        if (typeof nextProps.isOpen !== 'undefined' && nextProps.isOpen !== this.state.isOpen) {\n          this.toggleMenu();\n        }\n      }\n    }, {\n      key: 'render',\n      value: function render() {\n        var _this3 = this;\n\n        return _react2['default'].createElement(\n          'div',\n          null,\n          !this.props.noOverlay && _react2['default'].createElement('div', {\n            className: ('bm-overlay ' + this.props.overlayClassName).trim(),\n            onClick: function () {\n              return !_this3.shouldDisableOverlayClick() && _this3.toggleMenu();\n            },\n            style: this.getStyles('overlay')\n          }),\n          _react2['default'].createElement(\n            'div',\n            {\n              id: this.props.id,\n              className: ('bm-menu-wrap ' + this.props.className).trim(),\n              style: this.getStyles('menuWrap')\n            },\n            styles.svg && _react2['default'].createElement(\n              'div',\n              {\n                className: ('bm-morph-shape ' + this.props.morphShapeClassName).trim(),\n                style: this.getStyles('morphShape')\n              },\n              _react2['default'].createElement(\n                'svg',\n                {\n                  width: '100%',\n                  height: '100%',\n                  viewBox: '0 0 100 800',\n                  preserveAspectRatio: 'none'\n                },\n                _react2['default'].createElement('path', { d: styles.svg.pathInitial })\n              )\n            ),\n            _react2['default'].createElement(\n              'div',\n              {\n                className: ('bm-menu ' + this.props.menuClassName).trim(),\n                style: this.getStyles('menu')\n              },\n              _react2['default'].createElement(\n                'nav',\n                {\n                  className: ('bm-item-list ' + this.props.itemListClassName).trim(),\n                  style: this.getStyles('itemList')\n                },\n                _react2['default'].Children.map(this.props.children, function (item, index) {\n                  if (item) {\n                    var classList = ['bm-item', _this3.props.itemClassName, item.props.className].filter(function (className) {\n                      return !!className;\n                    }).join(' ');\n                    var extraProps = {\n                      key: index,\n                      className: classList,\n                      style: _this3.getStyles('item', index, item.props.style)\n                    };\n                    return _react2['default'].cloneElement(item, extraProps);\n                  }\n                })\n              )\n            ),\n            this.props.customCrossIcon !== false && _react2['default'].createElement(\n              'div',\n              { style: this.getStyles('closeButton') },\n              _react2['default'].createElement(_CrossIcon2['default'], {\n                onClick: function () {\n                  return _this3.toggleMenu();\n                },\n                styles: this.props.styles,\n                customIcon: this.props.customCrossIcon,\n                className: this.props.crossButtonClassName,\n                crossClassName: this.props.crossClassName\n              })\n            )\n          ),\n          this.props.customBurgerIcon !== false && _react2['default'].createElement(\n            'div',\n            { style: this.getStyles('burgerIcon') },\n            _react2['default'].createElement(_BurgerIcon2['default'], {\n              onClick: function () {\n                return _this3.toggleMenu();\n              },\n              styles: this.props.styles,\n              customIcon: this.props.customBurgerIcon,\n              className: this.props.burgerButtonClassName,\n              barClassName: this.props.burgerBarClassName\n            })\n          )\n        );\n      }\n    }]);\n\n    return Menu;\n  })(_react.Component);\n\n  Menu.propTypes = {\n    bodyClassName: _propTypes2['default'].string,\n    burgerBarClassName: _propTypes2['default'].string,\n    burgerButtonClassName: _propTypes2['default'].string,\n    crossButtonClassName: _propTypes2['default'].string,\n    crossClassName: _propTypes2['default'].string,\n    customBurgerIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customCrossIcon: _propTypes2['default'].oneOfType([_propTypes2['default'].element, _propTypes2['default'].oneOf([false])]),\n    customOnKeyDown: _propTypes2['default'].func,\n    disableCloseOnEsc: _propTypes2['default'].bool,\n    disableOverlayClick: _propTypes2['default'].oneOfType([_propTypes2['default'].bool, _propTypes2['default'].func]),\n    id: _propTypes2['default'].string,\n    isOpen: _propTypes2['default'].bool,\n    itemClassName: _propTypes2['default'].string,\n    itemListClassName: _propTypes2['default'].string,\n    menuClassName: _propTypes2['default'].string,\n    morphShapeClassName: _propTypes2['default'].string,\n    noOverlay: _propTypes2['default'].bool,\n    onStateChange: _propTypes2['default'].func,\n    outerContainerId: styles && styles.outerContainer ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    overlayClassName: _propTypes2['default'].string,\n    pageWrapId: styles && styles.pageWrap ? _propTypes2['default'].string.isRequired : _propTypes2['default'].string,\n    right: _propTypes2['default'].bool,\n    styles: _propTypes2['default'].object,\n    width: _propTypes2['default'].oneOfType([_propTypes2['default'].number, _propTypes2['default'].string])\n  };\n\n  Menu.defaultProps = {\n    bodyClassName: '',\n    burgerBarClassName: '',\n    burgerButtonClassName: '',\n    className: '',\n    crossButtonClassName: '',\n    crossClassName: '',\n    disableCloseOnEsc: false,\n    id: '',\n    itemClassName: '',\n    itemListClassName: '',\n    menuClassName: '',\n    morphShapeClassName: '',\n    noOverlay: false,\n    onStateChange: function onStateChange() {},\n    outerContainerId: '',\n    overlayClassName: '',\n    pageWrapId: '',\n    styles: {},\n    width: 300\n  };\n\n  return Menu;\n};\n\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nexports['default'] = {\n  slide: require('./menus/slide'),\n  stack: require('./menus/stack'),\n  elastic: require('./menus/elastic'),\n  bubble: require('./menus/bubble'),\n  push: require('./menus/push'),\n  pushRotate: require('./menus/pushRotate'),\n  scaleDown: require('./menus/scaleDown'),\n  scaleRotate: require('./menus/scaleRotate'),\n  fallDown: require('./menus/fallDown'),\n  reveal: require('./menus/reveal')\n};\nmodule.exports = exports['default'];","exports.__esModule = true;\nexports.Helmet = undefined;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require(\"prop-types\");\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _reactSideEffect = require(\"react-side-effect\");\n\nvar _reactSideEffect2 = _interopRequireDefault(_reactSideEffect);\n\nvar _deepEqual = require(\"deep-equal\");\n\nvar _deepEqual2 = _interopRequireDefault(_deepEqual);\n\nvar _HelmetUtils = require(\"./HelmetUtils.js\");\n\nvar _HelmetConstants = require(\"./HelmetConstants.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar Helmet = function Helmet(Component) {\n    var _class, _temp;\n\n    return _temp = _class = function (_React$Component) {\n        _inherits(HelmetWrapper, _React$Component);\n\n        function HelmetWrapper() {\n            _classCallCheck(this, HelmetWrapper);\n\n            return _possibleConstructorReturn(this, _React$Component.apply(this, arguments));\n        }\n\n        HelmetWrapper.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n            return !(0, _deepEqual2.default)(this.props, nextProps);\n        };\n\n        HelmetWrapper.prototype.mapNestedChildrenToProps = function mapNestedChildrenToProps(child, nestedChildren) {\n            if (!nestedChildren) {\n                return null;\n            }\n\n            switch (child.type) {\n                case _HelmetConstants.TAG_NAMES.SCRIPT:\n                case _HelmetConstants.TAG_NAMES.NOSCRIPT:\n                    return {\n                        innerHTML: nestedChildren\n                    };\n\n                case _HelmetConstants.TAG_NAMES.STYLE:\n                    return {\n                        cssText: nestedChildren\n                    };\n            }\n\n            throw new Error(\"<\" + child.type + \" /> elements are self-closing and can not contain children. Refer to our API for more information.\");\n        };\n\n        HelmetWrapper.prototype.flattenArrayTypeChildren = function flattenArrayTypeChildren(_ref) {\n            var _extends2;\n\n            var child = _ref.child,\n                arrayTypeChildren = _ref.arrayTypeChildren,\n                newChildProps = _ref.newChildProps,\n                nestedChildren = _ref.nestedChildren;\n\n            return _extends({}, arrayTypeChildren, (_extends2 = {}, _extends2[child.type] = [].concat(arrayTypeChildren[child.type] || [], [_extends({}, newChildProps, this.mapNestedChildrenToProps(child, nestedChildren))]), _extends2));\n        };\n\n        HelmetWrapper.prototype.mapObjectTypeChildren = function mapObjectTypeChildren(_ref2) {\n            var _extends3, _extends4;\n\n            var child = _ref2.child,\n                newProps = _ref2.newProps,\n                newChildProps = _ref2.newChildProps,\n                nestedChildren = _ref2.nestedChildren;\n\n            switch (child.type) {\n                case _HelmetConstants.TAG_NAMES.TITLE:\n                    return _extends({}, newProps, (_extends3 = {}, _extends3[child.type] = nestedChildren, _extends3.titleAttributes = _extends({}, newChildProps), _extends3));\n\n                case _HelmetConstants.TAG_NAMES.BODY:\n                    return _extends({}, newProps, {\n                        bodyAttributes: _extends({}, newChildProps)\n                    });\n\n                case _HelmetConstants.TAG_NAMES.HTML:\n                    return _extends({}, newProps, {\n                        htmlAttributes: _extends({}, newChildProps)\n                    });\n            }\n\n            return _extends({}, newProps, (_extends4 = {}, _extends4[child.type] = _extends({}, newChildProps), _extends4));\n        };\n\n        HelmetWrapper.prototype.mapArrayTypeChildrenToProps = function mapArrayTypeChildrenToProps(arrayTypeChildren, newProps) {\n            var newFlattenedProps = _extends({}, newProps);\n\n            Object.keys(arrayTypeChildren).forEach(function (arrayChildName) {\n                var _extends5;\n\n                newFlattenedProps = _extends({}, newFlattenedProps, (_extends5 = {}, _extends5[arrayChildName] = arrayTypeChildren[arrayChildName], _extends5));\n            });\n\n            return newFlattenedProps;\n        };\n\n        HelmetWrapper.prototype.warnOnInvalidChildren = function warnOnInvalidChildren(child, nestedChildren) {\n            if (process.env.NODE_ENV !== \"production\") {\n                if (!_HelmetConstants.VALID_TAG_NAMES.some(function (name) {\n                    return child.type === name;\n                })) {\n                    if (typeof child.type === \"function\") {\n                        return (0, _HelmetUtils.warn)(\"You may be attempting to nest <Helmet> components within each other, which is not allowed. Refer to our API for more information.\");\n                    }\n\n                    return (0, _HelmetUtils.warn)(\"Only elements types \" + _HelmetConstants.VALID_TAG_NAMES.join(\", \") + \" are allowed. Helmet does not support rendering <\" + child.type + \"> elements. Refer to our API for more information.\");\n                }\n\n                if (nestedChildren && typeof nestedChildren !== \"string\" && (!Array.isArray(nestedChildren) || nestedChildren.some(function (nestedChild) {\n                    return typeof nestedChild !== \"string\";\n                }))) {\n                    throw new Error(\"Helmet expects a string as a child of <\" + child.type + \">. Did you forget to wrap your children in braces? ( <\" + child.type + \">{``}</\" + child.type + \"> ) Refer to our API for more information.\");\n                }\n            }\n\n            return true;\n        };\n\n        HelmetWrapper.prototype.mapChildrenToProps = function mapChildrenToProps(children, newProps) {\n            var _this2 = this;\n\n            var arrayTypeChildren = {};\n\n            _react2.default.Children.forEach(children, function (child) {\n                if (!child || !child.props) {\n                    return;\n                }\n\n                var _child$props = child.props,\n                    nestedChildren = _child$props.children,\n                    childProps = _objectWithoutProperties(_child$props, [\"children\"]);\n\n                var newChildProps = (0, _HelmetUtils.convertReactPropstoHtmlAttributes)(childProps);\n\n                _this2.warnOnInvalidChildren(child, nestedChildren);\n\n                switch (child.type) {\n                    case _HelmetConstants.TAG_NAMES.LINK:\n                    case _HelmetConstants.TAG_NAMES.META:\n                    case _HelmetConstants.TAG_NAMES.NOSCRIPT:\n                    case _HelmetConstants.TAG_NAMES.SCRIPT:\n                    case _HelmetConstants.TAG_NAMES.STYLE:\n                        arrayTypeChildren = _this2.flattenArrayTypeChildren({\n                            child: child,\n                            arrayTypeChildren: arrayTypeChildren,\n                            newChildProps: newChildProps,\n                            nestedChildren: nestedChildren\n                        });\n                        break;\n\n                    default:\n                        newProps = _this2.mapObjectTypeChildren({\n                            child: child,\n                            newProps: newProps,\n                            newChildProps: newChildProps,\n                            nestedChildren: nestedChildren\n                        });\n                        break;\n                }\n            });\n\n            newProps = this.mapArrayTypeChildrenToProps(arrayTypeChildren, newProps);\n            return newProps;\n        };\n\n        HelmetWrapper.prototype.render = function render() {\n            var _props = this.props,\n                children = _props.children,\n                props = _objectWithoutProperties(_props, [\"children\"]);\n\n            var newProps = _extends({}, props);\n\n            if (children) {\n                newProps = this.mapChildrenToProps(children, newProps);\n            }\n\n            return _react2.default.createElement(Component, newProps);\n        };\n\n        _createClass(HelmetWrapper, null, [{\n            key: \"canUseDOM\",\n\n\n            // Component.peek comes from react-side-effect:\n            // For testing, you may use a static peek() method available on the returned component.\n            // It lets you get the current state without resetting the mounted instance stack.\n            // Don’t use it for anything other than testing.\n\n            /**\n            * @param {Object} base: {\"target\": \"_blank\", \"href\": \"http://mysite.com/\"}\n            * @param {Object} bodyAttributes: {\"className\": \"root\"}\n            * @param {String} defaultTitle: \"Default Title\"\n            * @param {Boolean} defer: true\n            * @param {Boolean} encodeSpecialCharacters: true\n            * @param {Object} htmlAttributes: {\"lang\": \"en\", \"amp\": undefined}\n            * @param {Array} link: [{\"rel\": \"canonical\", \"href\": \"http://mysite.com/example\"}]\n            * @param {Array} meta: [{\"name\": \"description\", \"content\": \"Test description\"}]\n            * @param {Array} noscript: [{\"innerHTML\": \"<img src='http://mysite.com/js/test.js'\"}]\n            * @param {Function} onChangeClientState: \"(newState) => console.log(newState)\"\n            * @param {Array} script: [{\"type\": \"text/javascript\", \"src\": \"http://mysite.com/js/test.js\"}]\n            * @param {Array} style: [{\"type\": \"text/css\", \"cssText\": \"div { display: block; color: blue; }\"}]\n            * @param {String} title: \"Title\"\n            * @param {Object} titleAttributes: {\"itemprop\": \"name\"}\n            * @param {String} titleTemplate: \"MySite.com - %s\"\n            */\n            set: function set(canUseDOM) {\n                Component.canUseDOM = canUseDOM;\n            }\n        }]);\n\n        return HelmetWrapper;\n    }(_react2.default.Component), _class.propTypes = {\n        base: _propTypes2.default.object,\n        bodyAttributes: _propTypes2.default.object,\n        children: _propTypes2.default.oneOfType([_propTypes2.default.arrayOf(_propTypes2.default.node), _propTypes2.default.node]),\n        defaultTitle: _propTypes2.default.string,\n        defer: _propTypes2.default.bool,\n        encodeSpecialCharacters: _propTypes2.default.bool,\n        htmlAttributes: _propTypes2.default.object,\n        link: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        meta: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        noscript: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        onChangeClientState: _propTypes2.default.func,\n        script: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        style: _propTypes2.default.arrayOf(_propTypes2.default.object),\n        title: _propTypes2.default.string,\n        titleAttributes: _propTypes2.default.object,\n        titleTemplate: _propTypes2.default.string\n    }, _class.defaultProps = {\n        defer: true,\n        encodeSpecialCharacters: true\n    }, _class.peek = Component.peek, _class.rewind = function () {\n        var mappedState = Component.rewind();\n        if (!mappedState) {\n            // provide fallback if mappedState is undefined\n            mappedState = (0, _HelmetUtils.mapStateOnServer)({\n                baseTag: [],\n                bodyAttributes: {},\n                encodeSpecialCharacters: true,\n                htmlAttributes: {},\n                linkTags: [],\n                metaTags: [],\n                noscriptTags: [],\n                scriptTags: [],\n                styleTags: [],\n                title: \"\",\n                titleAttributes: {}\n            });\n        }\n\n        return mappedState;\n    }, _temp;\n};\n\nvar NullComponent = function NullComponent() {\n    return null;\n};\n\nvar HelmetSideEffects = (0, _reactSideEffect2.default)(_HelmetUtils.reducePropsToState, _HelmetUtils.handleClientStateChange, _HelmetUtils.mapStateOnServer)(NullComponent);\n\nvar HelmetExport = Helmet(HelmetSideEffects);\nHelmetExport.renderStatic = HelmetExport.rewind;\n\nexports.Helmet = HelmetExport;\nexports.default = HelmetExport;","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nexports['default'] = function () {\n  var Snap = undefined;\n  try {\n    Snap = require('snapsvg-cjs');\n  } finally {\n    return Snap;\n  }\n};\n\nmodule.exports = exports['default'];","exports.__esModule = true;\nvar ATTRIBUTE_NAMES = exports.ATTRIBUTE_NAMES = {\n    BODY: \"bodyAttributes\",\n    HTML: \"htmlAttributes\",\n    TITLE: \"titleAttributes\"\n};\n\nvar TAG_NAMES = exports.TAG_NAMES = {\n    BASE: \"base\",\n    BODY: \"body\",\n    HEAD: \"head\",\n    HTML: \"html\",\n    LINK: \"link\",\n    META: \"meta\",\n    NOSCRIPT: \"noscript\",\n    SCRIPT: \"script\",\n    STYLE: \"style\",\n    TITLE: \"title\"\n};\n\nvar VALID_TAG_NAMES = exports.VALID_TAG_NAMES = Object.keys(TAG_NAMES).map(function (name) {\n    return TAG_NAMES[name];\n});\n\nvar TAG_PROPERTIES = exports.TAG_PROPERTIES = {\n    CHARSET: \"charset\",\n    CSS_TEXT: \"cssText\",\n    HREF: \"href\",\n    HTTPEQUIV: \"http-equiv\",\n    INNER_HTML: \"innerHTML\",\n    ITEM_PROP: \"itemprop\",\n    NAME: \"name\",\n    PROPERTY: \"property\",\n    REL: \"rel\",\n    SRC: \"src\"\n};\n\nvar REACT_TAG_MAP = exports.REACT_TAG_MAP = {\n    accesskey: \"accessKey\",\n    charset: \"charSet\",\n    class: \"className\",\n    contenteditable: \"contentEditable\",\n    contextmenu: \"contextMenu\",\n    \"http-equiv\": \"httpEquiv\",\n    itemprop: \"itemProp\",\n    tabindex: \"tabIndex\"\n};\n\nvar HELMET_PROPS = exports.HELMET_PROPS = {\n    DEFAULT_TITLE: \"defaultTitle\",\n    DEFER: \"defer\",\n    ENCODE_SPECIAL_CHARACTERS: \"encodeSpecialCharacters\",\n    ON_CHANGE_CLIENT_STATE: \"onChangeClientState\",\n    TITLE_TEMPLATE: \"titleTemplate\"\n};\n\nvar HTML_TAG_MAP = exports.HTML_TAG_MAP = Object.keys(REACT_TAG_MAP).reduce(function (obj, key) {\n    obj[REACT_TAG_MAP[key]] = key;\n    return obj;\n}, {});\n\nvar SELF_CLOSING_TAGS = exports.SELF_CLOSING_TAGS = [TAG_NAMES.NOSCRIPT, TAG_NAMES.SCRIPT, TAG_NAMES.STYLE];\n\nvar HELMET_ATTRIBUTE = exports.HELMET_ATTRIBUTE = \"data-react-helmet\";","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      visibility: isOpen ? 'visible' : 'hidden',\n      MozTransform: 'translate3d(0, 0, 0)',\n      MsTransform: 'translate3d(0, 0, 0)',\n      OTransform: 'translate3d(0, 0, 0)',\n      WebkitTransform: 'translate3d(0, 0, 0)',\n      transform: 'translate3d(0, 0, 0)',\n      zIndex: 1000\n    };\n  },\n\n  overlay: function overlay(isOpen, width, right) {\n    return {\n      zIndex: 1400,\n      MozTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.5s',\n      visibility: isOpen ? 'visible' : 'hidden'\n    };\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s',\n      zIndex: 1200,\n      position: 'relative'\n    };\n  },\n\n  burgerIcon: function burgerIcon(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      MsTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      OTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      WebkitTransform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transform: isOpen ? right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)' : 'translate3d(0, 0, 0)',\n      transition: 'all 0.1s',\n      position: 'relative',\n      zIndex: 1300\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transform: isOpen ? '' : 'translate3d(0, -100%, 0)',\n      transition: 'all 0.5s ease-in-out'\n    };\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      perspectiveOrigin: '0% 50%',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, -600px) rotateY(20deg)' : 'translate3d(100px, 0, -600px) rotateY(-20deg)',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      MsTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      OTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transform: isOpen ? '' : 'translate3d(0, 0, -' + width + ')',\n      transformOrigin: '100%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer() {\n    return {\n      perspective: '1500px'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0) rotateY(15deg)' : 'translate3d(' + width + ', 0, 0) rotateY(-15deg)',\n      transformOrigin: right ? '100% 50%' : '0% 50%',\n      transformStyle: 'preserve-3d',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      perspective: '1500px',\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-' + width + ', 0, 0)' : 'translate3d(' + width + ', 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-7.312,0H0c0,0,0,113.839,0,400c0,264.506,0,400,0,400h-7.312V0z',\n    pathOpen: 'M-7.312,0H15c0,0,66,113.339,66,399.5C81,664.006,15,800,15,800H-7.312V0z;M-7.312,0H100c0,0,0,113.839,0,400c0,264.506,0,400,0,400H-7.312V0z',\n    animate: function animate(path) {\n      var pos = 0;\n      var steps = this.pathOpen.split(';');\n      var stepsTotal = steps.length;\n      var mina = window.mina;\n\n      var nextStep = function nextStep() {\n        if (pos > stepsTotal - 1) return;\n\n        path.animate({ path: steps[pos] }, pos === 0 ? 400 : 500, pos === 0 ? mina.easein : mina.elastic, function () {\n          nextStep();\n        });\n\n        pos++;\n      };\n\n      nextStep();\n    }\n  },\n\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: '100%',\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      MsTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      OTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      WebkitTransform: right ? 'rotateY(180deg)' : 'rotateY(0deg)',\n      transform: right ? 'rotateY(180deg)' : 'rotateY(0deg)'\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: isOpen ? 'transform 0.4s 0s' : 'transform 0.4s'\n    };\n  },\n\n  menu: function menu(isOpen, width, right) {\n    width -= 140;\n    return {\n      position: 'fixed',\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.1s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n\n  item: function item(isOpen, width, right, nthChild) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s, transform 0.3s 0.4s' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  },\n\n  closeButton: function closeButton(isOpen, width, right) {\n    width -= 140;\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'opacity 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27), transform 0.3s 0.4s cubic-bezier(.17, .67, .1, 1.27)' : 'opacity 0s 0.3s cubic-bezier(.17, .67, .1, 1.27), transform 0s 0.3s cubic-bezier(.17, .67, .1, 1.27)',\n      opacity: isOpen ? 1 : 0\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n// ┌────────────────────────────────────────────────────────────┐ \\\\\n// │ Eve 0.5.4 - JavaScript Events Library                      │ \\\\\n// ├────────────────────────────────────────────────────────────┤ \\\\\n// │ Author Dmitry Baranovskiy (http://dmitry.baranovskiy.com/) │ \\\\\n// └────────────────────────────────────────────────────────────┘ \\\\\n\n(function (glob) {\n    var version = \"0.5.4\",\n        has = \"hasOwnProperty\",\n        separator = /[\\.\\/]/,\n        comaseparator = /\\s*,\\s*/,\n        wildcard = \"*\",\n        numsort = function (a, b) {\n            return a - b;\n        },\n        current_event,\n        stop,\n        events = {n: {}},\n        firstDefined = function () {\n            for (var i = 0, ii = this.length; i < ii; i++) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        lastDefined = function () {\n            var i = this.length;\n            while (--i) {\n                if (typeof this[i] != \"undefined\") {\n                    return this[i];\n                }\n            }\n        },\n        objtos = Object.prototype.toString,\n        Str = String,\n        isArray = Array.isArray || function (ar) {\n            return ar instanceof Array || objtos.call(ar) == \"[object Array]\";\n        },\n    /*\\\n     * eve\n     [ method ]\n\n     * Fires event with given `name`, given scope and other parameters.\n\n     - name (string) name of the *event*, dot (`.`) or slash (`/`) separated\n     - scope (object) context for the event handlers\n     - varargs (...) the rest of arguments will be sent to event handlers\n\n     = (object) array of returned values from the listeners. Array has two methods `.firstDefined()` and `.lastDefined()` to get first or last not `undefined` value.\n    \\*/\n        eve = function (name, scope) {\n            var oldstop = stop,\n                args = Array.prototype.slice.call(arguments, 2),\n                listeners = eve.listeners(name),\n                z = 0,\n                l,\n                indexed = [],\n                queue = {},\n                out = [],\n                ce = current_event;\n            out.firstDefined = firstDefined;\n            out.lastDefined = lastDefined;\n            current_event = name;\n            stop = 0;\n            for (var i = 0, ii = listeners.length; i < ii; i++) if (\"zIndex\" in listeners[i]) {\n                indexed.push(listeners[i].zIndex);\n                if (listeners[i].zIndex < 0) {\n                    queue[listeners[i].zIndex] = listeners[i];\n                }\n            }\n            indexed.sort(numsort);\n            while (indexed[z] < 0) {\n                l = queue[indexed[z++]];\n                out.push(l.apply(scope, args));\n                if (stop) {\n                    stop = oldstop;\n                    return out;\n                }\n            }\n            for (i = 0; i < ii; i++) {\n                l = listeners[i];\n                if (\"zIndex\" in l) {\n                    if (l.zIndex == indexed[z]) {\n                        out.push(l.apply(scope, args));\n                        if (stop) {\n                            break;\n                        }\n                        do {\n                            z++;\n                            l = queue[indexed[z]];\n                            l && out.push(l.apply(scope, args));\n                            if (stop) {\n                                break;\n                            }\n                        } while (l)\n                    } else {\n                        queue[l.zIndex] = l;\n                    }\n                } else {\n                    out.push(l.apply(scope, args));\n                    if (stop) {\n                        break;\n                    }\n                }\n            }\n            stop = oldstop;\n            current_event = ce;\n            return out;\n        };\n    // Undocumented. Debug only.\n    eve._events = events;\n    /*\\\n     * eve.listeners\n     [ method ]\n\n     * Internal method which gives you array of all event handlers that will be triggered by the given `name`.\n\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated\n\n     = (array) array of event handlers\n    \\*/\n    eve.listeners = function (name) {\n        var names = isArray(name) ? name : name.split(separator),\n            e = events,\n            item,\n            items,\n            k,\n            i,\n            ii,\n            j,\n            jj,\n            nes,\n            es = [e],\n            out = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            nes = [];\n            for (j = 0, jj = es.length; j < jj; j++) {\n                e = es[j].n;\n                items = [e[names[i]], e[wildcard]];\n                k = 2;\n                while (k--) {\n                    item = items[k];\n                    if (item) {\n                        nes.push(item);\n                        out = out.concat(item.f || []);\n                    }\n                }\n            }\n            es = nes;\n        }\n        return out;\n    };\n    /*\\\n     * eve.separator\n     [ method ]\n\n     * If for some reasons you don’t like default separators (`.` or `/`) you can specify yours\n     * here. Be aware that if you pass a string longer than one character it will be treated as\n     * a list of characters.\n\n     - separator (string) new separator. Empty string resets to default: `.` or `/`.\n    \\*/\n    eve.separator = function (sep) {\n        if (sep) {\n            sep = Str(sep).replace(/(?=[\\.\\^\\]\\[\\-])/g, \"\\\\\");\n            sep = \"[\" + sep + \"]\";\n            separator = new RegExp(sep);\n        } else {\n            separator = /[\\.\\/]/;\n        }\n    };\n    /*\\\n     * eve.on\n     [ method ]\n     **\n     * Binds given event handler with a given name. You can use wildcards “`*`” for the names:\n     | eve.on(\"*.under.*\", f);\n     | eve(\"mouse.under.floor\"); // triggers f\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     - name (array) if you don’t want to use separators, you can use array of strings\n     - f (function) event handler function\n     **\n     = (function) returned function accepts a single numeric parameter that represents z-index of the handler. It is an optional feature and only used when you need to ensure that some subset of handlers will be invoked in a given order, despite of the order of assignment.\n     > Example:\n     | eve.on(\"mouse\", eatIt)(2);\n     | eve.on(\"mouse\", scream);\n     | eve.on(\"mouse\", catchIt)(1);\n     * This will ensure that `catchIt` function will be called before `eatIt`.\n     *\n     * If you want to put your handler before non-indexed handlers, specify a negative value.\n     * Note: I assume most of the time you don’t need to worry about z-index, but it’s nice to have this feature “just in case”.\n    \\*/\n    eve.on = function (name, f) {\n        if (typeof f != \"function\") {\n            return function () {};\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        for (var i = 0, ii = names.length; i < ii; i++) {\n            (function (name) {\n                var names = isArray(name) ? name : Str(name).split(separator),\n                    e = events,\n                    exist;\n                for (var i = 0, ii = names.length; i < ii; i++) {\n                    e = e.n;\n                    e = e.hasOwnProperty(names[i]) && e[names[i]] || (e[names[i]] = {n: {}});\n                }\n                e.f = e.f || [];\n                for (i = 0, ii = e.f.length; i < ii; i++) if (e.f[i] == f) {\n                    exist = true;\n                    break;\n                }\n                !exist && e.f.push(f);\n            }(names[i]));\n        }\n        return function (zIndex) {\n            if (+zIndex == +zIndex) {\n                f.zIndex = +zIndex;\n            }\n        };\n    };\n    /*\\\n     * eve.f\n     [ method ]\n     **\n     * Returns function that will fire given event with optional arguments.\n     * Arguments that will be passed to the result function will be also\n     * concated to the list of final arguments.\n     | el.onclick = eve.f(\"click\", 1, 2);\n     | eve.on(\"click\", function (a, b, c) {\n     |     console.log(a, b, c); // 1, 2, [event object]\n     | });\n     - event (string) event name\n     - varargs (…) and any other arguments\n     = (function) possible event handler function\n    \\*/\n    eve.f = function (event) {\n        var attrs = [].slice.call(arguments, 1);\n        return function () {\n            eve.apply(null, [event, null].concat(attrs).concat([].slice.call(arguments, 0)));\n        };\n    };\n    /*\\\n     * eve.stop\n     [ method ]\n     **\n     * Is used inside an event handler to stop the event, preventing any subsequent listeners from firing.\n    \\*/\n    eve.stop = function () {\n        stop = 1;\n    };\n    /*\\\n     * eve.nt\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     - subname (string) #optional subname of the event\n     **\n     = (string) name of the event, if `subname` is not specified\n     * or\n     = (boolean) `true`, if current event’s name contains `subname`\n    \\*/\n    eve.nt = function (subname) {\n        var cur = isArray(current_event) ? current_event.join(\".\") : current_event;\n        if (subname) {\n            return new RegExp(\"(?:\\\\.|\\\\/|^)\" + subname + \"(?:\\\\.|\\\\/|$)\").test(cur);\n        }\n        return cur;\n    };\n    /*\\\n     * eve.nts\n     [ method ]\n     **\n     * Could be used inside event handler to figure out actual name of the event.\n     **\n     **\n     = (array) names of the event\n    \\*/\n    eve.nts = function () {\n        return isArray(current_event) ? current_event : current_event.split(separator);\n    };\n    /*\\\n     * eve.off\n     [ method ]\n     **\n     * Removes given function from the list of event listeners assigned to given name.\n     * If no arguments specified all the events will be cleared.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n    \\*/\n    /*\\\n     * eve.unbind\n     [ method ]\n     **\n     * See @eve.off\n    \\*/\n    eve.off = eve.unbind = function (name, f) {\n        if (!name) {\n            eve._events = events = {n: {}};\n            return;\n        }\n        var names = isArray(name) ? isArray(name[0]) ? name : [name] : Str(name).split(comaseparator);\n        if (names.length > 1) {\n            for (var i = 0, ii = names.length; i < ii; i++) {\n                eve.off(names[i], f);\n            }\n            return;\n        }\n        names = isArray(name) ? name : Str(name).split(separator);\n        var e,\n            key,\n            splice,\n            i, ii, j, jj,\n            cur = [events],\n            inodes = [];\n        for (i = 0, ii = names.length; i < ii; i++) {\n            for (j = 0; j < cur.length; j += splice.length - 2) {\n                splice = [j, 1];\n                e = cur[j].n;\n                if (names[i] != wildcard) {\n                    if (e[names[i]]) {\n                        splice.push(e[names[i]]);\n                        inodes.unshift({\n                            n: e,\n                            name: names[i]\n                        });\n                    }\n                } else {\n                    for (key in e) if (e[has](key)) {\n                        splice.push(e[key]);\n                        inodes.unshift({\n                            n: e,\n                            name: key\n                        });\n                    }\n                }\n                cur.splice.apply(cur, splice);\n            }\n        }\n        for (i = 0, ii = cur.length; i < ii; i++) {\n            e = cur[i];\n            while (e.n) {\n                if (f) {\n                    if (e.f) {\n                        for (j = 0, jj = e.f.length; j < jj; j++) if (e.f[j] == f) {\n                            e.f.splice(j, 1);\n                            break;\n                        }\n                        !e.f.length && delete e.f;\n                    }\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        var funcs = e.n[key].f;\n                        for (j = 0, jj = funcs.length; j < jj; j++) if (funcs[j] == f) {\n                            funcs.splice(j, 1);\n                            break;\n                        }\n                        !funcs.length && delete e.n[key].f;\n                    }\n                } else {\n                    delete e.f;\n                    for (key in e.n) if (e.n[has](key) && e.n[key].f) {\n                        delete e.n[key].f;\n                    }\n                }\n                e = e.n;\n            }\n        }\n        // prune inner nodes in path\n        prune: for (i = 0, ii = inodes.length; i < ii; i++) {\n            e = inodes[i];\n            for (key in e.n[e.name].f) {\n                // not empty (has listeners)\n                continue prune;\n            }\n            for (key in e.n[e.name].n) {\n                // not empty (has children)\n                continue prune;\n            }\n            // is empty\n            delete e.n[e.name];\n        }\n    };\n    /*\\\n     * eve.once\n     [ method ]\n     **\n     * Binds given event handler with a given name to only run once then unbind itself.\n     | eve.once(\"login\", f);\n     | eve(\"login\"); // triggers f\n     | eve(\"login\"); // no listeners\n     * Use @eve to trigger the listener.\n     **\n     - name (string) name of the event, dot (`.`) or slash (`/`) separated, with optional wildcards\n     - f (function) event handler function\n     **\n     = (function) same return function as @eve.on\n    \\*/\n    eve.once = function (name, f) {\n        var f2 = function () {\n            eve.off(name, f2);\n            return f.apply(this, arguments);\n        };\n        return eve.on(name, f2);\n    };\n    /*\\\n     * eve.version\n     [ property (string) ]\n     **\n     * Current version of the library.\n    \\*/\n    eve.version = version;\n    eve.toString = function () {\n        return \"You are running Eve \" + version;\n    };\n    glob.eve = eve;\n    typeof module != \"undefined\" && module.exports ? module.exports = eve : typeof define === \"function\" && define.amd ? define(\"eve\", [], function () { return eve; }) : glob.eve = eve;\n})(typeof window != \"undefined\" ? window : this);\n","window.eve = require('eve')\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nvar mina = (function (eve) {\n    var animations = {},\n    requestAnimFrame = window.requestAnimationFrame       ||\n                       window.webkitRequestAnimationFrame ||\n                       window.mozRequestAnimationFrame    ||\n                       window.oRequestAnimationFrame      ||\n                       window.msRequestAnimationFrame     ||\n                       function (callback) {\n                           setTimeout(callback, 16, new Date().getTime());\n                           return true;\n                       },\n    requestID,\n    isArray = Array.isArray || function (a) {\n        return a instanceof Array ||\n            Object.prototype.toString.call(a) == \"[object Array]\";\n    },\n    idgen = 0,\n    idprefix = \"M\" + (+new Date).toString(36),\n    ID = function () {\n        return idprefix + (idgen++).toString(36);\n    },\n    diff = function (a, b, A, B) {\n        if (isArray(a)) {\n            res = [];\n            for (var i = 0, ii = a.length; i < ii; i++) {\n                res[i] = diff(a[i], b, A[i], B);\n            }\n            return res;\n        }\n        var dif = (A - a) / (B - b);\n        return function (bb) {\n            return a + dif * (bb - b);\n        };\n    },\n    timer = Date.now || function () {\n        return +new Date;\n    },\n    sta = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.s;\n        }\n        var ds = a.s - val;\n        a.b += a.dur * ds;\n        a.B += a.dur * ds;\n        a.s = val;\n    },\n    speed = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.spd;\n        }\n        a.spd = val;\n    },\n    duration = function (val) {\n        var a = this;\n        if (val == null) {\n            return a.dur;\n        }\n        a.s = a.s * val / a.dur;\n        a.dur = val;\n    },\n    stopit = function () {\n        var a = this;\n        delete animations[a.id];\n        a.update();\n        eve(\"mina.stop.\" + a.id, a);\n    },\n    pause = function () {\n        var a = this;\n        if (a.pdif) {\n            return;\n        }\n        delete animations[a.id];\n        a.update();\n        a.pdif = a.get() - a.b;\n    },\n    resume = function () {\n        var a = this;\n        if (!a.pdif) {\n            return;\n        }\n        a.b = a.get() - a.pdif;\n        delete a.pdif;\n        animations[a.id] = a;\n        frame();\n    },\n    update = function () {\n        var a = this,\n            res;\n        if (isArray(a.start)) {\n            res = [];\n            for (var j = 0, jj = a.start.length; j < jj; j++) {\n                res[j] = +a.start[j] +\n                    (a.end[j] - a.start[j]) * a.easing(a.s);\n            }\n        } else {\n            res = +a.start + (a.end - a.start) * a.easing(a.s);\n        }\n        a.set(res);\n    },\n    frame = function (timeStamp) {\n        // Manual invokation?\n        if (!timeStamp) {\n            // Frame loop stopped?\n            if (!requestID) {\n                // Start frame loop...\n                requestID = requestAnimFrame(frame);\n            }\n            return;\n        }\n        var len = 0;\n        for (var i in animations) if (animations.hasOwnProperty(i)) {\n            var a = animations[i],\n                b = a.get(),\n                res;\n            len++;\n            a.s = (b - a.b) / (a.dur / a.spd);\n            if (a.s >= 1) {\n                delete animations[i];\n                a.s = 1;\n                len--;\n                (function (a) {\n                    setTimeout(function () {\n                        eve(\"mina.finish.\" + a.id, a);\n                    });\n                }(a));\n            }\n            a.update();\n        }\n        requestID = len ? requestAnimFrame(frame) : false;\n    },\n    /*\\\n     * mina\n     [ method ]\n     **\n     * Generic animation of numbers\n     **\n     - a (number) start _slave_ number\n     - A (number) end _slave_ number\n     - b (number) start _master_ number (start time in general case)\n     - B (number) end _master_ number (end time in general case)\n     - get (function) getter of _master_ number (see @mina.time)\n     - set (function) setter of _slave_ number\n     - easing (function) #optional easing function, default is @mina.linear\n     = (object) animation descriptor\n     o {\n     o         id (string) animation id,\n     o         start (number) start _slave_ number,\n     o         end (number) end _slave_ number,\n     o         b (number) start _master_ number,\n     o         s (number) animation status (0..1),\n     o         dur (number) animation duration,\n     o         spd (number) animation speed,\n     o         get (function) getter of _master_ number (see @mina.time),\n     o         set (function) setter of _slave_ number,\n     o         easing (function) easing function, default is @mina.linear,\n     o         status (function) status getter/setter,\n     o         speed (function) speed getter/setter,\n     o         duration (function) duration getter/setter,\n     o         stop (function) animation stopper\n     o         pause (function) pauses the animation\n     o         resume (function) resumes the animation\n     o         update (function) calles setter with the right value of the animation\n     o }\n    \\*/\n    mina = function (a, A, b, B, get, set, easing) {\n        var anim = {\n            id: ID(),\n            start: a,\n            end: A,\n            b: b,\n            s: 0,\n            dur: B - b,\n            spd: 1,\n            get: get,\n            set: set,\n            easing: easing || mina.linear,\n            status: sta,\n            speed: speed,\n            duration: duration,\n            stop: stopit,\n            pause: pause,\n            resume: resume,\n            update: update\n        };\n        animations[anim.id] = anim;\n        var len = 0, i;\n        for (i in animations) if (animations.hasOwnProperty(i)) {\n            len++;\n            if (len == 2) {\n                break;\n            }\n        }\n        len == 1 && frame();\n        return anim;\n    };\n    /*\\\n     * mina.time\n     [ method ]\n     **\n     * Returns the current time. Equivalent to:\n     | function () {\n     |     return (new Date).getTime();\n     | }\n    \\*/\n    mina.time = timer;\n    /*\\\n     * mina.getById\n     [ method ]\n     **\n     * Returns an animation by its id\n     - id (string) animation's id\n     = (object) See @mina\n    \\*/\n    mina.getById = function (id) {\n        return animations[id] || null;\n    };\n\n    /*\\\n     * mina.linear\n     [ method ]\n     **\n     * Default linear easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.linear = function (n) {\n        return n;\n    };\n    /*\\\n     * mina.easeout\n     [ method ]\n     **\n     * Easeout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeout = function (n) {\n        return Math.pow(n, 1.7);\n    };\n    /*\\\n     * mina.easein\n     [ method ]\n     **\n     * Easein easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easein = function (n) {\n        return Math.pow(n, .48);\n    };\n    /*\\\n     * mina.easeinout\n     [ method ]\n     **\n     * Easeinout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.easeinout = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        if (n == 0) {\n            return 0;\n        }\n        var q = .48 - n / 1.04,\n            Q = Math.sqrt(.1734 + q * q),\n            x = Q - q,\n            X = Math.pow(Math.abs(x), 1 / 3) * (x < 0 ? -1 : 1),\n            y = -Q - q,\n            Y = Math.pow(Math.abs(y), 1 / 3) * (y < 0 ? -1 : 1),\n            t = X + Y + .5;\n        return (1 - t) * 3 * t * t + t * t * t;\n    };\n    /*\\\n     * mina.backin\n     [ method ]\n     **\n     * Backin easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backin = function (n) {\n        if (n == 1) {\n            return 1;\n        }\n        var s = 1.70158;\n        return n * n * ((s + 1) * n - s);\n    };\n    /*\\\n     * mina.backout\n     [ method ]\n     **\n     * Backout easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.backout = function (n) {\n        if (n == 0) {\n            return 0;\n        }\n        n = n - 1;\n        var s = 1.70158;\n        return n * n * ((s + 1) * n + s) + 1;\n    };\n    /*\\\n     * mina.elastic\n     [ method ]\n     **\n     * Elastic easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.elastic = function (n) {\n        if (n == !!n) {\n            return n;\n        }\n        return Math.pow(2, -10 * n) * Math.sin((n - .075) *\n            (2 * Math.PI) / .3) + 1;\n    };\n    /*\\\n     * mina.bounce\n     [ method ]\n     **\n     * Bounce easing\n     - n (number) input 0..1\n     = (number) output 0..1\n    \\*/\n    mina.bounce = function (n) {\n        var s = 7.5625,\n            p = 2.75,\n            l;\n        if (n < 1 / p) {\n            l = s * n * n;\n        } else {\n            if (n < 2 / p) {\n                n -= 1.5 / p;\n                l = s * n * n + .75;\n            } else {\n                if (n < 2.5 / p) {\n                    n -= 2.25 / p;\n                    l = s * n * n + .9375;\n                } else {\n                    n -= 2.625 / p;\n                    l = s * n * n + .984375;\n                }\n            }\n        }\n        return l;\n    };\n    window.mina = mina;\n    return mina;\n})(typeof eve == \"undefined\" ? function () {} : eve);\n\n// Copyright (c) 2013 - 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\n\nvar Snap = (function(root) {\nSnap.version = \"0.5.1\";\n/*\\\n * Snap\n [ method ]\n **\n * Creates a drawing surface or wraps existing SVG element.\n **\n - width (number|string) width of surface\n - height (number|string) height of surface\n * or\n - DOM (SVGElement) element to be wrapped into Snap structure\n * or\n - array (array) array of elements (will return set of elements)\n * or\n - query (string) CSS query selector\n = (object) @Element\n\\*/\nfunction Snap(w, h) {\n    if (w) {\n        if (w.nodeType) {\n            return wrap(w);\n        }\n        if (is(w, \"array\") && Snap.set) {\n            return Snap.set.apply(Snap, w);\n        }\n        if (w instanceof Element) {\n            return w;\n        }\n        if (h == null) {\n            try {\n                w = glob.doc.querySelector(String(w));\n                return wrap(w);\n            } catch (e) {\n                return null;\n            }\n        }\n    }\n    w = w == null ? \"100%\" : w;\n    h = h == null ? \"100%\" : h;\n    return new Paper(w, h);\n}\nSnap.toString = function () {\n    return \"Snap v\" + this.version;\n};\nSnap._ = {};\nvar glob = {\n    win: root.window,\n    doc: root.window.document\n};\nSnap._.glob = glob;\nvar has = \"hasOwnProperty\",\n    Str = String,\n    toFloat = parseFloat,\n    toInt = parseInt,\n    math = Math,\n    mmax = math.max,\n    mmin = math.min,\n    abs = math.abs,\n    pow = math.pow,\n    PI = math.PI,\n    round = math.round,\n    E = \"\",\n    S = \" \",\n    objectToString = Object.prototype.toString,\n    ISURL = /^url\\(['\"]?([^\\)]+?)['\"]?\\)$/i,\n    colourRegExp = /^\\s*((#[a-f\\d]{6})|(#[a-f\\d]{3})|rgba?\\(\\s*([\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+%?(?:\\s*,\\s*[\\d\\.]+%?)?)\\s*\\)|hsba?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\)|hsla?\\(\\s*([\\d\\.]+(?:deg|\\xb0|%)?\\s*,\\s*[\\d\\.]+%?\\s*,\\s*[\\d\\.]+(?:%?\\s*,\\s*[\\d\\.]+)?%?)\\s*\\))\\s*$/i,\n    bezierrg = /^(?:cubic-)?bezier\\(([^,]+),([^,]+),([^,]+),([^\\)]+)\\)/,\n    separator = Snap._.separator = /[,\\s]+/,\n    whitespace = /[\\s]/g,\n    commaSpaces = /[\\s]*,[\\s]*/,\n    hsrg = {hs: 1, rg: 1},\n    pathCommand = /([a-z])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    tCommand = /([rstm])[\\s,]*((-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?[\\s]*,?[\\s]*)+)/ig,\n    pathValues = /(-?\\d*\\.?\\d*(?:e[\\-+]?\\d+)?)[\\s]*,?[\\s]*/ig,\n    idgen = 0,\n    idprefix = \"S\" + (+new Date).toString(36),\n    ID = function (el) {\n        return (el && el.type ? el.type : E) + idprefix + (idgen++).toString(36);\n    },\n    xlink = \"http://www.w3.org/1999/xlink\",\n    xmlns = \"http://www.w3.org/2000/svg\",\n    hub = {},\n    /*\\\n     * Snap.url\n     [ method ]\n     **\n     * Wraps path into `\"url('<path>')\"`.\n     - value (string) path\n     = (string) wrapped path\n    \\*/\n    URL = Snap.url = function (url) {\n        return \"url('#\" + url + \"')\";\n    };\n\nfunction $(el, attr) {\n    if (attr) {\n        if (el == \"#text\") {\n            el = glob.doc.createTextNode(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (el == \"#comment\") {\n            el = glob.doc.createComment(attr.text || attr[\"#text\"] || \"\");\n        }\n        if (typeof el == \"string\") {\n            el = $(el);\n        }\n        if (typeof attr == \"string\") {\n            if (el.nodeType == 1) {\n                if (attr.substring(0, 6) == \"xlink:\") {\n                    return el.getAttributeNS(xlink, attr.substring(6));\n                }\n                if (attr.substring(0, 4) == \"xml:\") {\n                    return el.getAttributeNS(xmlns, attr.substring(4));\n                }\n                return el.getAttribute(attr);\n            } else if (attr == \"text\") {\n                return el.nodeValue;\n            } else {\n                return null;\n            }\n        }\n        if (el.nodeType == 1) {\n            for (var key in attr) if (attr[has](key)) {\n                var val = Str(attr[key]);\n                if (val) {\n                    if (key.substring(0, 6) == \"xlink:\") {\n                        el.setAttributeNS(xlink, key.substring(6), val);\n                    } else if (key.substring(0, 4) == \"xml:\") {\n                        el.setAttributeNS(xmlns, key.substring(4), val);\n                    } else {\n                        el.setAttribute(key, val);\n                    }\n                } else {\n                    el.removeAttribute(key);\n                }\n            }\n        } else if (\"text\" in attr) {\n            el.nodeValue = attr.text;\n        }\n    } else {\n        el = glob.doc.createElementNS(xmlns, el);\n    }\n    return el;\n}\nSnap._.$ = $;\nSnap._.id = ID;\nfunction getAttrs(el) {\n    var attrs = el.attributes,\n        name,\n        out = {};\n    for (var i = 0; i < attrs.length; i++) {\n        if (attrs[i].namespaceURI == xlink) {\n            name = \"xlink:\";\n        } else {\n            name = \"\";\n        }\n        name += attrs[i].name;\n        out[name] = attrs[i].textContent;\n    }\n    return out;\n}\nfunction is(o, type) {\n    type = Str.prototype.toLowerCase.call(type);\n    if (type == \"finite\") {\n        return isFinite(o);\n    }\n    if (type == \"array\" &&\n        (o instanceof Array || Array.isArray && Array.isArray(o))) {\n        return true;\n    }\n    return  type == \"null\" && o === null ||\n            type == typeof o && o !== null ||\n            type == \"object\" && o === Object(o) ||\n            objectToString.call(o).slice(8, -1).toLowerCase() == type;\n}\n/*\\\n * Snap.format\n [ method ]\n **\n * Replaces construction of type `{<name>}` to the corresponding argument\n **\n - token (string) string to format\n - json (object) object which properties are used as a replacement\n = (string) formatted string\n > Usage\n | // this draws a rectangular shape equivalent to \"M10,20h40v50h-40z\"\n | paper.path(Snap.format(\"M{x},{y}h{dim.width}v{dim.height}h{dim['negative width']}z\", {\n |     x: 10,\n |     y: 20,\n |     dim: {\n |         width: 40,\n |         height: 50,\n |         \"negative width\": -40\n |     }\n | }));\n\\*/\nSnap.format = (function () {\n    var tokenRegex = /\\{([^\\}]+)\\}/g,\n        objNotationRegex = /(?:(?:^|\\.)(.+?)(?=\\[|\\.|$|\\()|\\[('|\")(.+?)\\2\\])(\\(\\))?/g, // matches .xxxxx or [\"xxxxx\"] to run over object properties\n        replacer = function (all, key, obj) {\n            var res = obj;\n            key.replace(objNotationRegex, function (all, name, quote, quotedName, isFunc) {\n                name = name || quotedName;\n                if (res) {\n                    if (name in res) {\n                        res = res[name];\n                    }\n                    typeof res == \"function\" && isFunc && (res = res());\n                }\n            });\n            res = (res == null || res == obj ? all : res) + \"\";\n            return res;\n        };\n    return function (str, obj) {\n        return Str(str).replace(tokenRegex, function (all, key) {\n            return replacer(all, key, obj);\n        });\n    };\n})();\nfunction clone(obj) {\n    if (typeof obj == \"function\" || Object(obj) !== obj) {\n        return obj;\n    }\n    var res = new obj.constructor;\n    for (var key in obj) if (obj[has](key)) {\n        res[key] = clone(obj[key]);\n    }\n    return res;\n}\nSnap._.clone = clone;\nfunction repush(array, item) {\n    for (var i = 0, ii = array.length; i < ii; i++) if (array[i] === item) {\n        return array.push(array.splice(i, 1)[0]);\n    }\n}\nfunction cacher(f, scope, postprocessor) {\n    function newf() {\n        var arg = Array.prototype.slice.call(arguments, 0),\n            args = arg.join(\"\\u2400\"),\n            cache = newf.cache = newf.cache || {},\n            count = newf.count = newf.count || [];\n        if (cache[has](args)) {\n            repush(count, args);\n            return postprocessor ? postprocessor(cache[args]) : cache[args];\n        }\n        count.length >= 1e3 && delete cache[count.shift()];\n        count.push(args);\n        cache[args] = f.apply(scope, arg);\n        return postprocessor ? postprocessor(cache[args]) : cache[args];\n    }\n    return newf;\n}\nSnap._.cacher = cacher;\nfunction angle(x1, y1, x2, y2, x3, y3) {\n    if (x3 == null) {\n        var x = x1 - x2,\n            y = y1 - y2;\n        if (!x && !y) {\n            return 0;\n        }\n        return (180 + math.atan2(-y, -x) * 180 / PI + 360) % 360;\n    } else {\n        return angle(x1, y1, x3, y3) - angle(x2, y2, x3, y3);\n    }\n}\nfunction rad(deg) {\n    return deg % 360 * PI / 180;\n}\nfunction deg(rad) {\n    return rad * 180 / PI % 360;\n}\nfunction x_y() {\n    return this.x + S + this.y;\n}\nfunction x_y_w_h() {\n    return this.x + S + this.y + S + this.width + \" \\xd7 \" + this.height;\n}\n\n/*\\\n * Snap.rad\n [ method ]\n **\n * Transform angle to radians\n - deg (number) angle in degrees\n = (number) angle in radians\n\\*/\nSnap.rad = rad;\n/*\\\n * Snap.deg\n [ method ]\n **\n * Transform angle to degrees\n - rad (number) angle in radians\n = (number) angle in degrees\n\\*/\nSnap.deg = deg;\n/*\\\n * Snap.sin\n [ method ]\n **\n * Equivalent to `Math.sin()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) sin\n\\*/\nSnap.sin = function (angle) {\n    return math.sin(Snap.rad(angle));\n};\n/*\\\n * Snap.tan\n [ method ]\n **\n * Equivalent to `Math.tan()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) tan\n\\*/\nSnap.tan = function (angle) {\n    return math.tan(Snap.rad(angle));\n};\n/*\\\n * Snap.cos\n [ method ]\n **\n * Equivalent to `Math.cos()` only works with degrees, not radians.\n - angle (number) angle in degrees\n = (number) cos\n\\*/\nSnap.cos = function (angle) {\n    return math.cos(Snap.rad(angle));\n};\n/*\\\n * Snap.asin\n [ method ]\n **\n * Equivalent to `Math.asin()` only works with degrees, not radians.\n - num (number) value\n = (number) asin in degrees\n\\*/\nSnap.asin = function (num) {\n    return Snap.deg(math.asin(num));\n};\n/*\\\n * Snap.acos\n [ method ]\n **\n * Equivalent to `Math.acos()` only works with degrees, not radians.\n - num (number) value\n = (number) acos in degrees\n\\*/\nSnap.acos = function (num) {\n    return Snap.deg(math.acos(num));\n};\n/*\\\n * Snap.atan\n [ method ]\n **\n * Equivalent to `Math.atan()` only works with degrees, not radians.\n - num (number) value\n = (number) atan in degrees\n\\*/\nSnap.atan = function (num) {\n    return Snap.deg(math.atan(num));\n};\n/*\\\n * Snap.atan2\n [ method ]\n **\n * Equivalent to `Math.atan2()` only works with degrees, not radians.\n - num (number) value\n = (number) atan2 in degrees\n\\*/\nSnap.atan2 = function (num) {\n    return Snap.deg(math.atan2(num));\n};\n/*\\\n * Snap.angle\n [ method ]\n **\n * Returns an angle between two or three points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n - x3 (number) #optional x coord of third point\n - y3 (number) #optional y coord of third point\n = (number) angle in degrees\n\\*/\nSnap.angle = angle;\n/*\\\n * Snap.len\n [ method ]\n **\n * Returns distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len = function (x1, y1, x2, y2) {\n    return Math.sqrt(Snap.len2(x1, y1, x2, y2));\n};\n/*\\\n * Snap.len2\n [ method ]\n **\n * Returns squared distance between two points\n - x1 (number) x coord of first point\n - y1 (number) y coord of first point\n - x2 (number) x coord of second point\n - y2 (number) y coord of second point\n = (number) distance\n\\*/\nSnap.len2 = function (x1, y1, x2, y2) {\n    return (x1 - x2) * (x1 - x2) + (y1 - y2) * (y1 - y2);\n};\n/*\\\n * Snap.closestPoint\n [ method ]\n **\n * Returns closest point to a given one on a given path.\n - path (Element) path element\n - x (number) x coord of a point\n - y (number) y coord of a point\n = (object) in format\n {\n    x (number) x coord of the point on the path\n    y (number) y coord of the point on the path\n    length (number) length of the path to the point\n    distance (number) distance from the given point to the path\n }\n\\*/\n// Copied from http://bl.ocks.org/mbostock/8027637\nSnap.closestPoint = function (path, x, y) {\n    function distance2(p) {\n        var dx = p.x - x,\n            dy = p.y - y;\n        return dx * dx + dy * dy;\n    }\n    var pathNode = path.node,\n        pathLength = pathNode.getTotalLength(),\n        precision = pathLength / pathNode.pathSegList.numberOfItems * .125,\n        best,\n        bestLength,\n        bestDistance = Infinity;\n\n    // linear scan for coarse approximation\n    for (var scan, scanLength = 0, scanDistance; scanLength <= pathLength; scanLength += precision) {\n        if ((scanDistance = distance2(scan = pathNode.getPointAtLength(scanLength))) < bestDistance) {\n            best = scan;\n            bestLength = scanLength;\n            bestDistance = scanDistance;\n        }\n    }\n\n    // binary search for precise estimate\n    precision *= .5;\n    while (precision > .5) {\n        var before,\n            after,\n            beforeLength,\n            afterLength,\n            beforeDistance,\n            afterDistance;\n        if ((beforeLength = bestLength - precision) >= 0 && (beforeDistance = distance2(before = pathNode.getPointAtLength(beforeLength))) < bestDistance) {\n            best = before;\n            bestLength = beforeLength;\n            bestDistance = beforeDistance;\n        } else if ((afterLength = bestLength + precision) <= pathLength && (afterDistance = distance2(after = pathNode.getPointAtLength(afterLength))) < bestDistance) {\n            best = after;\n            bestLength = afterLength;\n            bestDistance = afterDistance;\n        } else {\n            precision *= .5;\n        }\n    }\n\n    best = {\n        x: best.x,\n        y: best.y,\n        length: bestLength,\n        distance: Math.sqrt(bestDistance)\n    };\n    return best;\n}\n/*\\\n * Snap.is\n [ method ]\n **\n * Handy replacement for the `typeof` operator\n - o (…) any object or primitive\n - type (string) name of the type, e.g., `string`, `function`, `number`, etc.\n = (boolean) `true` if given value is of given type\n\\*/\nSnap.is = is;\n/*\\\n * Snap.snapTo\n [ method ]\n **\n * Snaps given value to given grid\n - values (array|number) given array of values or step of the grid\n - value (number) value to adjust\n - tolerance (number) #optional maximum distance to the target value that would trigger the snap. Default is `10`.\n = (number) adjusted value\n\\*/\nSnap.snapTo = function (values, value, tolerance) {\n    tolerance = is(tolerance, \"finite\") ? tolerance : 10;\n    if (is(values, \"array\")) {\n        var i = values.length;\n        while (i--) if (abs(values[i] - value) <= tolerance) {\n            return values[i];\n        }\n    } else {\n        values = +values;\n        var rem = value % values;\n        if (rem < tolerance) {\n            return value - rem;\n        }\n        if (rem > values - tolerance) {\n            return value - rem + values;\n        }\n    }\n    return value;\n};\n// Colour\n/*\\\n * Snap.getRGB\n [ method ]\n **\n * Parses color string as RGB object\n - color (string) color string in one of the following formats:\n # <ul>\n #     <li>Color name (<code>red</code>, <code>green</code>, <code>cornflowerblue</code>, etc)</li>\n #     <li>#••• — shortened HTML color: (<code>#000</code>, <code>#fc0</code>, etc.)</li>\n #     <li>#•••••• — full length HTML color: (<code>#000000</code>, <code>#bd2300</code>)</li>\n #     <li>rgb(•••, •••, •••) — red, green and blue channels values: (<code>rgb(200,&nbsp;100,&nbsp;0)</code>)</li>\n #     <li>rgba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>rgb(•••%, •••%, •••%) — same as above, but in %: (<code>rgb(100%,&nbsp;175%,&nbsp;0%)</code>)</li>\n #     <li>rgba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsb(•••, •••, •••) — hue, saturation and brightness values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;1)</code>)</li>\n #     <li>hsba(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsb(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsba(•••%, •••%, •••%, •••%) — also with opacity</li>\n #     <li>hsl(•••, •••, •••) — hue, saturation and luminosity values: (<code>hsb(0.5,&nbsp;0.25,&nbsp;0.5)</code>)</li>\n #     <li>hsla(•••, •••, •••, •••) — also with opacity</li>\n #     <li>hsl(•••%, •••%, •••%) — same as above, but in %</li>\n #     <li>hsla(•••%, •••%, •••%, •••%) — also with opacity</li>\n # </ul>\n * Note that `%` can be used any time: `rgb(20%, 255, 50%)`.\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) true if string can't be parsed\n o }\n\\*/\nSnap.getRGB = cacher(function (colour) {\n    if (!colour || !!((colour = Str(colour)).indexOf(\"-\") + 1)) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    if (colour == \"none\") {\n        return {r: -1, g: -1, b: -1, hex: \"none\", toString: rgbtoString};\n    }\n    !(hsrg[has](colour.toLowerCase().substring(0, 2)) || colour.charAt() == \"#\") && (colour = toHex(colour));\n    if (!colour) {\n        return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n    }\n    var res,\n        red,\n        green,\n        blue,\n        opacity,\n        t,\n        values,\n        rgb = colour.match(colourRegExp);\n    if (rgb) {\n        if (rgb[2]) {\n            blue = toInt(rgb[2].substring(5), 16);\n            green = toInt(rgb[2].substring(3, 5), 16);\n            red = toInt(rgb[2].substring(1, 3), 16);\n        }\n        if (rgb[3]) {\n            blue = toInt((t = rgb[3].charAt(3)) + t, 16);\n            green = toInt((t = rgb[3].charAt(2)) + t, 16);\n            red = toInt((t = rgb[3].charAt(1)) + t, 16);\n        }\n        if (rgb[4]) {\n            values = rgb[4].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red *= 2.55);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green *= 2.55);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue *= 2.55);\n            rgb[1].toLowerCase().slice(0, 4) == \"rgba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n        }\n        if (rgb[5]) {\n            values = rgb[5].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsba\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsb2rgb(red, green, blue, opacity);\n        }\n        if (rgb[6]) {\n            values = rgb[6].split(commaSpaces);\n            red = toFloat(values[0]);\n            values[0].slice(-1) == \"%\" && (red /= 100);\n            green = toFloat(values[1]);\n            values[1].slice(-1) == \"%\" && (green /= 100);\n            blue = toFloat(values[2]);\n            values[2].slice(-1) == \"%\" && (blue /= 100);\n            (values[0].slice(-3) == \"deg\" || values[0].slice(-1) == \"\\xb0\") && (red /= 360);\n            rgb[1].toLowerCase().slice(0, 4) == \"hsla\" && (opacity = toFloat(values[3]));\n            values[3] && values[3].slice(-1) == \"%\" && (opacity /= 100);\n            return Snap.hsl2rgb(red, green, blue, opacity);\n        }\n        red = mmin(math.round(red), 255);\n        green = mmin(math.round(green), 255);\n        blue = mmin(math.round(blue), 255);\n        opacity = mmin(mmax(opacity, 0), 1);\n        rgb = {r: red, g: green, b: blue, toString: rgbtoString};\n        rgb.hex = \"#\" + (16777216 | blue | green << 8 | red << 16).toString(16).slice(1);\n        rgb.opacity = is(opacity, \"finite\") ? opacity : 1;\n        return rgb;\n    }\n    return {r: -1, g: -1, b: -1, hex: \"none\", error: 1, toString: rgbtoString};\n}, Snap);\n/*\\\n * Snap.hsb\n [ method ]\n **\n * Converts HSB values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - b (number) value or brightness\n = (string) hex representation of the color\n\\*/\nSnap.hsb = cacher(function (h, s, b) {\n    return Snap.hsb2rgb(h, s, b).hex;\n});\n/*\\\n * Snap.hsl\n [ method ]\n **\n * Converts HSL values to a hex representation of the color\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (string) hex representation of the color\n\\*/\nSnap.hsl = cacher(function (h, s, l) {\n    return Snap.hsl2rgb(h, s, l).hex;\n});\n/*\\\n * Snap.rgb\n [ method ]\n **\n * Converts RGB values to a hex representation of the color\n - r (number) red\n - g (number) green\n - b (number) blue\n = (string) hex representation of the color\n\\*/\nSnap.rgb = cacher(function (r, g, b, o) {\n    if (is(o, \"finite\")) {\n        var round = math.round;\n        return \"rgba(\" + [round(r), round(g), round(b), +o.toFixed(2)] + \")\";\n    }\n    return \"#\" + (16777216 | b | g << 8 | r << 16).toString(16).slice(1);\n});\nvar toHex = function (color) {\n    var i = glob.doc.getElementsByTagName(\"head\")[0] || glob.doc.getElementsByTagName(\"svg\")[0],\n        red = \"rgb(255, 0, 0)\";\n    toHex = cacher(function (color) {\n        if (color.toLowerCase() == \"red\") {\n            return red;\n        }\n        i.style.color = red;\n        i.style.color = color;\n        var out = glob.doc.defaultView.getComputedStyle(i, E).getPropertyValue(\"color\");\n        return out == red ? null : out;\n    });\n    return toHex(color);\n},\nhsbtoString = function () {\n    return \"hsb(\" + [this.h, this.s, this.b] + \")\";\n},\nhsltoString = function () {\n    return \"hsl(\" + [this.h, this.s, this.l] + \")\";\n},\nrgbtoString = function () {\n    return this.opacity == 1 || this.opacity == null ?\n            this.hex :\n            \"rgba(\" + [this.r, this.g, this.b, this.opacity] + \")\";\n},\nprepareRGB = function (r, g, b) {\n    if (g == null && is(r, \"object\") && \"r\" in r && \"g\" in r && \"b\" in r) {\n        b = r.b;\n        g = r.g;\n        r = r.r;\n    }\n    if (g == null && is(r, string)) {\n        var clr = Snap.getRGB(r);\n        r = clr.r;\n        g = clr.g;\n        b = clr.b;\n    }\n    if (r > 1 || g > 1 || b > 1) {\n        r /= 255;\n        g /= 255;\n        b /= 255;\n    }\n\n    return [r, g, b];\n},\npackageRGB = function (r, g, b, o) {\n    r = math.round(r * 255);\n    g = math.round(g * 255);\n    b = math.round(b * 255);\n    var rgb = {\n        r: r,\n        g: g,\n        b: b,\n        opacity: is(o, \"finite\") ? o : 1,\n        hex: Snap.rgb(r, g, b),\n        toString: rgbtoString\n    };\n    is(o, \"finite\") && (rgb.opacity = o);\n    return rgb;\n};\n/*\\\n * Snap.color\n [ method ]\n **\n * Parses the color string and returns an object featuring the color's component values\n - clr (string) color string in one of the supported formats (see @Snap.getRGB)\n = (object) Combined RGB/HSB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••,\n o     error (boolean) `true` if string can't be parsed,\n o     h (number) hue,\n o     s (number) saturation,\n o     v (number) value (brightness),\n o     l (number) lightness\n o }\n\\*/\nSnap.color = function (clr) {\n    var rgb;\n    if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"b\" in clr) {\n        rgb = Snap.hsb2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else if (is(clr, \"object\") && \"h\" in clr && \"s\" in clr && \"l\" in clr) {\n        rgb = Snap.hsl2rgb(clr);\n        clr.r = rgb.r;\n        clr.g = rgb.g;\n        clr.b = rgb.b;\n        clr.opacity = 1;\n        clr.hex = rgb.hex;\n    } else {\n        if (is(clr, \"string\")) {\n            clr = Snap.getRGB(clr);\n        }\n        if (is(clr, \"object\") && \"r\" in clr && \"g\" in clr && \"b\" in clr && !(\"error\" in clr)) {\n            rgb = Snap.rgb2hsl(clr);\n            clr.h = rgb.h;\n            clr.s = rgb.s;\n            clr.l = rgb.l;\n            rgb = Snap.rgb2hsb(clr);\n            clr.v = rgb.b;\n        } else {\n            clr = {hex: \"none\"};\n            clr.r = clr.g = clr.b = clr.h = clr.s = clr.v = clr.l = -1;\n            clr.error = 1;\n        }\n    }\n    clr.toString = rgbtoString;\n    return clr;\n};\n/*\\\n * Snap.hsb2rgb\n [ method ]\n **\n * Converts HSB values to an RGB object\n - h (number) hue\n - s (number) saturation\n - v (number) value or brightness\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsb2rgb = function (h, s, v, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"b\" in h) {\n        v = h.b;\n        s = h.s;\n        o = h.o;\n        h = h.h;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = v * s;\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = v - C;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.hsl2rgb\n [ method ]\n **\n * Converts HSL values to an RGB object\n - h (number) hue\n - s (number) saturation\n - l (number) luminosity\n = (object) RGB object in the following format:\n o {\n o     r (number) red,\n o     g (number) green,\n o     b (number) blue,\n o     hex (string) color in HTML/CSS format: #••••••\n o }\n\\*/\nSnap.hsl2rgb = function (h, s, l, o) {\n    if (is(h, \"object\") && \"h\" in h && \"s\" in h && \"l\" in h) {\n        l = h.l;\n        s = h.s;\n        h = h.h;\n    }\n    if (h > 1 || s > 1 || l > 1) {\n        h /= 360;\n        s /= 100;\n        l /= 100;\n    }\n    h *= 360;\n    var R, G, B, X, C;\n    h = h % 360 / 60;\n    C = 2 * s * (l < .5 ? l : 1 - l);\n    X = C * (1 - abs(h % 2 - 1));\n    R = G = B = l - C / 2;\n\n    h = ~~h;\n    R += [C, X, 0, 0, X, C][h];\n    G += [X, C, C, X, 0, 0][h];\n    B += [0, 0, X, C, C, X][h];\n    return packageRGB(R, G, B, o);\n};\n/*\\\n * Snap.rgb2hsb\n [ method ]\n **\n * Converts RGB values to an HSB object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSB object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     b (number) brightness\n o }\n\\*/\nSnap.rgb2hsb = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, V, C;\n    V = mmax(r, g, b);\n    C = V - mmin(r, g, b);\n    H = C == 0 ? null :\n        V == r ? (g - b) / C :\n        V == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    S = C == 0 ? 0 : C / V;\n    return {h: H, s: S, b: V, toString: hsbtoString};\n};\n/*\\\n * Snap.rgb2hsl\n [ method ]\n **\n * Converts RGB values to an HSL object\n - r (number) red\n - g (number) green\n - b (number) blue\n = (object) HSL object in the following format:\n o {\n o     h (number) hue,\n o     s (number) saturation,\n o     l (number) luminosity\n o }\n\\*/\nSnap.rgb2hsl = function (r, g, b) {\n    b = prepareRGB(r, g, b);\n    r = b[0];\n    g = b[1];\n    b = b[2];\n\n    var H, S, L, M, m, C;\n    M = mmax(r, g, b);\n    m = mmin(r, g, b);\n    C = M - m;\n    H = C == 0 ? null :\n        M == r ? (g - b) / C :\n        M == g ? (b - r) / C + 2 :\n                 (r - g) / C + 4;\n    H = (H + 360) % 6 * 60 / 360;\n    L = (M + m) / 2;\n    S = C == 0 ? 0 :\n         L < .5 ? C / (2 * L) :\n                  C / (2 - 2 * L);\n    return {h: H, s: S, l: L, toString: hsltoString};\n};\n\n// Transformations\n/*\\\n * Snap.parsePathString\n [ method ]\n **\n * Utility method\n **\n * Parses given path string into an array of arrays of path segments\n - pathString (string|array) path string or array of segments (in the last case it is returned straight away)\n = (array) array of segments\n\\*/\nSnap.parsePathString = function (pathString) {\n    if (!pathString) {\n        return null;\n    }\n    var pth = Snap.path(pathString);\n    if (pth.arr) {\n        return Snap.path.clone(pth.arr);\n    }\n\n    var paramCounts = {a: 7, c: 6, o: 2, h: 1, l: 2, m: 2, r: 4, q: 4, s: 4, t: 2, v: 1, u: 3, z: 0},\n        data = [];\n    if (is(pathString, \"array\") && is(pathString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(pathString);\n    }\n    if (!data.length) {\n        Str(pathString).replace(pathCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            if (name == \"m\" && params.length > 2) {\n                data.push([b].concat(params.splice(0, 2)));\n                name = \"l\";\n                b = b == \"m\" ? \"l\" : \"L\";\n            }\n            if (name == \"o\" && params.length == 1) {\n                data.push([b, params[0]]);\n            }\n            if (name == \"r\") {\n                data.push([b].concat(params));\n            } else while (params.length >= paramCounts[name]) {\n                data.push([b].concat(params.splice(0, paramCounts[name])));\n                if (!paramCounts[name]) {\n                    break;\n                }\n            }\n        });\n    }\n    data.toString = Snap.path.toString;\n    pth.arr = Snap.path.clone(data);\n    return data;\n};\n/*\\\n * Snap.parseTransformString\n [ method ]\n **\n * Utility method\n **\n * Parses given transform string into an array of transformations\n - TString (string|array) transform string or array of transformations (in the last case it is returned straight away)\n = (array) array of transformations\n\\*/\nvar parseTransformString = Snap.parseTransformString = function (TString) {\n    if (!TString) {\n        return null;\n    }\n    var paramCounts = {r: 3, s: 4, t: 2, m: 6},\n        data = [];\n    if (is(TString, \"array\") && is(TString[0], \"array\")) { // rough assumption\n        data = Snap.path.clone(TString);\n    }\n    if (!data.length) {\n        Str(TString).replace(tCommand, function (a, b, c) {\n            var params = [],\n                name = b.toLowerCase();\n            c.replace(pathValues, function (a, b) {\n                b && params.push(+b);\n            });\n            data.push([b].concat(params));\n        });\n    }\n    data.toString = Snap.path.toString;\n    return data;\n};\nfunction svgTransform2string(tstr) {\n    var res = [];\n    tstr = tstr.replace(/(?:^|\\s)(\\w+)\\(([^)]+)\\)/g, function (all, name, params) {\n        params = params.split(/\\s*,\\s*|\\s+/);\n        if (name == \"rotate\" && params.length == 1) {\n            params.push(0, 0);\n        }\n        if (name == \"scale\") {\n            if (params.length > 2) {\n                params = params.slice(0, 2);\n            } else if (params.length == 2) {\n                params.push(0, 0);\n            }\n            if (params.length == 1) {\n                params.push(params[0], 0, 0);\n            }\n        }\n        if (name == \"skewX\") {\n            res.push([\"m\", 1, 0, math.tan(rad(params[0])), 1, 0, 0]);\n        } else if (name == \"skewY\") {\n            res.push([\"m\", 1, math.tan(rad(params[0])), 0, 1, 0, 0]);\n        } else {\n            res.push([name.charAt(0)].concat(params));\n        }\n        return all;\n    });\n    return res;\n}\nSnap._.svgTransform2string = svgTransform2string;\nSnap._.rgTransform = /^[a-z][\\s]*-?\\.?\\d/i;\nfunction transform2matrix(tstr, bbox) {\n    var tdata = parseTransformString(tstr),\n        m = new Snap.Matrix;\n    if (tdata) {\n        for (var i = 0, ii = tdata.length; i < ii; i++) {\n            var t = tdata[i],\n                tlen = t.length,\n                command = Str(t[0]).toLowerCase(),\n                absolute = t[0] != command,\n                inver = absolute ? m.invert() : 0,\n                x1,\n                y1,\n                x2,\n                y2,\n                bb;\n            if (command == \"t\" && tlen == 2){\n                m.translate(t[1], 0);\n            } else if (command == \"t\" && tlen == 3) {\n                if (absolute) {\n                    x1 = inver.x(0, 0);\n                    y1 = inver.y(0, 0);\n                    x2 = inver.x(t[1], t[2]);\n                    y2 = inver.y(t[1], t[2]);\n                    m.translate(x2 - x1, y2 - y1);\n                } else {\n                    m.translate(t[1], t[2]);\n                }\n            } else if (command == \"r\") {\n                if (tlen == 2) {\n                    bb = bb || bbox;\n                    m.rotate(t[1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.rotate(t[1], x2, y2);\n                    } else {\n                        m.rotate(t[1], t[2], t[3]);\n                    }\n                }\n            } else if (command == \"s\") {\n                if (tlen == 2 || tlen == 3) {\n                    bb = bb || bbox;\n                    m.scale(t[1], t[tlen - 1], bb.x + bb.width / 2, bb.y + bb.height / 2);\n                } else if (tlen == 4) {\n                    if (absolute) {\n                        x2 = inver.x(t[2], t[3]);\n                        y2 = inver.y(t[2], t[3]);\n                        m.scale(t[1], t[1], x2, y2);\n                    } else {\n                        m.scale(t[1], t[1], t[2], t[3]);\n                    }\n                } else if (tlen == 5) {\n                    if (absolute) {\n                        x2 = inver.x(t[3], t[4]);\n                        y2 = inver.y(t[3], t[4]);\n                        m.scale(t[1], t[2], x2, y2);\n                    } else {\n                        m.scale(t[1], t[2], t[3], t[4]);\n                    }\n                }\n            } else if (command == \"m\" && tlen == 7) {\n                m.add(t[1], t[2], t[3], t[4], t[5], t[6]);\n            }\n        }\n    }\n    return m;\n}\nSnap._.transform2matrix = transform2matrix;\nSnap._unit2px = unit2px;\nvar contains = glob.doc.contains || glob.doc.compareDocumentPosition ?\n    function (a, b) {\n        var adown = a.nodeType == 9 ? a.documentElement : a,\n            bup = b && b.parentNode;\n            return a == bup || !!(bup && bup.nodeType == 1 && (\n                adown.contains ?\n                    adown.contains(bup) :\n                    a.compareDocumentPosition && a.compareDocumentPosition(bup) & 16\n            ));\n    } :\n    function (a, b) {\n        if (b) {\n            while (b) {\n                b = b.parentNode;\n                if (b == a) {\n                    return true;\n                }\n            }\n        }\n        return false;\n    };\nfunction getSomeDefs(el) {\n    var p = el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) ||\n            el.node.parentNode && wrap(el.node.parentNode) ||\n            Snap.select(\"svg\") ||\n            Snap(0, 0),\n        pdefs = p.select(\"defs\"),\n        defs  = pdefs == null ? false : pdefs.node;\n    if (!defs) {\n        defs = make(\"defs\", p.node).node;\n    }\n    return defs;\n}\nfunction getSomeSVG(el) {\n    return el.node.ownerSVGElement && wrap(el.node.ownerSVGElement) || Snap.select(\"svg\");\n}\nSnap._.getSomeDefs = getSomeDefs;\nSnap._.getSomeSVG = getSomeSVG;\nfunction unit2px(el, name, value) {\n    var svg = getSomeSVG(el).node,\n        out = {},\n        mgr = svg.querySelector(\".svg---mgr\");\n    if (!mgr) {\n        mgr = $(\"rect\");\n        $(mgr, {x: -9e9, y: -9e9, width: 10, height: 10, \"class\": \"svg---mgr\", fill: \"none\"});\n        svg.appendChild(mgr);\n    }\n    function getW(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {width: val});\n        try {\n            return mgr.getBBox().width;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function getH(val) {\n        if (val == null) {\n            return E;\n        }\n        if (val == +val) {\n            return val;\n        }\n        $(mgr, {height: val});\n        try {\n            return mgr.getBBox().height;\n        } catch (e) {\n            return 0;\n        }\n    }\n    function set(nam, f) {\n        if (name == null) {\n            out[nam] = f(el.attr(nam) || 0);\n        } else if (nam == name) {\n            out = f(value == null ? el.attr(nam) || 0 : value);\n        }\n    }\n    switch (el.type) {\n        case \"rect\":\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        case \"image\":\n            set(\"width\", getW);\n            set(\"height\", getH);\n        case \"text\":\n            set(\"x\", getW);\n            set(\"y\", getH);\n        break;\n        case \"circle\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"r\", getW);\n        break;\n        case \"ellipse\":\n            set(\"cx\", getW);\n            set(\"cy\", getH);\n            set(\"rx\", getW);\n            set(\"ry\", getH);\n        break;\n        case \"line\":\n            set(\"x1\", getW);\n            set(\"x2\", getW);\n            set(\"y1\", getH);\n            set(\"y2\", getH);\n        break;\n        case \"marker\":\n            set(\"refX\", getW);\n            set(\"markerWidth\", getW);\n            set(\"refY\", getH);\n            set(\"markerHeight\", getH);\n        break;\n        case \"radialGradient\":\n            set(\"fx\", getW);\n            set(\"fy\", getH);\n        break;\n        case \"tspan\":\n            set(\"dx\", getW);\n            set(\"dy\", getH);\n        break;\n        default:\n            set(name, getW);\n    }\n    svg.removeChild(mgr);\n    return out;\n}\n/*\\\n * Snap.select\n [ method ]\n **\n * Wraps a DOM element specified by CSS selector as @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.select = function (query) {\n    query = Str(query).replace(/([^\\\\]):/g, \"$1\\\\:\");\n    return wrap(glob.doc.querySelector(query));\n};\n/*\\\n * Snap.selectAll\n [ method ]\n **\n * Wraps DOM elements specified by CSS selector as set or array of @Element\n - query (string) CSS selector of the element\n = (Element) the current element\n\\*/\nSnap.selectAll = function (query) {\n    var nodelist = glob.doc.querySelectorAll(query),\n        set = (Snap.set || Array)();\n    for (var i = 0; i < nodelist.length; i++) {\n        set.push(wrap(nodelist[i]));\n    }\n    return set;\n};\n\nfunction add2group(list) {\n    if (!is(list, \"array\")) {\n        list = Array.prototype.slice.call(arguments, 0);\n    }\n    var i = 0,\n        j = 0,\n        node = this.node;\n    while (this[i]) delete this[i++];\n    for (i = 0; i < list.length; i++) {\n        if (list[i].type == \"set\") {\n            list[i].forEach(function (el) {\n                node.appendChild(el.node);\n            });\n        } else {\n            node.appendChild(list[i].node);\n        }\n    }\n    var children = node.childNodes;\n    for (i = 0; i < children.length; i++) {\n        this[j++] = wrap(children[i]);\n    }\n    return this;\n}\n// Hub garbage collector every 10s\nsetInterval(function () {\n    for (var key in hub) if (hub[has](key)) {\n        var el = hub[key],\n            node = el.node;\n        if (el.type != \"svg\" && !node.ownerSVGElement || el.type == \"svg\" && (!node.parentNode || \"ownerSVGElement\" in node.parentNode && !node.ownerSVGElement)) {\n            delete hub[key];\n        }\n    }\n}, 1e4);\nfunction Element(el) {\n    if (el.snap in hub) {\n        return hub[el.snap];\n    }\n    var svg;\n    try {\n        svg = el.ownerSVGElement;\n    } catch(e) {}\n    /*\\\n     * Element.node\n     [ property (object) ]\n     **\n     * Gives you a reference to the DOM object, so you can assign event handlers or just mess around.\n     > Usage\n     | // draw a circle at coordinate 10,10 with radius of 10\n     | var c = paper.circle(10, 10, 10);\n     | c.node.onclick = function () {\n     |     c.attr(\"fill\", \"red\");\n     | };\n    \\*/\n    this.node = el;\n    if (svg) {\n        this.paper = new Paper(svg);\n    }\n    /*\\\n     * Element.type\n     [ property (string) ]\n     **\n     * SVG tag name of the given element.\n    \\*/\n    this.type = el.tagName || el.nodeName;\n    var id = this.id = ID(this);\n    this.anims = {};\n    this._ = {\n        transform: []\n    };\n    el.snap = id;\n    hub[id] = this;\n    if (this.type == \"g\") {\n        this.add = add2group;\n    }\n    if (this.type in {g: 1, mask: 1, pattern: 1, symbol: 1}) {\n        for (var method in Paper.prototype) if (Paper.prototype[has](method)) {\n            this[method] = Paper.prototype[method];\n        }\n    }\n}\n   /*\\\n     * Element.attr\n     [ method ]\n     **\n     * Gets or sets given attributes of the element.\n     **\n     - params (object) contains key-value pairs of attributes you want to set\n     * or\n     - param (string) name of the attribute\n     = (Element) the current element\n     * or\n     = (string) value of attribute\n     > Usage\n     | el.attr({\n     |     fill: \"#fc0\",\n     |     stroke: \"#000\",\n     |     strokeWidth: 2, // CamelCase...\n     |     \"fill-opacity\": 0.5, // or dash-separated names\n     |     width: \"*=2\" // prefixed values\n     | });\n     | console.log(el.attr(\"fill\")); // #fc0\n     * Prefixed values in format `\"+=10\"` supported. All four operations\n     * (`+`, `-`, `*` and `/`) could be used. Optionally you can use units for `+`\n     * and `-`: `\"+=2em\"`.\n    \\*/\n    Element.prototype.attr = function (params, value) {\n        var el = this,\n            node = el.node;\n        if (!params) {\n            if (node.nodeType != 1) {\n                return {\n                    text: node.nodeValue\n                };\n            }\n            var attr = node.attributes,\n                out = {};\n            for (var i = 0, ii = attr.length; i < ii; i++) {\n                out[attr[i].nodeName] = attr[i].nodeValue;\n            }\n            return out;\n        }\n        if (is(params, \"string\")) {\n            if (arguments.length > 1) {\n                var json = {};\n                json[params] = value;\n                params = json;\n            } else {\n                return eve(\"snap.util.getattr.\" + params, el).firstDefined();\n            }\n        }\n        for (var att in params) {\n            if (params[has](att)) {\n                eve(\"snap.util.attr.\" + att, el, params[att]);\n            }\n        }\n        return el;\n    };\n/*\\\n * Snap.parse\n [ method ]\n **\n * Parses SVG fragment and converts it into a @Fragment\n **\n - svg (string) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.parse = function (svg) {\n    var f = glob.doc.createDocumentFragment(),\n        full = true,\n        div = glob.doc.createElement(\"div\");\n    svg = Str(svg);\n    if (!svg.match(/^\\s*<\\s*svg(?:\\s|>)/)) {\n        svg = \"<svg>\" + svg + \"</svg>\";\n        full = false;\n    }\n    div.innerHTML = svg;\n    svg = div.getElementsByTagName(\"svg\")[0];\n    if (svg) {\n        if (full) {\n            f = svg;\n        } else {\n            while (svg.firstChild) {\n                f.appendChild(svg.firstChild);\n            }\n        }\n    }\n    return new Fragment(f);\n};\nfunction Fragment(frag) {\n    this.node = frag;\n}\n/*\\\n * Snap.fragment\n [ method ]\n **\n * Creates a DOM fragment from a given list of elements or strings\n **\n - varargs (…) SVG string\n = (Fragment) the @Fragment\n\\*/\nSnap.fragment = function () {\n    var args = Array.prototype.slice.call(arguments, 0),\n        f = glob.doc.createDocumentFragment();\n    for (var i = 0, ii = args.length; i < ii; i++) {\n        var item = args[i];\n        if (item.node && item.node.nodeType) {\n            f.appendChild(item.node);\n        }\n        if (item.nodeType) {\n            f.appendChild(item);\n        }\n        if (typeof item == \"string\") {\n            f.appendChild(Snap.parse(item).node);\n        }\n    }\n    return new Fragment(f);\n};\n\nfunction make(name, parent) {\n    var res = $(name);\n    parent.appendChild(res);\n    var el = wrap(res);\n    return el;\n}\nfunction Paper(w, h) {\n    var res,\n        desc,\n        defs,\n        proto = Paper.prototype;\n    if (w && w.tagName && w.tagName.toLowerCase() == \"svg\") {\n        if (w.snap in hub) {\n            return hub[w.snap];\n        }\n        var doc = w.ownerDocument;\n        res = new Element(w);\n        desc = w.getElementsByTagName(\"desc\")[0];\n        defs = w.getElementsByTagName(\"defs\")[0];\n        if (!desc) {\n            desc = $(\"desc\");\n            desc.appendChild(doc.createTextNode(\"Created with Snap\"));\n            res.node.appendChild(desc);\n        }\n        if (!defs) {\n            defs = $(\"defs\");\n            res.node.appendChild(defs);\n        }\n        res.defs = defs;\n        for (var key in proto) if (proto[has](key)) {\n            res[key] = proto[key];\n        }\n        res.paper = res.root = res;\n    } else {\n        res = make(\"svg\", glob.doc.body);\n        $(res.node, {\n            height: h,\n            version: 1.1,\n            width: w,\n            xmlns: xmlns\n        });\n    }\n    return res;\n}\nfunction wrap(dom) {\n    if (!dom) {\n        return dom;\n    }\n    if (dom instanceof Element || dom instanceof Fragment) {\n        return dom;\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"svg\") {\n        return new Paper(dom);\n    }\n    if (dom.tagName && dom.tagName.toLowerCase() == \"object\" && dom.type == \"image/svg+xml\") {\n        return new Paper(dom.contentDocument.getElementsByTagName(\"svg\")[0]);\n    }\n    return new Element(dom);\n}\n\nSnap._.make = make;\nSnap._.wrap = wrap;\n/*\\\n * Paper.el\n [ method ]\n **\n * Creates an element on paper with a given name and no attributes\n **\n - name (string) tag name\n - attr (object) attributes\n = (Element) the current element\n > Usage\n | var c = paper.circle(10, 10, 10); // is the same as...\n | var c = paper.el(\"circle\").attr({\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n | // and the same as\n | var c = paper.el(\"circle\", {\n |     cx: 10,\n |     cy: 10,\n |     r: 10\n | });\n\\*/\nPaper.prototype.el = function (name, attr) {\n    var el = make(name, this.node);\n    attr && el.attr(attr);\n    return el;\n};\n/*\\\n * Element.children\n [ method ]\n **\n * Returns array of all the children of the element.\n = (array) array of Elements\n\\*/\nElement.prototype.children = function () {\n    var out = [],\n        ch = this.node.childNodes;\n    for (var i = 0, ii = ch.length; i < ii; i++) {\n        out[i] = Snap(ch[i]);\n    }\n    return out;\n};\nfunction jsonFiller(root, o) {\n    for (var i = 0, ii = root.length; i < ii; i++) {\n        var item = {\n                type: root[i].type,\n                attr: root[i].attr()\n            },\n            children = root[i].children();\n        o.push(item);\n        if (children.length) {\n            jsonFiller(children, item.childNodes = []);\n        }\n    }\n}\n/*\\\n * Element.toJSON\n [ method ]\n **\n * Returns object representation of the given element and all its children.\n = (object) in format\n o {\n o     type (string) this.type,\n o     attr (object) attributes map,\n o     childNodes (array) optional array of children in the same format\n o }\n\\*/\nElement.prototype.toJSON = function () {\n    var out = [];\n    jsonFiller([this], out);\n    return out[0];\n};\n// default\neve.on(\"snap.util.getattr\", function () {\n    var att = eve.nt();\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    var css = att.replace(/[A-Z]/g, function (letter) {\n        return \"-\" + letter.toLowerCase();\n    });\n    if (cssAttr[has](css)) {\n        return this.node.ownerDocument.defaultView.getComputedStyle(this.node, null).getPropertyValue(css);\n    } else {\n        return $(this.node, att);\n    }\n});\nvar cssAttr = {\n    \"alignment-baseline\": 0,\n    \"baseline-shift\": 0,\n    \"clip\": 0,\n    \"clip-path\": 0,\n    \"clip-rule\": 0,\n    \"color\": 0,\n    \"color-interpolation\": 0,\n    \"color-interpolation-filters\": 0,\n    \"color-profile\": 0,\n    \"color-rendering\": 0,\n    \"cursor\": 0,\n    \"direction\": 0,\n    \"display\": 0,\n    \"dominant-baseline\": 0,\n    \"enable-background\": 0,\n    \"fill\": 0,\n    \"fill-opacity\": 0,\n    \"fill-rule\": 0,\n    \"filter\": 0,\n    \"flood-color\": 0,\n    \"flood-opacity\": 0,\n    \"font\": 0,\n    \"font-family\": 0,\n    \"font-size\": 0,\n    \"font-size-adjust\": 0,\n    \"font-stretch\": 0,\n    \"font-style\": 0,\n    \"font-variant\": 0,\n    \"font-weight\": 0,\n    \"glyph-orientation-horizontal\": 0,\n    \"glyph-orientation-vertical\": 0,\n    \"image-rendering\": 0,\n    \"kerning\": 0,\n    \"letter-spacing\": 0,\n    \"lighting-color\": 0,\n    \"marker\": 0,\n    \"marker-end\": 0,\n    \"marker-mid\": 0,\n    \"marker-start\": 0,\n    \"mask\": 0,\n    \"opacity\": 0,\n    \"overflow\": 0,\n    \"pointer-events\": 0,\n    \"shape-rendering\": 0,\n    \"stop-color\": 0,\n    \"stop-opacity\": 0,\n    \"stroke\": 0,\n    \"stroke-dasharray\": 0,\n    \"stroke-dashoffset\": 0,\n    \"stroke-linecap\": 0,\n    \"stroke-linejoin\": 0,\n    \"stroke-miterlimit\": 0,\n    \"stroke-opacity\": 0,\n    \"stroke-width\": 0,\n    \"text-anchor\": 0,\n    \"text-decoration\": 0,\n    \"text-rendering\": 0,\n    \"unicode-bidi\": 0,\n    \"visibility\": 0,\n    \"word-spacing\": 0,\n    \"writing-mode\": 0\n};\n\neve.on(\"snap.util.attr\", function (value) {\n    var att = eve.nt(),\n        attr = {};\n    att = att.substring(att.lastIndexOf(\".\") + 1);\n    attr[att] = value;\n    var style = att.replace(/-(\\w)/gi, function (all, letter) {\n            return letter.toUpperCase();\n        }),\n        css = att.replace(/[A-Z]/g, function (letter) {\n            return \"-\" + letter.toLowerCase();\n        });\n    if (cssAttr[has](css)) {\n        this.node.style[style] = value == null ? E : value;\n    } else {\n        $(this.node, attr);\n    }\n});\n(function (proto) {}(Paper.prototype));\n\n// simple ajax\n/*\\\n * Snap.ajax\n [ method ]\n **\n * Simple implementation of Ajax\n **\n - url (string) URL\n - postData (object|string) data for post request\n - callback (function) callback\n - scope (object) #optional scope of callback\n * or\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n = (XMLHttpRequest) the XMLHttpRequest object, just in case\n\\*/\nSnap.ajax = function (url, postData, callback, scope){\n    var req = new XMLHttpRequest,\n        id = ID();\n    if (req) {\n        if (is(postData, \"function\")) {\n            scope = callback;\n            callback = postData;\n            postData = null;\n        } else if (is(postData, \"object\")) {\n            var pd = [];\n            for (var key in postData) if (postData.hasOwnProperty(key)) {\n                pd.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(postData[key]));\n            }\n            postData = pd.join(\"&\");\n        }\n        req.open(postData ? \"POST\" : \"GET\", url, true);\n        if (postData) {\n            req.setRequestHeader(\"X-Requested-With\", \"XMLHttpRequest\");\n            req.setRequestHeader(\"Content-type\", \"application/x-www-form-urlencoded\");\n        }\n        if (callback) {\n            eve.once(\"snap.ajax.\" + id + \".0\", callback);\n            eve.once(\"snap.ajax.\" + id + \".200\", callback);\n            eve.once(\"snap.ajax.\" + id + \".304\", callback);\n        }\n        req.onreadystatechange = function() {\n            if (req.readyState != 4) return;\n            eve(\"snap.ajax.\" + id + \".\" + req.status, scope, req);\n        };\n        if (req.readyState == 4) {\n            return req;\n        }\n        req.send(postData);\n        return req;\n    }\n};\n/*\\\n * Snap.load\n [ method ]\n **\n * Loads external SVG file as a @Fragment (see @Snap.ajax for more advanced AJAX)\n **\n - url (string) URL\n - callback (function) callback\n - scope (object) #optional scope of callback\n\\*/\nSnap.load = function (url, callback, scope) {\n    Snap.ajax(url, function (req) {\n        var f = Snap.parse(req.responseText);\n        scope ? callback.call(scope, f) : callback(f);\n    });\n};\nvar getOffset = function (elem) {\n    var box = elem.getBoundingClientRect(),\n        doc = elem.ownerDocument,\n        body = doc.body,\n        docElem = doc.documentElement,\n        clientTop = docElem.clientTop || body.clientTop || 0, clientLeft = docElem.clientLeft || body.clientLeft || 0,\n        top  = box.top  + (g.win.pageYOffset || docElem.scrollTop || body.scrollTop ) - clientTop,\n        left = box.left + (g.win.pageXOffset || docElem.scrollLeft || body.scrollLeft) - clientLeft;\n    return {\n        y: top,\n        x: left\n    };\n};\n/*\\\n * Snap.getElementByPoint\n [ method ]\n **\n * Returns you topmost element under given point.\n **\n = (object) Snap element object\n - x (number) x coordinate from the top left corner of the window\n - y (number) y coordinate from the top left corner of the window\n > Usage\n | Snap.getElementByPoint(mouseX, mouseY).attr({stroke: \"#f00\"});\n\\*/\nSnap.getElementByPoint = function (x, y) {\n    var paper = this,\n        svg = paper.canvas,\n        target = glob.doc.elementFromPoint(x, y);\n    if (glob.win.opera && target.tagName == \"svg\") {\n        var so = getOffset(target),\n            sr = target.createSVGRect();\n        sr.x = x - so.x;\n        sr.y = y - so.y;\n        sr.width = sr.height = 1;\n        var hits = target.getIntersectionList(sr, null);\n        if (hits.length) {\n            target = hits[hits.length - 1];\n        }\n    }\n    if (!target) {\n        return null;\n    }\n    return wrap(target);\n};\n/*\\\n * Snap.plugin\n [ method ]\n **\n * Let you write plugins. You pass in a function with five arguments, like this:\n | Snap.plugin(function (Snap, Element, Paper, global, Fragment) {\n |     Snap.newmethod = function () {};\n |     Element.prototype.newmethod = function () {};\n |     Paper.prototype.newmethod = function () {};\n | });\n * Inside the function you have access to all main objects (and their\n * prototypes). This allow you to extend anything you want.\n **\n - f (function) your plugin body\n\\*/\nSnap.plugin = function (f) {\n    f(Snap, Element, Paper, glob, Fragment);\n};\nglob.win.Snap = Snap;\nreturn Snap;\n}(window || this));\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        unit2px = Snap._unit2px,\n        $ = Snap._.$,\n        make = Snap._.make,\n        getSomeDefs = Snap._.getSomeDefs,\n        has = \"hasOwnProperty\",\n        wrap = Snap._.wrap;\n    /*\\\n     * Element.getBBox\n     [ method ]\n     **\n     * Returns the bounding box descriptor for the given element\n     **\n     = (object) bounding box descriptor:\n     o {\n     o     cx: (number) x of the center,\n     o     cy: (number) x of the center,\n     o     h: (number) height,\n     o     height: (number) height,\n     o     path: (string) path command for the box,\n     o     r0: (number) radius of a circle that fully encloses the box,\n     o     r1: (number) radius of the smallest circle that can be enclosed,\n     o     r2: (number) radius of the largest circle that can be enclosed,\n     o     vb: (string) box as a viewbox command,\n     o     w: (number) width,\n     o     width: (number) width,\n     o     x2: (number) x of the right side,\n     o     x: (number) x of the left side,\n     o     y2: (number) y of the bottom edge,\n     o     y: (number) y of the top edge\n     o }\n    \\*/\n    elproto.getBBox = function (isWithoutTransform) {\n        if (this.type == \"tspan\") {\n            return Snap._.box(this.node.getClientRects().item(0));\n        }\n        if (!Snap.Matrix || !Snap.path) {\n            return this.node.getBBox();\n        }\n        var el = this,\n            m = new Snap.Matrix;\n        if (el.removed) {\n            return Snap._.box();\n        }\n        while (el.type == \"use\") {\n            if (!isWithoutTransform) {\n                m = m.add(el.transform().localMatrix.translate(el.attr(\"x\") || 0, el.attr(\"y\") || 0));\n            }\n            if (el.original) {\n                el = el.original;\n            } else {\n                var href = el.attr(\"xlink:href\");\n                el = el.original = el.node.ownerDocument.getElementById(href.substring(href.indexOf(\"#\") + 1));\n            }\n        }\n        var _ = el._,\n            pathfinder = Snap.path.get[el.type] || Snap.path.get.deflt;\n        try {\n            if (isWithoutTransform) {\n                _.bboxwt = pathfinder ? Snap.path.getBBox(el.realPath = pathfinder(el)) : Snap._.box(el.node.getBBox());\n                return Snap._.box(_.bboxwt);\n            } else {\n                el.realPath = pathfinder(el);\n                el.matrix = el.transform().localMatrix;\n                _.bbox = Snap.path.getBBox(Snap.path.map(el.realPath, m.add(el.matrix)));\n                return Snap._.box(_.bbox);\n            }\n        } catch (e) {\n            // Firefox doesn’t give you bbox of hidden element\n            return Snap._.box();\n        }\n    };\n    var propString = function () {\n        return this.string;\n    };\n    function extractTransform(el, tstr) {\n        if (tstr == null) {\n            var doReturn = true;\n            if (el.type == \"linearGradient\" || el.type == \"radialGradient\") {\n                tstr = el.node.getAttribute(\"gradientTransform\");\n            } else if (el.type == \"pattern\") {\n                tstr = el.node.getAttribute(\"patternTransform\");\n            } else {\n                tstr = el.node.getAttribute(\"transform\");\n            }\n            if (!tstr) {\n                return new Snap.Matrix;\n            }\n            tstr = Snap._.svgTransform2string(tstr);\n        } else {\n            if (!Snap._.rgTransform.test(tstr)) {\n                tstr = Snap._.svgTransform2string(tstr);\n            } else {\n                tstr = Str(tstr).replace(/\\.{3}|\\u2026/g, el._.transform || \"\");\n            }\n            if (is(tstr, \"array\")) {\n                tstr = Snap.path ? Snap.path.toString.call(tstr) : Str(tstr);\n            }\n            el._.transform = tstr;\n        }\n        var m = Snap._.transform2matrix(tstr, el.getBBox(1));\n        if (doReturn) {\n            return m;\n        } else {\n            el.matrix = m;\n        }\n    }\n    /*\\\n     * Element.transform\n     [ method ]\n     **\n     * Gets or sets transformation of the element\n     **\n     - tstr (string) transform string in Snap or SVG format\n     = (Element) the current element\n     * or\n     = (object) transformation descriptor:\n     o {\n     o     string (string) transform string,\n     o     globalMatrix (Matrix) matrix of all transformations applied to element or its parents,\n     o     localMatrix (Matrix) matrix of transformations applied only to the element,\n     o     diffMatrix (Matrix) matrix of difference between global and local transformations,\n     o     global (string) global transformation as string,\n     o     local (string) local transformation as string,\n     o     toString (function) returns `string` property\n     o }\n    \\*/\n    elproto.transform = function (tstr) {\n        var _ = this._;\n        if (tstr == null) {\n            var papa = this,\n                global = new Snap.Matrix(this.node.getCTM()),\n                local = extractTransform(this),\n                ms = [local],\n                m = new Snap.Matrix,\n                i,\n                localString = local.toTransformString(),\n                string = Str(local) == Str(this.matrix) ?\n                            Str(_.transform) : localString;\n            while (papa.type != \"svg\" && (papa = papa.parent())) {\n                ms.push(extractTransform(papa));\n            }\n            i = ms.length;\n            while (i--) {\n                m.add(ms[i]);\n            }\n            return {\n                string: string,\n                globalMatrix: global,\n                totalMatrix: m,\n                localMatrix: local,\n                diffMatrix: global.clone().add(local.invert()),\n                global: global.toTransformString(),\n                total: m.toTransformString(),\n                local: localString,\n                toString: propString\n            };\n        }\n        if (tstr instanceof Snap.Matrix) {\n            this.matrix = tstr;\n            this._.transform = tstr.toTransformString();\n        } else {\n            extractTransform(this, tstr);\n        }\n\n        if (this.node) {\n            if (this.type == \"linearGradient\" || this.type == \"radialGradient\") {\n                $(this.node, {gradientTransform: this.matrix});\n            } else if (this.type == \"pattern\") {\n                $(this.node, {patternTransform: this.matrix});\n            } else {\n                $(this.node, {transform: this.matrix});\n            }\n        }\n\n        return this;\n    };\n    /*\\\n     * Element.parent\n     [ method ]\n     **\n     * Returns the element's parent\n     **\n     = (Element) the parent element\n    \\*/\n    elproto.parent = function () {\n        return wrap(this.node.parentNode);\n    };\n    /*\\\n     * Element.append\n     [ method ]\n     **\n     * Appends the given element to current one\n     **\n     - el (Element|Set) element to append\n     = (Element) the parent element\n    \\*/\n    /*\\\n     * Element.add\n     [ method ]\n     **\n     * See @Element.append\n    \\*/\n    elproto.append = elproto.add = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this;\n                el.forEach(function (el) {\n                    it.add(el);\n                });\n                return this;\n            }\n            el = wrap(el);\n            this.node.appendChild(el.node);\n            el.paper = this.paper;\n        }\n        return this;\n    };\n    /*\\\n     * Element.appendTo\n     [ method ]\n     **\n     * Appends the current element to the given one\n     **\n     - el (Element) parent element to append to\n     = (Element) the child element\n    \\*/\n    elproto.appendTo = function (el) {\n        if (el) {\n            el = wrap(el);\n            el.append(this);\n        }\n        return this;\n    };\n    /*\\\n     * Element.prepend\n     [ method ]\n     **\n     * Prepends the given element to the current one\n     **\n     - el (Element) element to prepend\n     = (Element) the parent element\n    \\*/\n    elproto.prepend = function (el) {\n        if (el) {\n            if (el.type == \"set\") {\n                var it = this,\n                    first;\n                el.forEach(function (el) {\n                    if (first) {\n                        first.after(el);\n                    } else {\n                        it.prepend(el);\n                    }\n                    first = el;\n                });\n                return this;\n            }\n            el = wrap(el);\n            var parent = el.parent();\n            this.node.insertBefore(el.node, this.node.firstChild);\n            this.add && this.add();\n            el.paper = this.paper;\n            this.parent() && this.parent().add();\n            parent && parent.add();\n        }\n        return this;\n    };\n    /*\\\n     * Element.prependTo\n     [ method ]\n     **\n     * Prepends the current element to the given one\n     **\n     - el (Element) parent element to prepend to\n     = (Element) the child element\n    \\*/\n    elproto.prependTo = function (el) {\n        el = wrap(el);\n        el.prepend(this);\n        return this;\n    };\n    /*\\\n     * Element.before\n     [ method ]\n     **\n     * Inserts given element before the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.before = function (el) {\n        if (el.type == \"set\") {\n            var it = this;\n            el.forEach(function (el) {\n                var parent = el.parent();\n                it.node.parentNode.insertBefore(el.node, it.node);\n                parent && parent.add();\n            });\n            this.parent().add();\n            return this;\n        }\n        el = wrap(el);\n        var parent = el.parent();\n        this.node.parentNode.insertBefore(el.node, this.node);\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.after\n     [ method ]\n     **\n     * Inserts given element after the current one\n     **\n     - el (Element) element to insert\n     = (Element) the parent element\n    \\*/\n    elproto.after = function (el) {\n        el = wrap(el);\n        var parent = el.parent();\n        if (this.node.nextSibling) {\n            this.node.parentNode.insertBefore(el.node, this.node.nextSibling);\n        } else {\n            this.node.parentNode.appendChild(el.node);\n        }\n        this.parent() && this.parent().add();\n        parent && parent.add();\n        el.paper = this.paper;\n        return this;\n    };\n    /*\\\n     * Element.insertBefore\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertBefore = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.insertAfter\n     [ method ]\n     **\n     * Inserts the element after the given one\n     **\n     - el (Element) element next to whom insert to\n     = (Element) the parent element\n    \\*/\n    elproto.insertAfter = function (el) {\n        el = wrap(el);\n        var parent = this.parent();\n        el.node.parentNode.insertBefore(this.node, el.node.nextSibling);\n        this.paper = el.paper;\n        parent && parent.add();\n        el.parent() && el.parent().add();\n        return this;\n    };\n    /*\\\n     * Element.remove\n     [ method ]\n     **\n     * Removes element from the DOM\n     = (Element) the detached element\n    \\*/\n    elproto.remove = function () {\n        var parent = this.parent();\n        this.node.parentNode && this.node.parentNode.removeChild(this.node);\n        delete this.paper;\n        this.removed = true;\n        parent && parent.add();\n        return this;\n    };\n    /*\\\n     * Element.select\n     [ method ]\n     **\n     * Gathers the nested @Element matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Element) result of query selection\n    \\*/\n    elproto.select = function (query) {\n        return wrap(this.node.querySelector(query));\n    };\n    /*\\\n     * Element.selectAll\n     [ method ]\n     **\n     * Gathers nested @Element objects matching the given set of CSS selectors\n     **\n     - query (string) CSS selector\n     = (Set|array) result of query selection\n    \\*/\n    elproto.selectAll = function (query) {\n        var nodelist = this.node.querySelectorAll(query),\n            set = (Snap.set || Array)();\n        for (var i = 0; i < nodelist.length; i++) {\n            set.push(wrap(nodelist[i]));\n        }\n        return set;\n    };\n    /*\\\n     * Element.asPX\n     [ method ]\n     **\n     * Returns given attribute of the element as a `px` value (not %, em, etc.)\n     **\n     - attr (string) attribute name\n     - value (string) #optional attribute value\n     = (Element) result of query selection\n    \\*/\n    elproto.asPX = function (attr, value) {\n        if (value == null) {\n            value = this.attr(attr);\n        }\n        return +unit2px(this, attr, value);\n    };\n    // SIERRA Element.use(): I suggest adding a note about how to access the original element the returned <use> instantiates. It's a part of SVG with which ordinary web developers may be least familiar.\n    /*\\\n     * Element.use\n     [ method ]\n     **\n     * Creates a `<use>` element linked to the current element\n     **\n     = (Element) the `<use>` element\n    \\*/\n    elproto.use = function () {\n        var use,\n            id = this.node.id;\n        if (!id) {\n            id = this.id;\n            $(this.node, {\n                id: id\n            });\n        }\n        if (this.type == \"linearGradient\" || this.type == \"radialGradient\" ||\n            this.type == \"pattern\") {\n            use = make(this.type, this.node.parentNode);\n        } else {\n            use = make(\"use\", this.node.parentNode);\n        }\n        $(use.node, {\n            \"xlink:href\": \"#\" + id\n        });\n        use.original = this;\n        return use;\n    };\n    function fixids(el) {\n        var els = el.selectAll(\"*\"),\n            it,\n            url = /^\\s*url\\((\"|'|)(.*)\\1\\)\\s*$/,\n            ids = [],\n            uses = {};\n        function urltest(it, name) {\n            var val = $(it.node, name);\n            val = val && val.match(url);\n            val = val && val[2];\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    var attr = {};\n                    attr[name] = Snap.url(id);\n                    $(it.node, attr);\n                });\n            }\n        }\n        function linktest(it) {\n            var val = $(it.node, \"xlink:href\");\n            if (val && val.charAt() == \"#\") {\n                val = val.substring(1);\n            } else {\n                return;\n            }\n            if (val) {\n                uses[val] = (uses[val] || []).concat(function (id) {\n                    it.attr(\"xlink:href\", \"#\" + id);\n                });\n            }\n        }\n        for (var i = 0, ii = els.length; i < ii; i++) {\n            it = els[i];\n            urltest(it, \"fill\");\n            urltest(it, \"stroke\");\n            urltest(it, \"filter\");\n            urltest(it, \"mask\");\n            urltest(it, \"clip-path\");\n            linktest(it);\n            var oldid = $(it.node, \"id\");\n            if (oldid) {\n                $(it.node, {id: it.id});\n                ids.push({\n                    old: oldid,\n                    id: it.id\n                });\n            }\n        }\n        for (i = 0, ii = ids.length; i < ii; i++) {\n            var fs = uses[ids[i].old];\n            if (fs) {\n                for (var j = 0, jj = fs.length; j < jj; j++) {\n                    fs[j](ids[i].id);\n                }\n            }\n        }\n    }\n    /*\\\n     * Element.clone\n     [ method ]\n     **\n     * Creates a clone of the element and inserts it after the element\n     **\n     = (Element) the clone\n    \\*/\n    elproto.clone = function () {\n        var clone = wrap(this.node.cloneNode(true));\n        if ($(clone.node, \"id\")) {\n            $(clone.node, {id: clone.id});\n        }\n        fixids(clone);\n        clone.insertAfter(this);\n        return clone;\n    };\n    /*\\\n     * Element.toDefs\n     [ method ]\n     **\n     * Moves element to the shared `<defs>` area\n     **\n     = (Element) the element\n    \\*/\n    elproto.toDefs = function () {\n        var defs = getSomeDefs(this);\n        defs.appendChild(this.node);\n        return this;\n    };\n    /*\\\n     * Element.toPattern\n     [ method ]\n     **\n     * Creates a `<pattern>` element from the current element\n     **\n     * To create a pattern you have to specify the pattern rect:\n     - x (string|number)\n     - y (string|number)\n     - width (string|number)\n     - height (string|number)\n     = (Element) the `<pattern>` element\n     * You can use pattern later on as an argument for `fill` attribute:\n     | var p = paper.path(\"M10-5-10,15M15,0,0,15M0-5-20,15\").attr({\n     |         fill: \"none\",\n     |         stroke: \"#bada55\",\n     |         strokeWidth: 5\n     |     }).pattern(0, 0, 10, 10),\n     |     c = paper.circle(200, 200, 100);\n     | c.attr({\n     |     fill: p\n     | });\n    \\*/\n    elproto.pattern = elproto.toPattern = function (x, y, width, height) {\n        var p = make(\"pattern\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        $(p.node, {\n            x: x,\n            y: y,\n            width: width,\n            height: height,\n            patternUnits: \"userSpaceOnUse\",\n            id: p.id,\n            viewBox: [x, y, width, height].join(\" \")\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n// SIERRA Element.marker(): clarify what a reference point is. E.g., helps you offset the object from its edge such as when centering it over a path.\n// SIERRA Element.marker(): I suggest the method should accept default reference point values.  Perhaps centered with (refX = width/2) and (refY = height/2)? Also, couldn't it assume the element's current _width_ and _height_? And please specify what _x_ and _y_ mean: offsets? If so, from where?  Couldn't they also be assigned default values?\n    /*\\\n     * Element.marker\n     [ method ]\n     **\n     * Creates a `<marker>` element from the current element\n     **\n     * To create a marker you have to specify the bounding rect and reference point:\n     - x (number)\n     - y (number)\n     - width (number)\n     - height (number)\n     - refX (number)\n     - refY (number)\n     = (Element) the `<marker>` element\n     * You can specify the marker later as an argument for `marker-start`, `marker-end`, `marker-mid`, and `marker` attributes. The `marker` attribute places the marker at every point along the path, and `marker-mid` places them at every point except the start and end.\n    \\*/\n    // TODO add usage for markers\n    elproto.marker = function (x, y, width, height, refX, refY) {\n        var p = make(\"marker\", getSomeDefs(this));\n        if (x == null) {\n            x = this.getBBox();\n        }\n        if (is(x, \"object\") && \"x\" in x) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            refX = x.refX || x.cx;\n            refY = x.refY || x.cy;\n            x = x.x;\n        }\n        $(p.node, {\n            viewBox: [x, y, width, height].join(\" \"),\n            markerWidth: width,\n            markerHeight: height,\n            orient: \"auto\",\n            refX: refX || 0,\n            refY: refY || 0,\n            id: p.id\n        });\n        p.node.appendChild(this.node);\n        return p;\n    };\n    var eldata = {};\n    /*\\\n     * Element.data\n     [ method ]\n     **\n     * Adds or retrieves given value associated with given key. (Don’t confuse\n     * with `data-` attributes)\n     *\n     * See also @Element.removeData\n     - key (string) key to store data\n     - value (any) #optional value to store\n     = (object) @Element\n     * or, if value is not specified:\n     = (any) value\n     > Usage\n     | for (var i = 0, i < 5, i++) {\n     |     paper.circle(10 + 15 * i, 10, 10)\n     |          .attr({fill: \"#000\"})\n     |          .data(\"i\", i)\n     |          .click(function () {\n     |             alert(this.data(\"i\"));\n     |          });\n     | }\n    \\*/\n    elproto.data = function (key, value) {\n        var data = eldata[this.id] = eldata[this.id] || {};\n        if (arguments.length == 0){\n            eve(\"snap.data.get.\" + this.id, this, data, null);\n            return data;\n        }\n        if (arguments.length == 1) {\n            if (Snap.is(key, \"object\")) {\n                for (var i in key) if (key[has](i)) {\n                    this.data(i, key[i]);\n                }\n                return this;\n            }\n            eve(\"snap.data.get.\" + this.id, this, data[key], key);\n            return data[key];\n        }\n        data[key] = value;\n        eve(\"snap.data.set.\" + this.id, this, value, key);\n        return this;\n    };\n    /*\\\n     * Element.removeData\n     [ method ]\n     **\n     * Removes value associated with an element by given key.\n     * If key is not provided, removes all the data of the element.\n     - key (string) #optional key\n     = (object) @Element\n    \\*/\n    elproto.removeData = function (key) {\n        if (key == null) {\n            eldata[this.id] = {};\n        } else {\n            eldata[this.id] && delete eldata[this.id][key];\n        }\n        return this;\n    };\n    /*\\\n     * Element.outerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element, equivalent to HTML's `outerHTML`.\n     *\n     * See also @Element.innerSVG\n     = (string) SVG code for the element\n    \\*/\n    /*\\\n     * Element.toString\n     [ method ]\n     **\n     * See @Element.outerSVG\n    \\*/\n    elproto.outerSVG = elproto.toString = toString(1);\n    /*\\\n     * Element.innerSVG\n     [ method ]\n     **\n     * Returns SVG code for the element's contents, equivalent to HTML's `innerHTML`\n     = (string) SVG code for the element\n    \\*/\n    elproto.innerSVG = toString();\n    function toString(type) {\n        return function () {\n            var res = type ? \"<\" + this.type : \"\",\n                attr = this.node.attributes,\n                chld = this.node.childNodes;\n            if (type) {\n                for (var i = 0, ii = attr.length; i < ii; i++) {\n                    res += \" \" + attr[i].name + '=\"' +\n                            attr[i].value.replace(/\"/g, '\\\\\"') + '\"';\n                }\n            }\n            if (chld.length) {\n                type && (res += \">\");\n                for (i = 0, ii = chld.length; i < ii; i++) {\n                    if (chld[i].nodeType == 3) {\n                        res += chld[i].nodeValue;\n                    } else if (chld[i].nodeType == 1) {\n                        res += wrap(chld[i]).toString();\n                    }\n                }\n                type && (res += \"</\" + this.type + \">\");\n            } else {\n                type && (res += \"/>\");\n            }\n            return res;\n        };\n    }\n    elproto.toDataURL = function () {\n        if (window && window.btoa) {\n            var bb = this.getBBox(),\n                svg = Snap.format('<svg version=\"1.1\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"{width}\" height=\"{height}\" viewBox=\"{x} {y} {width} {height}\">{contents}</svg>', {\n                x: +bb.x.toFixed(3),\n                y: +bb.y.toFixed(3),\n                width: +bb.width.toFixed(3),\n                height: +bb.height.toFixed(3),\n                contents: this.outerSVG()\n            });\n            return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(svg)));\n        }\n    };\n    /*\\\n     * Fragment.select\n     [ method ]\n     **\n     * See @Element.select\n    \\*/\n    Fragment.prototype.select = elproto.select;\n    /*\\\n     * Fragment.selectAll\n     [ method ]\n     **\n     * See @Element.selectAll\n    \\*/\n    Fragment.prototype.selectAll = elproto.selectAll;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var objectToString = Object.prototype.toString,\n        Str = String,\n        math = Math,\n        E = \"\";\n    function Matrix(a, b, c, d, e, f) {\n        if (b == null && objectToString.call(a) == \"[object SVGMatrix]\") {\n            this.a = a.a;\n            this.b = a.b;\n            this.c = a.c;\n            this.d = a.d;\n            this.e = a.e;\n            this.f = a.f;\n            return;\n        }\n        if (a != null) {\n            this.a = +a;\n            this.b = +b;\n            this.c = +c;\n            this.d = +d;\n            this.e = +e;\n            this.f = +f;\n        } else {\n            this.a = 1;\n            this.b = 0;\n            this.c = 0;\n            this.d = 1;\n            this.e = 0;\n            this.f = 0;\n        }\n    }\n    (function (matrixproto) {\n        /*\\\n         * Matrix.add\n         [ method ]\n         **\n         * Adds the given matrix to existing one\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        matrixproto.add = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.add(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + b * this.c,\n                bNew = a * this.b + b * this.d;\n            this.e += e * this.a + f * this.c;\n            this.f += e * this.b + f * this.d;\n            this.c = c * this.a + d * this.c;\n            this.d = c * this.b + d * this.d;\n\n            this.a = aNew;\n            this.b = bNew;\n            return this;\n        };\n        /*\\\n         * Matrix.multLeft\n         [ method ]\n         **\n         * Multiplies a passed affine transform to the left: M * this.\n         - a (number)\n         - b (number)\n         - c (number)\n         - d (number)\n         - e (number)\n         - f (number)\n         * or\n         - matrix (object) @Matrix\n        \\*/\n        Matrix.prototype.multLeft = function (a, b, c, d, e, f) {\n            if (a && a instanceof Matrix) {\n                return this.multLeft(a.a, a.b, a.c, a.d, a.e, a.f);\n            }\n            var aNew = a * this.a + c * this.b,\n                cNew = a * this.c + c * this.d,\n                eNew = a * this.e + c * this.f + e;\n            this.b = b * this.a + d * this.b;\n            this.d = b * this.c + d * this.d;\n            this.f = b * this.e + d * this.f + f;\n\n            this.a = aNew;\n            this.c = cNew;\n            this.e = eNew;\n            return this;\n        };\n        /*\\\n         * Matrix.invert\n         [ method ]\n         **\n         * Returns an inverted version of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.invert = function () {\n            var me = this,\n                x = me.a * me.d - me.b * me.c;\n            return new Matrix(me.d / x, -me.b / x, -me.c / x, me.a / x, (me.c * me.f - me.d * me.e) / x, (me.b * me.e - me.a * me.f) / x);\n        };\n        /*\\\n         * Matrix.clone\n         [ method ]\n         **\n         * Returns a copy of the matrix\n         = (object) @Matrix\n        \\*/\n        matrixproto.clone = function () {\n            return new Matrix(this.a, this.b, this.c, this.d, this.e, this.f);\n        };\n        /*\\\n         * Matrix.translate\n         [ method ]\n         **\n         * Translate the matrix\n         - x (number) horizontal offset distance\n         - y (number) vertical offset distance\n        \\*/\n        matrixproto.translate = function (x, y) {\n            this.e += x * this.a + y * this.c;\n            this.f += x * this.b + y * this.d;\n            return this;\n        };\n        /*\\\n         * Matrix.scale\n         [ method ]\n         **\n         * Scales the matrix\n         - x (number) amount to be scaled, with `1` resulting in no change\n         - y (number) #optional amount to scale along the vertical axis. (Otherwise `x` applies to both axes.)\n         - cx (number) #optional horizontal origin point from which to scale\n         - cy (number) #optional vertical origin point from which to scale\n         * Default cx, cy is the middle point of the element.\n        \\*/\n        matrixproto.scale = function (x, y, cx, cy) {\n            y == null && (y = x);\n            (cx || cy) && this.translate(cx, cy);\n            this.a *= x;\n            this.b *= x;\n            this.c *= y;\n            this.d *= y;\n            (cx || cy) && this.translate(-cx, -cy);\n            return this;\n        };\n        /*\\\n         * Matrix.rotate\n         [ method ]\n         **\n         * Rotates the matrix\n         - a (number) angle of rotation, in degrees\n         - x (number) horizontal origin point from which to rotate\n         - y (number) vertical origin point from which to rotate\n        \\*/\n        matrixproto.rotate = function (a, x, y) {\n            a = Snap.rad(a);\n            x = x || 0;\n            y = y || 0;\n            var cos = +math.cos(a).toFixed(9),\n                sin = +math.sin(a).toFixed(9);\n            this.add(cos, sin, -sin, cos, x, y);\n            return this.add(1, 0, 0, 1, -x, -y);\n        };\n        /*\\\n         * Matrix.skewX\n         [ method ]\n         **\n         * Skews the matrix along the x-axis\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skewX = function (x) {\n            return this.skew(x, 0);\n        };\n        /*\\\n         * Matrix.skewY\n         [ method ]\n         **\n         * Skews the matrix along the y-axis\n         - y (number) Angle to skew along the y-axis (in degrees).\n        \\*/\n        matrixproto.skewY = function (y) {\n            return this.skew(0, y);\n        };\n        /*\\\n         * Matrix.skew\n         [ method ]\n         **\n         * Skews the matrix\n         - y (number) Angle to skew along the y-axis (in degrees).\n         - x (number) Angle to skew along the x-axis (in degrees).\n        \\*/\n        matrixproto.skew = function (x, y) {\n            x = x || 0;\n            y = y || 0;\n            x = Snap.rad(x);\n            y = Snap.rad(y);\n            var c = math.tan(x).toFixed(9);\n            var b = math.tan(y).toFixed(9);\n            return this.add(1, b, c, 1, 0, 0);\n        };\n        /*\\\n         * Matrix.x\n         [ method ]\n         **\n         * Returns x coordinate for given point after transformation described by the matrix. See also @Matrix.y\n         - x (number)\n         - y (number)\n         = (number) x\n        \\*/\n        matrixproto.x = function (x, y) {\n            return x * this.a + y * this.c + this.e;\n        };\n        /*\\\n         * Matrix.y\n         [ method ]\n         **\n         * Returns y coordinate for given point after transformation described by the matrix. See also @Matrix.x\n         - x (number)\n         - y (number)\n         = (number) y\n        \\*/\n        matrixproto.y = function (x, y) {\n            return x * this.b + y * this.d + this.f;\n        };\n        matrixproto.get = function (i) {\n            return +this[Str.fromCharCode(97 + i)].toFixed(4);\n        };\n        matrixproto.toString = function () {\n            return \"matrix(\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)].join() + \")\";\n        };\n        matrixproto.offset = function () {\n            return [this.e.toFixed(4), this.f.toFixed(4)];\n        };\n        function norm(a) {\n            return a[0] * a[0] + a[1] * a[1];\n        }\n        function normalize(a) {\n            var mag = math.sqrt(norm(a));\n            a[0] && (a[0] /= mag);\n            a[1] && (a[1] /= mag);\n        }\n        /*\\\n         * Matrix.determinant\n         [ method ]\n         **\n         * Finds determinant of the given matrix.\n         = (number) determinant\n        \\*/\n        matrixproto.determinant = function () {\n            return this.a * this.d - this.b * this.c;\n        };\n        /*\\\n         * Matrix.split\n         [ method ]\n         **\n         * Splits matrix into primitive transformations\n         = (object) in format:\n         o dx (number) translation by x\n         o dy (number) translation by y\n         o scalex (number) scale by x\n         o scaley (number) scale by y\n         o shear (number) shear\n         o rotate (number) rotation in deg\n         o isSimple (boolean) could it be represented via simple transformations\n        \\*/\n        matrixproto.split = function () {\n            var out = {};\n            // translation\n            out.dx = this.e;\n            out.dy = this.f;\n\n            // scale and shear\n            var row = [[this.a, this.b], [this.c, this.d]];\n            out.scalex = math.sqrt(norm(row[0]));\n            normalize(row[0]);\n\n            out.shear = row[0][0] * row[1][0] + row[0][1] * row[1][1];\n            row[1] = [row[1][0] - row[0][0] * out.shear, row[1][1] - row[0][1] * out.shear];\n\n            out.scaley = math.sqrt(norm(row[1]));\n            normalize(row[1]);\n            out.shear /= out.scaley;\n\n            if (this.determinant() < 0) {\n                out.scalex = -out.scalex;\n            }\n\n            // rotation\n            var sin = row[0][1],\n                cos = row[1][1];\n            if (cos < 0) {\n                out.rotate = Snap.deg(math.acos(cos));\n                if (sin < 0) {\n                    out.rotate = 360 - out.rotate;\n                }\n            } else {\n                out.rotate = Snap.deg(math.asin(sin));\n            }\n\n            out.isSimple = !+out.shear.toFixed(9) && (out.scalex.toFixed(9) == out.scaley.toFixed(9) || !out.rotate);\n            out.isSuperSimple = !+out.shear.toFixed(9) && out.scalex.toFixed(9) == out.scaley.toFixed(9) && !out.rotate;\n            out.noRotation = !+out.shear.toFixed(9) && !out.rotate;\n            return out;\n        };\n        /*\\\n         * Matrix.toTransformString\n         [ method ]\n         **\n         * Returns transform string that represents given matrix\n         = (string) transform string\n        \\*/\n        matrixproto.toTransformString = function (shorter) {\n            var s = shorter || this.split();\n            if (!+s.shear.toFixed(9)) {\n                s.scalex = +s.scalex.toFixed(4);\n                s.scaley = +s.scaley.toFixed(4);\n                s.rotate = +s.rotate.toFixed(4);\n                return  (s.dx || s.dy ? \"t\" + [+s.dx.toFixed(4), +s.dy.toFixed(4)] : E) +\n                        (s.rotate ? \"r\" + [+s.rotate.toFixed(4), 0, 0] : E) +\n                        (s.scalex != 1 || s.scaley != 1 ? \"s\" + [s.scalex, s.scaley, 0, 0] : E);\n            } else {\n                return \"m\" + [this.get(0), this.get(1), this.get(2), this.get(3), this.get(4), this.get(5)];\n            }\n        };\n    })(Matrix.prototype);\n    /*\\\n     * Snap.Matrix\n     [ method ]\n     **\n     * Matrix constructor, extend on your own risk.\n     * To create matrices use @Snap.matrix.\n    \\*/\n    Snap.Matrix = Matrix;\n    /*\\\n     * Snap.matrix\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns a matrix based on the given parameters\n     - a (number)\n     - b (number)\n     - c (number)\n     - d (number)\n     - e (number)\n     - f (number)\n     * or\n     - svgMatrix (SVGMatrix)\n     = (object) @Matrix\n    \\*/\n    Snap.matrix = function (a, b, c, d, e, f) {\n        return new Matrix(a, b, c, d, e, f);\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var has = \"hasOwnProperty\",\n        make = Snap._.make,\n        wrap = Snap._.wrap,\n        is = Snap.is,\n        getSomeDefs = Snap._.getSomeDefs,\n        reURLValue = /^url\\((['\"]?)([^)]+)\\1\\)$/,\n        $ = Snap._.$,\n        URL = Snap.url,\n        Str = String,\n        separator = Snap._.separator,\n        E = \"\";\n    /*\\\n     * Snap.deurl\n     [ method ]\n     **\n     * Unwraps path from `\"url(<path>)\"`.\n     - value (string) url path\n     = (string) unwrapped path\n    \\*/\n    Snap.deurl = function (value) {\n        var res = String(value).match(reURLValue);\n        return res ? res[2] : value;\n    }\n    // Attributes event handlers\n    eve.on(\"snap.util.attr.mask\", function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value.type == \"mask\") {\n                var mask = value;\n            } else {\n                mask = make(\"mask\", getSomeDefs(this));\n                mask.node.appendChild(value.node);\n            }\n            !mask.node.id && $(mask.node, {\n                id: mask.id\n            });\n            $(this.node, {\n                mask: URL(mask.id)\n            });\n        }\n    });\n    (function (clipIt) {\n        eve.on(\"snap.util.attr.clip\", clipIt);\n        eve.on(\"snap.util.attr.clip-path\", clipIt);\n        eve.on(\"snap.util.attr.clipPath\", clipIt);\n    }(function (value) {\n        if (value instanceof Element || value instanceof Fragment) {\n            eve.stop();\n            var clip,\n                node = value.node;\n            while (node) {\n                if (node.nodeName === \"clipPath\") {\n                    clip = new Element(node);\n                    break;\n                }\n                if (node.nodeName === \"svg\") {\n                    clip = undefined;\n                    break;\n                }\n                node = node.parentNode;\n            }\n            if (!clip) {\n                clip = make(\"clipPath\", getSomeDefs(this));\n                clip.node.appendChild(value.node);\n                !clip.node.id && $(clip.node, {\n                    id: clip.id\n                });\n            }\n            $(this.node, {\n                \"clip-path\": URL(clip.node.id || clip.id)\n            });\n        }\n    }));\n    function fillStroke(name) {\n        return function (value) {\n            eve.stop();\n            if (value instanceof Fragment && value.node.childNodes.length == 1 &&\n                (value.node.firstChild.tagName == \"radialGradient\" ||\n                value.node.firstChild.tagName == \"linearGradient\" ||\n                value.node.firstChild.tagName == \"pattern\")) {\n                value = value.node.firstChild;\n                getSomeDefs(this).appendChild(value);\n                value = wrap(value);\n            }\n            if (value instanceof Element) {\n                if (value.type == \"radialGradient\" || value.type == \"linearGradient\"\n                   || value.type == \"pattern\") {\n                    if (!value.node.id) {\n                        $(value.node, {\n                            id: value.id\n                        });\n                    }\n                    var fill = URL(value.node.id);\n                } else {\n                    fill = value.attr(name);\n                }\n            } else {\n                fill = Snap.color(value);\n                if (fill.error) {\n                    var grad = Snap(getSomeDefs(this).ownerSVGElement).gradient(value);\n                    if (grad) {\n                        if (!grad.node.id) {\n                            $(grad.node, {\n                                id: grad.id\n                            });\n                        }\n                        fill = URL(grad.node.id);\n                    } else {\n                        fill = value;\n                    }\n                } else {\n                    fill = Str(fill);\n                }\n            }\n            var attrs = {};\n            attrs[name] = fill;\n            $(this.node, attrs);\n            this.node.style[name] = E;\n        };\n    }\n    eve.on(\"snap.util.attr.fill\", fillStroke(\"fill\"));\n    eve.on(\"snap.util.attr.stroke\", fillStroke(\"stroke\"));\n    var gradrg = /^([lr])(?:\\(([^)]*)\\))?(.*)$/i;\n    eve.on(\"snap.util.grad.parse\", function parseGrad(string) {\n        string = Str(string);\n        var tokens = string.match(gradrg);\n        if (!tokens) {\n            return null;\n        }\n        var type = tokens[1],\n            params = tokens[2],\n            stops = tokens[3];\n        params = params.split(/\\s*,\\s*/).map(function (el) {\n            return +el == el ? +el : el;\n        });\n        if (params.length == 1 && params[0] == 0) {\n            params = [];\n        }\n        stops = stops.split(\"-\");\n        stops = stops.map(function (el) {\n            el = el.split(\":\");\n            var out = {\n                color: el[0]\n            };\n            if (el[1]) {\n                out.offset = parseFloat(el[1]);\n            }\n            return out;\n        });\n        var len = stops.length,\n            start = 0,\n            j = 0;\n        function seed(i, end) {\n            var step = (end - start) / (i - j);\n            for (var k = j; k < i; k++) {\n                stops[k].offset = +(+start + step * (k - j)).toFixed(2);\n            }\n            j = i;\n            start = end;\n        }\n        len--;\n        for (var i = 0; i < len; i++) if (\"offset\" in stops[i]) {\n            seed(i, stops[i].offset);\n        }\n        stops[len].offset = stops[len].offset || 100;\n        seed(len, stops[len].offset);\n        return {\n            type: type,\n            params: params,\n            stops: stops\n        };\n    });\n\n    eve.on(\"snap.util.attr.d\", function (value) {\n        eve.stop();\n        if (is(value, \"array\") && is(value[0], \"array\")) {\n            value = Snap.path.toString.call(value);\n        }\n        value = Str(value);\n        if (value.match(/[ruo]/i)) {\n            value = Snap.path.toAbsolute(value);\n        }\n        $(this.node, {d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.#text\", function (value) {\n        eve.stop();\n        value = Str(value);\n        var txt = glob.doc.createTextNode(value);\n        while (this.node.firstChild) {\n            this.node.removeChild(this.node.firstChild);\n        }\n        this.node.appendChild(txt);\n    })(-1);\n    eve.on(\"snap.util.attr.path\", function (value) {\n        eve.stop();\n        this.attr({d: value});\n    })(-1);\n    eve.on(\"snap.util.attr.class\", function (value) {\n        eve.stop();\n        this.node.className.baseVal = value;\n    })(-1);\n    eve.on(\"snap.util.attr.viewBox\", function (value) {\n        var vb;\n        if (is(value, \"object\") && \"x\" in value) {\n            vb = [value.x, value.y, value.width, value.height].join(\" \");\n        } else if (is(value, \"array\")) {\n            vb = value.join(\" \");\n        } else {\n            vb = value;\n        }\n        $(this.node, {\n            viewBox: vb\n        });\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.transform\", function (value) {\n        this.transform(value);\n        eve.stop();\n    })(-1);\n    eve.on(\"snap.util.attr.r\", function (value) {\n        if (this.type == \"rect\") {\n            eve.stop();\n            $(this.node, {\n                rx: value,\n                ry: value\n            });\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.textpath\", function (value) {\n        eve.stop();\n        if (this.type == \"text\") {\n            var id, tp, node;\n            if (!value && this.textPath) {\n                tp = this.textPath;\n                while (tp.node.firstChild) {\n                    this.node.appendChild(tp.node.firstChild);\n                }\n                tp.remove();\n                delete this.textPath;\n                return;\n            }\n            if (is(value, \"string\")) {\n                var defs = getSomeDefs(this),\n                    path = wrap(defs.parentNode).path(value);\n                defs.appendChild(path.node);\n                id = path.id;\n                path.attr({id: id});\n            } else {\n                value = wrap(value);\n                if (value instanceof Element) {\n                    id = value.attr(\"id\");\n                    if (!id) {\n                        id = value.id;\n                        value.attr({id: id});\n                    }\n                }\n            }\n            if (id) {\n                tp = this.textPath;\n                node = this.node;\n                if (tp) {\n                    tp.attr({\"xlink:href\": \"#\" + id});\n                } else {\n                    tp = $(\"textPath\", {\n                        \"xlink:href\": \"#\" + id\n                    });\n                    while (node.firstChild) {\n                        tp.appendChild(node.firstChild);\n                    }\n                    node.appendChild(tp);\n                    this.textPath = wrap(tp);\n                }\n            }\n        }\n    })(-1);\n    eve.on(\"snap.util.attr.text\", function (value) {\n        if (this.type == \"text\") {\n            var i = 0,\n                node = this.node,\n                tuner = function (chunk) {\n                    var out = $(\"tspan\");\n                    if (is(chunk, \"array\")) {\n                        for (var i = 0; i < chunk.length; i++) {\n                            out.appendChild(tuner(chunk[i]));\n                        }\n                    } else {\n                        out.appendChild(glob.doc.createTextNode(chunk));\n                    }\n                    out.normalize && out.normalize();\n                    return out;\n                };\n            while (node.firstChild) {\n                node.removeChild(node.firstChild);\n            }\n            var tuned = tuner(value);\n            while (tuned.firstChild) {\n                node.appendChild(tuned.firstChild);\n            }\n        }\n        eve.stop();\n    })(-1);\n    function setFontSize(value) {\n        eve.stop();\n        if (value == +value) {\n            value += \"px\";\n        }\n        this.node.style.fontSize = value;\n    }\n    eve.on(\"snap.util.attr.fontSize\", setFontSize)(-1);\n    eve.on(\"snap.util.attr.font-size\", setFontSize)(-1);\n\n\n    eve.on(\"snap.util.getattr.transform\", function () {\n        eve.stop();\n        return this.transform();\n    })(-1);\n    eve.on(\"snap.util.getattr.textpath\", function () {\n        eve.stop();\n        return this.textPath;\n    })(-1);\n    // Markers\n    (function () {\n        function getter(end) {\n            return function () {\n                eve.stop();\n                var style = glob.doc.defaultView.getComputedStyle(this.node, null).getPropertyValue(\"marker-\" + end);\n                if (style == \"none\") {\n                    return style;\n                } else {\n                    return Snap(glob.doc.getElementById(style.match(reURLValue)[1]));\n                }\n            };\n        }\n        function setter(end) {\n            return function (value) {\n                eve.stop();\n                var name = \"marker\" + end.charAt(0).toUpperCase() + end.substring(1);\n                if (value == \"\" || !value) {\n                    this.node.style[name] = \"none\";\n                    return;\n                }\n                if (value.type == \"marker\") {\n                    var id = value.node.id;\n                    if (!id) {\n                        $(value.node, {id: value.id});\n                    }\n                    this.node.style[name] = URL(id);\n                    return;\n                }\n            };\n        }\n        eve.on(\"snap.util.getattr.marker-end\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.markerEnd\", getter(\"end\"))(-1);\n        eve.on(\"snap.util.getattr.marker-start\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.markerStart\", getter(\"start\"))(-1);\n        eve.on(\"snap.util.getattr.marker-mid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.getattr.markerMid\", getter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.marker-end\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.markerEnd\", setter(\"end\"))(-1);\n        eve.on(\"snap.util.attr.marker-start\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.markerStart\", setter(\"start\"))(-1);\n        eve.on(\"snap.util.attr.marker-mid\", setter(\"mid\"))(-1);\n        eve.on(\"snap.util.attr.markerMid\", setter(\"mid\"))(-1);\n    }());\n    eve.on(\"snap.util.getattr.r\", function () {\n        if (this.type == \"rect\" && $(this.node, \"rx\") == $(this.node, \"ry\")) {\n            eve.stop();\n            return $(this.node, \"rx\");\n        }\n    })(-1);\n    function textExtract(node) {\n        var out = [];\n        var children = node.childNodes;\n        for (var i = 0, ii = children.length; i < ii; i++) {\n            var chi = children[i];\n            if (chi.nodeType == 3) {\n                out.push(chi.nodeValue);\n            }\n            if (chi.tagName == \"tspan\") {\n                if (chi.childNodes.length == 1 && chi.firstChild.nodeType == 3) {\n                    out.push(chi.firstChild.nodeValue);\n                } else {\n                    out.push(textExtract(chi));\n                }\n            }\n        }\n        return out;\n    }\n    eve.on(\"snap.util.getattr.text\", function () {\n        if (this.type == \"text\" || this.type == \"tspan\") {\n            eve.stop();\n            var out = textExtract(this.node);\n            return out.length == 1 ? out[0] : out;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.#text\", function () {\n        return this.node.textContent;\n    })(-1);\n    eve.on(\"snap.util.getattr.fill\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.fill\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.stroke\", function (internal) {\n        if (internal) {\n            return;\n        }\n        eve.stop();\n        var value = eve(\"snap.util.getattr.stroke\", this, true).firstDefined();\n        return Snap(Snap.deurl(value)) || value;\n    })(-1);\n    eve.on(\"snap.util.getattr.viewBox\", function () {\n        eve.stop();\n        var vb = $(this.node, \"viewBox\");\n        if (vb) {\n            vb = vb.split(separator);\n            return Snap._.box(+vb[0], +vb[1], +vb[2], +vb[3]);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.points\", function () {\n        var p = $(this.node, \"points\");\n        eve.stop();\n        if (p) {\n            return p.split(separator);\n        } else {\n            return;\n        }\n    })(-1);\n    eve.on(\"snap.util.getattr.path\", function () {\n        var p = $(this.node, \"d\");\n        eve.stop();\n        return p;\n    })(-1);\n    eve.on(\"snap.util.getattr.class\", function () {\n        return this.node.className.baseVal;\n    })(-1);\n    function getFontSize() {\n        eve.stop();\n        return this.node.style.fontSize;\n    }\n    eve.on(\"snap.util.getattr.fontSize\", getFontSize)(-1);\n    eve.on(\"snap.util.getattr.font-size\", getFontSize)(-1);\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var rgNotSpace = /\\S+/g,\n        rgBadSpace = /[\\t\\r\\n\\f]/g,\n        rgTrim = /(^\\s+|\\s+$)/g,\n        Str = String,\n        elproto = Element.prototype;\n    /*\\\n     * Element.addClass\n     [ method ]\n     **\n     * Adds given class name or list of class names to the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.addClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n\n        if (classes.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (!~pos) {\n                    curClasses.push(clazz);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.removeClass\n     [ method ]\n     **\n     * Removes given class name or list of class names from the element.\n     - value (string) class name or space separated list of class names\n     **\n     = (Element) original element.\n    \\*/\n    elproto.removeClass = function (value) {\n        var classes = Str(value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        if (curClasses.length) {\n            j = 0;\n            while (clazz = classes[j++]) {\n                pos = curClasses.indexOf(clazz);\n                if (~pos) {\n                    curClasses.splice(pos, 1);\n                }\n            }\n\n            finalValue = curClasses.join(\" \");\n            if (className != finalValue) {\n                elem.className.baseVal = finalValue;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Element.hasClass\n     [ method ]\n     **\n     * Checks if the element has a given class name in the list of class names applied to it.\n     - value (string) class name\n     **\n     = (boolean) `true` if the element has given class\n    \\*/\n    elproto.hasClass = function (value) {\n        var elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [];\n        return !!~curClasses.indexOf(value);\n    };\n    /*\\\n     * Element.toggleClass\n     [ method ]\n     **\n     * Add or remove one or more classes from the element, depending on either\n     * the class’s presence or the value of the `flag` argument.\n     - value (string) class name or space separated list of class names\n     - flag (boolean) value to determine whether the class should be added or removed\n     **\n     = (Element) original element.\n    \\*/\n    elproto.toggleClass = function (value, flag) {\n        if (flag != null) {\n            if (flag) {\n                return this.addClass(value);\n            } else {\n                return this.removeClass(value);\n            }\n        }\n        var classes = (value || \"\").match(rgNotSpace) || [],\n            elem = this.node,\n            className = elem.className.baseVal,\n            curClasses = className.match(rgNotSpace) || [],\n            j,\n            pos,\n            clazz,\n            finalValue;\n        j = 0;\n        while (clazz = classes[j++]) {\n            pos = curClasses.indexOf(clazz);\n            if (~pos) {\n                curClasses.splice(pos, 1);\n            } else {\n                curClasses.push(clazz);\n            }\n        }\n\n        finalValue = curClasses.join(\" \");\n        if (className != finalValue) {\n            elem.className.baseVal = finalValue;\n        }\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var operators = {\n            \"+\": function (x, y) {\n                    return x + y;\n                },\n            \"-\": function (x, y) {\n                    return x - y;\n                },\n            \"/\": function (x, y) {\n                    return x / y;\n                },\n            \"*\": function (x, y) {\n                    return x * y;\n                }\n        },\n        Str = String,\n        reUnit = /[a-z]+$/i,\n        reAddon = /^\\s*([+\\-\\/*])\\s*=\\s*([\\d.eE+\\-]+)\\s*([^\\d\\s]+)?\\s*$/;\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    eve.on(\"snap.util.attr\", function (val) {\n        var plus = Str(val).match(reAddon);\n        if (plus) {\n            var evnt = eve.nt(),\n                name = evnt.substring(evnt.lastIndexOf(\".\") + 1),\n                a = this.attr(name),\n                atr = {};\n            eve.stop();\n            var unit = plus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[plus[1]];\n            if (aUnit && aUnit == unit) {\n                val = op(parseFloat(a), +plus[2]);\n            } else {\n                a = this.asPX(name);\n                val = op(this.asPX(name), this.asPX(name, plus[2] + unit));\n            }\n            if (isNaN(a) || isNaN(val)) {\n                return;\n            }\n            atr[name] = val;\n            this.attr(atr);\n        }\n    })(-10);\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this,\n            bplus = Str(b).match(reAddon);\n        if (bplus) {\n            eve.stop();\n            var unit = bplus[3] || \"\",\n                aUnit = a.match(reUnit),\n                op = operators[bplus[1]];\n            if (aUnit && aUnit == unit) {\n                return {\n                    from: parseFloat(a),\n                    to: op(parseFloat(a), +bplus[2]),\n                    f: getUnit(aUnit)\n                };\n            } else {\n                a = this.asPX(name);\n                return {\n                    from: a,\n                    to: op(a, this.asPX(name, bplus[2] + unit)),\n                    f: getNumber\n                };\n            }\n        }\n    })(-10);\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var proto = Paper.prototype,\n        is = Snap.is;\n    /*\\\n     * Paper.rect\n     [ method ]\n     *\n     * Draws a rectangle\n     **\n     - x (number) x coordinate of the top left corner\n     - y (number) y coordinate of the top left corner\n     - width (number) width\n     - height (number) height\n     - rx (number) #optional horizontal radius for rounded corners, default is 0\n     - ry (number) #optional vertical radius for rounded corners, default is rx or 0\n     = (object) the `rect` element\n     **\n     > Usage\n     | // regular rectangle\n     | var c = paper.rect(10, 10, 50, 50);\n     | // rectangle with rounded corners\n     | var c = paper.rect(40, 40, 50, 50, 10);\n    \\*/\n    proto.rect = function (x, y, w, h, rx, ry) {\n        var attr;\n        if (ry == null) {\n            ry = rx;\n        }\n        if (is(x, \"object\") && x == \"[object Object]\") {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                width: w,\n                height: h\n            };\n            if (rx != null) {\n                attr.rx = rx;\n                attr.ry = ry;\n            }\n        }\n        return this.el(\"rect\", attr);\n    };\n    /*\\\n     * Paper.circle\n     [ method ]\n     **\n     * Draws a circle\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - r (number) radius\n     = (object) the `circle` element\n     **\n     > Usage\n     | var c = paper.circle(50, 50, 40);\n    \\*/\n    proto.circle = function (cx, cy, r) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr = {\n                cx: cx,\n                cy: cy,\n                r: r\n            };\n        }\n        return this.el(\"circle\", attr);\n    };\n\n    var preload = (function () {\n        function onerror() {\n            this.parentNode.removeChild(this);\n        }\n        return function (src, f) {\n            var img = glob.doc.createElement(\"img\"),\n                body = glob.doc.body;\n            img.style.cssText = \"position:absolute;left:-9999em;top:-9999em\";\n            img.onload = function () {\n                f.call(img);\n                img.onload = img.onerror = null;\n                body.removeChild(img);\n            };\n            img.onerror = onerror;\n            body.appendChild(img);\n            img.src = src;\n        };\n    }());\n\n    /*\\\n     * Paper.image\n     [ method ]\n     **\n     * Places an image on the surface\n     **\n     - src (string) URI of the source image\n     - x (number) x offset position\n     - y (number) y offset position\n     - width (number) width of the image\n     - height (number) height of the image\n     = (object) the `image` element\n     * or\n     = (object) Snap element object with type `image`\n     **\n     > Usage\n     | var c = paper.image(\"apple.png\", 10, 10, 80, 80);\n    \\*/\n    proto.image = function (src, x, y, width, height) {\n        var el = this.el(\"image\");\n        if (is(src, \"object\") && \"src\" in src) {\n            el.attr(src);\n        } else if (src != null) {\n            var set = {\n                \"xlink:href\": src,\n                preserveAspectRatio: \"none\"\n            };\n            if (x != null && y != null) {\n                set.x = x;\n                set.y = y;\n            }\n            if (width != null && height != null) {\n                set.width = width;\n                set.height = height;\n            } else {\n                preload(src, function () {\n                    Snap._.$(el.node, {\n                        width: this.offsetWidth,\n                        height: this.offsetHeight\n                    });\n                });\n            }\n            Snap._.$(el.node, set);\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ellipse\n     [ method ]\n     **\n     * Draws an ellipse\n     **\n     - x (number) x coordinate of the centre\n     - y (number) y coordinate of the centre\n     - rx (number) horizontal radius\n     - ry (number) vertical radius\n     = (object) the `ellipse` element\n     **\n     > Usage\n     | var c = paper.ellipse(50, 50, 40, 20);\n    \\*/\n    proto.ellipse = function (cx, cy, rx, ry) {\n        var attr;\n        if (is(cx, \"object\") && cx == \"[object Object]\") {\n            attr = cx;\n        } else if (cx != null) {\n            attr ={\n                cx: cx,\n                cy: cy,\n                rx: rx,\n                ry: ry\n            };\n        }\n        return this.el(\"ellipse\", attr);\n    };\n    // SIERRA Paper.path(): Unclear from the link what a Catmull-Rom curveto is, and why it would make life any easier.\n    /*\\\n     * Paper.path\n     [ method ]\n     **\n     * Creates a `<path>` element using the given string as the path's definition\n     - pathString (string) #optional path string in SVG format\n     * Path string consists of one-letter commands, followed by comma seprarated arguments in numerical form. Example:\n     | \"M10,20L30,40\"\n     * This example features two commands: `M`, with arguments `(10, 20)` and `L` with arguments `(30, 40)`. Uppercase letter commands express coordinates in absolute terms, while lowercase commands express them in relative terms from the most recently declared coordinates.\n     *\n     # <p>Here is short list of commands available, for more details see <a href=\"http://www.w3.org/TR/SVG/paths.html#PathData\" title=\"Details of a path's data attribute's format are described in the SVG specification.\">SVG path string format</a> or <a href=\"https://developer.mozilla.org/en/SVG/Tutorial/Paths\">article about path strings at MDN</a>.</p>\n     # <table><thead><tr><th>Command</th><th>Name</th><th>Parameters</th></tr></thead><tbody>\n     # <tr><td>M</td><td>moveto</td><td>(x y)+</td></tr>\n     # <tr><td>Z</td><td>closepath</td><td>(none)</td></tr>\n     # <tr><td>L</td><td>lineto</td><td>(x y)+</td></tr>\n     # <tr><td>H</td><td>horizontal lineto</td><td>x+</td></tr>\n     # <tr><td>V</td><td>vertical lineto</td><td>y+</td></tr>\n     # <tr><td>C</td><td>curveto</td><td>(x1 y1 x2 y2 x y)+</td></tr>\n     # <tr><td>S</td><td>smooth curveto</td><td>(x2 y2 x y)+</td></tr>\n     # <tr><td>Q</td><td>quadratic Bézier curveto</td><td>(x1 y1 x y)+</td></tr>\n     # <tr><td>T</td><td>smooth quadratic Bézier curveto</td><td>(x y)+</td></tr>\n     # <tr><td>A</td><td>elliptical arc</td><td>(rx ry x-axis-rotation large-arc-flag sweep-flag x y)+</td></tr>\n     # <tr><td>R</td><td><a href=\"http://en.wikipedia.org/wiki/Catmull–Rom_spline#Catmull.E2.80.93Rom_spline\">Catmull-Rom curveto</a>*</td><td>x1 y1 (x y)+</td></tr></tbody></table>\n     * * _Catmull-Rom curveto_ is a not standard SVG command and added to make life easier.\n     * Note: there is a special case when a path consists of only three commands: `M10,10R…z`. In this case the path connects back to its starting point.\n     > Usage\n     | var c = paper.path(\"M10 10L90 90\");\n     | // draw a diagonal line:\n     | // move to 10,10, line to 90,90\n    \\*/\n    proto.path = function (d) {\n        var attr;\n        if (is(d, \"object\") && !is(d, \"array\")) {\n            attr = d;\n        } else if (d) {\n            attr = {d: d};\n        }\n        return this.el(\"path\", attr);\n    };\n    /*\\\n     * Paper.g\n     [ method ]\n     **\n     * Creates a group element\n     **\n     - varargs (…) #optional elements to nest within the group\n     = (object) the `g` element\n     **\n     > Usage\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g(c2, c1); // note that the order of elements is different\n     * or\n     | var c1 = paper.circle(),\n     |     c2 = paper.rect(),\n     |     g = paper.g();\n     | g.add(c2, c1);\n    \\*/\n    /*\\\n     * Paper.group\n     [ method ]\n     **\n     * See @Paper.g\n    \\*/\n    proto.group = proto.g = function (first) {\n        var attr,\n            el = this.el(\"g\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.svg\n     [ method ]\n     **\n     * Creates a nested SVG element.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `svg` element\n     **\n    \\*/\n    proto.svg = function (x, y, width, height, vbx, vby, vbw, vbh) {\n        var attrs = {};\n        if (is(x, \"object\") && y == null) {\n            attrs = x;\n        } else {\n            if (x != null) {\n                attrs.x = x;\n            }\n            if (y != null) {\n                attrs.y = y;\n            }\n            if (width != null) {\n                attrs.width = width;\n            }\n            if (height != null) {\n                attrs.height = height;\n            }\n            if (vbx != null && vby != null && vbw != null && vbh != null) {\n                attrs.viewBox = [vbx, vby, vbw, vbh];\n            }\n        }\n        return this.el(\"svg\", attrs);\n    };\n    /*\\\n     * Paper.mask\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a mask.\n     **\n     = (object) the `mask` element\n     **\n    \\*/\n    proto.mask = function (first) {\n        var attr,\n            el = this.el(\"mask\");\n        if (arguments.length == 1 && first && !first.type) {\n            el.attr(first);\n        } else if (arguments.length) {\n            el.add(Array.prototype.slice.call(arguments, 0));\n        }\n        return el;\n    };\n    /*\\\n     * Paper.ptrn\n     [ method ]\n     **\n     * Equivalent in behaviour to @Paper.g, except it’s a pattern.\n     - x (number) @optional X of the element\n     - y (number) @optional Y of the element\n     - width (number) @optional width of the element\n     - height (number) @optional height of the element\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     **\n     = (object) the `pattern` element\n     **\n    \\*/\n    proto.ptrn = function (x, y, width, height, vx, vy, vw, vh) {\n        if (is(x, \"object\")) {\n            var attr = x;\n        } else {\n            attr = {patternUnits: \"userSpaceOnUse\"};\n            if (x) {\n                attr.x = x;\n            }\n            if (y) {\n                attr.y = y;\n            }\n            if (width != null) {\n                attr.width = width;\n            }\n            if (height != null) {\n                attr.height = height;\n            }\n            if (vx != null && vy != null && vw != null && vh != null) {\n                attr.viewBox = [vx, vy, vw, vh];\n            } else {\n                attr.viewBox = [x || 0, y || 0, width || 0, height || 0];\n            }\n        }\n        return this.el(\"pattern\", attr);\n    };\n    /*\\\n     * Paper.use\n     [ method ]\n     **\n     * Creates a <use> element.\n     - id (string) @optional id of element to link\n     * or\n     - id (Element) @optional element to link\n     **\n     = (object) the `use` element\n     **\n    \\*/\n    proto.use = function (id) {\n        if (id != null) {\n            if (id instanceof Element) {\n                if (!id.attr(\"id\")) {\n                    id.attr({id: Snap._.id(id)});\n                }\n                id = id.attr(\"id\");\n            }\n            if (String(id).charAt() == \"#\") {\n                id = id.substring(1);\n            }\n            return this.el(\"use\", {\"xlink:href\": \"#\" + id});\n        } else {\n            return Element.prototype.use.call(this);\n        }\n    };\n    /*\\\n     * Paper.symbol\n     [ method ]\n     **\n     * Creates a <symbol> element.\n     - vbx (number) @optional viewbox X\n     - vby (number) @optional viewbox Y\n     - vbw (number) @optional viewbox width\n     - vbh (number) @optional viewbox height\n     = (object) the `symbol` element\n     **\n    \\*/\n    proto.symbol = function (vx, vy, vw, vh) {\n        var attr = {};\n        if (vx != null && vy != null && vw != null && vh != null) {\n            attr.viewBox = [vx, vy, vw, vh];\n        }\n\n        return this.el(\"symbol\", attr);\n    };\n    /*\\\n     * Paper.text\n     [ method ]\n     **\n     * Draws a text string\n     **\n     - x (number) x coordinate position\n     - y (number) y coordinate position\n     - text (string|array) The text string to draw or array of strings to nest within separate `<tspan>` elements\n     = (object) the `text` element\n     **\n     > Usage\n     | var t1 = paper.text(50, 50, \"Snap\");\n     | var t2 = paper.text(50, 50, [\"S\",\"n\",\"a\",\"p\"]);\n     | // Text path usage\n     | t1.attr({textpath: \"M10,10L100,100\"});\n     | // or\n     | var pth = paper.path(\"M10,10L100,100\");\n     | t1.attr({textpath: pth});\n    \\*/\n    proto.text = function (x, y, text) {\n        var attr = {};\n        if (is(x, \"object\")) {\n            attr = x;\n        } else if (x != null) {\n            attr = {\n                x: x,\n                y: y,\n                text: text || \"\"\n            };\n        }\n        return this.el(\"text\", attr);\n    };\n    /*\\\n     * Paper.line\n     [ method ]\n     **\n     * Draws a line\n     **\n     - x1 (number) x coordinate position of the start\n     - y1 (number) y coordinate position of the start\n     - x2 (number) x coordinate position of the end\n     - y2 (number) y coordinate position of the end\n     = (object) the `line` element\n     **\n     > Usage\n     | var t1 = paper.line(50, 50, 100, 100);\n    \\*/\n    proto.line = function (x1, y1, x2, y2) {\n        var attr = {};\n        if (is(x1, \"object\")) {\n            attr = x1;\n        } else if (x1 != null) {\n            attr = {\n                x1: x1,\n                x2: x2,\n                y1: y1,\n                y2: y2\n            };\n        }\n        return this.el(\"line\", attr);\n    };\n    /*\\\n     * Paper.polyline\n     [ method ]\n     **\n     * Draws a polyline\n     **\n     - points (array) array of points\n     * or\n     - varargs (…) points\n     = (object) the `polyline` element\n     **\n     > Usage\n     | var p1 = paper.polyline([10, 10, 100, 100]);\n     | var p2 = paper.polyline(10, 10, 100, 100);\n    \\*/\n    proto.polyline = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polyline\", attr);\n    };\n    /*\\\n     * Paper.polygon\n     [ method ]\n     **\n     * Draws a polygon. See @Paper.polyline\n    \\*/\n    proto.polygon = function (points) {\n        if (arguments.length > 1) {\n            points = Array.prototype.slice.call(arguments, 0);\n        }\n        var attr = {};\n        if (is(points, \"object\") && !is(points, \"array\")) {\n            attr = points;\n        } else if (points != null) {\n            attr = {points: points};\n        }\n        return this.el(\"polygon\", attr);\n    };\n    // gradients\n    (function () {\n        var $ = Snap._.$;\n        // gradients' helpers\n        /*\\\n         * Element.stops\n         [ method ]\n         **\n         * Only for gradients!\n         * Returns array of gradient stops elements.\n         = (array) the stops array.\n        \\*/\n        function Gstops() {\n            return this.selectAll(\"stop\");\n        }\n        /*\\\n         * Element.addStop\n         [ method ]\n         **\n         * Only for gradients!\n         * Adds another stop to the gradient.\n         - color (string) stops color\n         - offset (number) stops offset 0..100\n         = (object) gradient element\n        \\*/\n        function GaddStop(color, offset) {\n            var stop = $(\"stop\"),\n                attr = {\n                    offset: +offset + \"%\"\n                };\n            color = Snap.color(color);\n            attr[\"stop-color\"] = color.hex;\n            if (color.opacity < 1) {\n                attr[\"stop-opacity\"] = color.opacity;\n            }\n            $(stop, attr);\n            var stops = this.stops(),\n                inserted;\n            for (var i = 0; i < stops.length; i++) {\n                var stopOffset = parseFloat(stops[i].attr(\"offset\"));\n                if (stopOffset > offset) {\n                    this.node.insertBefore(stop, stops[i].node);\n                    inserted = true;\n                    break;\n                }\n            }\n            if (!inserted) {\n                this.node.appendChild(stop);\n            }\n            return this;\n        }\n        function GgetBBox() {\n            if (this.type == \"linearGradient\") {\n                var x1 = $(this.node, \"x1\") || 0,\n                    x2 = $(this.node, \"x2\") || 1,\n                    y1 = $(this.node, \"y1\") || 0,\n                    y2 = $(this.node, \"y2\") || 0;\n                return Snap._.box(x1, y1, math.abs(x2 - x1), math.abs(y2 - y1));\n            } else {\n                var cx = this.node.cx || .5,\n                    cy = this.node.cy || .5,\n                    r = this.node.r || 0;\n                return Snap._.box(cx - r, cy - r, r * 2, r * 2);\n            }\n        }\n        /*\\\n         * Element.setStops\n         [ method ]\n         **\n         * Only for gradients!\n         * Updates stops of the gradient based on passed gradient descriptor. See @Ppaer.gradient\n         - str (string) gradient descriptor part after `()`.\n         = (object) gradient element\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         | g.setStops(\"#fff-#000-#f00-#fc0\");\n        \\*/\n        function GsetStops(str) {\n            var grad = str,\n                stops = this.stops();\n            if (typeof str == \"string\") {\n                grad = eve(\"snap.util.grad.parse\", null, \"l(0,0,0,1)\" + str).firstDefined().stops;\n            }\n            if (!Snap.is(grad, \"array\")) {\n                return;\n            }\n            for (var i = 0; i < stops.length; i++) {\n                if (grad[i]) {\n                    var color = Snap.color(grad[i].color),\n                        attr = {\"offset\": grad[i].offset + \"%\"};\n                    attr[\"stop-color\"] = color.hex;\n                    if (color.opacity < 1) {\n                        attr[\"stop-opacity\"] = color.opacity;\n                    }\n                    stops[i].attr(attr);\n                } else {\n                    stops[i].remove();\n                }\n            }\n            for (i = stops.length; i < grad.length; i++) {\n                this.addStop(grad[i].color, grad[i].offset);\n            }\n            return this;\n        }\n        function gradient(defs, str) {\n            var grad = eve(\"snap.util.grad.parse\", null, str).firstDefined(),\n                el;\n            if (!grad) {\n                return null;\n            }\n            grad.params.unshift(defs);\n            if (grad.type.toLowerCase() == \"l\") {\n                el = gradientLinear.apply(0, grad.params);\n            } else {\n                el = gradientRadial.apply(0, grad.params);\n            }\n            if (grad.type != grad.type.toLowerCase()) {\n                $(el.node, {\n                    gradientUnits: \"userSpaceOnUse\"\n                });\n            }\n            var stops = grad.stops,\n                len = stops.length;\n            for (var i = 0; i < len; i++) {\n                var stop = stops[i];\n                el.addStop(stop.color, stop.offset);\n            }\n            return el;\n        }\n        function gradientLinear(defs, x1, y1, x2, y2) {\n            var el = Snap._.make(\"linearGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            el.setStops = GsetStops;\n            if (x1 != null) {\n                $(el.node, {\n                    x1: x1,\n                    y1: y1,\n                    x2: x2,\n                    y2: y2\n                });\n            }\n            return el;\n        }\n        function gradientRadial(defs, cx, cy, r, fx, fy) {\n            var el = Snap._.make(\"radialGradient\", defs);\n            el.stops = Gstops;\n            el.addStop = GaddStop;\n            el.getBBox = GgetBBox;\n            if (cx != null) {\n                $(el.node, {\n                    cx: cx,\n                    cy: cy,\n                    r: r\n                });\n            }\n            if (fx != null && fy != null) {\n                $(el.node, {\n                    fx: fx,\n                    fy: fy\n                });\n            }\n            return el;\n        }\n        /*\\\n         * Paper.gradient\n         [ method ]\n         **\n         * Creates a gradient element\n         **\n         - gradient (string) gradient descriptor\n         > Gradient Descriptor\n         * The gradient descriptor is an expression formatted as\n         * follows: `<type>(<coords>)<colors>`.  The `<type>` can be\n         * either linear or radial.  The uppercase `L` or `R` letters\n         * indicate absolute coordinates offset from the SVG surface.\n         * Lowercase `l` or `r` letters indicate coordinates\n         * calculated relative to the element to which the gradient is\n         * applied.  Coordinates specify a linear gradient vector as\n         * `x1`, `y1`, `x2`, `y2`, or a radial gradient as `cx`, `cy`,\n         * `r` and optional `fx`, `fy` specifying a focal point away\n         * from the center of the circle. Specify `<colors>` as a list\n         * of dash-separated CSS color values.  Each color may be\n         * followed by a custom offset value, separated with a colon\n         * character.\n         > Examples\n         * Linear gradient, relative from top-left corner to bottom-right\n         * corner, from black through red to white:\n         | var g = paper.gradient(\"l(0, 0, 1, 1)#000-#f00-#fff\");\n         * Linear gradient, absolute from (0, 0) to (100, 100), from black\n         * through red at 25% to white:\n         | var g = paper.gradient(\"L(0, 0, 100, 100)#000-#f00:25-#fff\");\n         * Radial gradient, relative from the center of the element with radius\n         * half the width, from black to white:\n         | var g = paper.gradient(\"r(0.5, 0.5, 0.5)#000-#fff\");\n         * To apply the gradient:\n         | paper.circle(50, 50, 40).attr({\n         |     fill: g\n         | });\n         = (object) the `gradient` element\n        \\*/\n        proto.gradient = function (str) {\n            return gradient(this.defs, str);\n        };\n        proto.gradientLinear = function (x1, y1, x2, y2) {\n            return gradientLinear(this.defs, x1, y1, x2, y2);\n        };\n        proto.gradientRadial = function (cx, cy, r, fx, fy) {\n            return gradientRadial(this.defs, cx, cy, r, fx, fy);\n        };\n        /*\\\n         * Paper.toString\n         [ method ]\n         **\n         * Returns SVG code for the @Paper\n         = (string) SVG code for the @Paper\n        \\*/\n        proto.toString = function () {\n            var doc = this.node.ownerDocument,\n                f = doc.createDocumentFragment(),\n                d = doc.createElement(\"div\"),\n                svg = this.node.cloneNode(true),\n                res;\n            f.appendChild(d);\n            d.appendChild(svg);\n            Snap._.$(svg, {xmlns: \"http://www.w3.org/2000/svg\"});\n            res = d.innerHTML;\n            f.removeChild(f.firstChild);\n            return res;\n        };\n        /*\\\n         * Paper.toDataURL\n         [ method ]\n         **\n         * Returns SVG code for the @Paper as Data URI string.\n         = (string) Data URI string\n        \\*/\n        proto.toDataURL = function () {\n            if (window && window.btoa) {\n                return \"data:image/svg+xml;base64,\" + btoa(unescape(encodeURIComponent(this)));\n            }\n        };\n        /*\\\n         * Paper.clear\n         [ method ]\n         **\n         * Removes all child nodes of the paper, except <defs>.\n        \\*/\n        proto.clear = function () {\n            var node = this.node.firstChild,\n                next;\n            while (node) {\n                next = node.nextSibling;\n                if (node.tagName != \"defs\") {\n                    node.parentNode.removeChild(node);\n                } else {\n                    proto.clear.call({node: node});\n                }\n                node = next;\n            }\n        };\n    }());\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        clone = Snap._.clone,\n        has = \"hasOwnProperty\",\n        p2s = /,?([a-z]),?/gi,\n        toFloat = parseFloat,\n        math = Math,\n        PI = math.PI,\n        mmin = math.min,\n        mmax = math.max,\n        pow = math.pow,\n        abs = math.abs;\n    function paths(ps) {\n        var p = paths.ps = paths.ps || {};\n        if (p[ps]) {\n            p[ps].sleep = 100;\n        } else {\n            p[ps] = {\n                sleep: 100\n            };\n        }\n        setTimeout(function () {\n            for (var key in p) if (p[has](key) && key != ps) {\n                p[key].sleep--;\n                !p[key].sleep && delete p[key];\n            }\n        });\n        return p[ps];\n    }\n    function box(x, y, width, height) {\n        if (x == null) {\n            x = y = width = height = 0;\n        }\n        if (y == null) {\n            y = x.y;\n            width = x.width;\n            height = x.height;\n            x = x.x;\n        }\n        return {\n            x: x,\n            y: y,\n            width: width,\n            w: width,\n            height: height,\n            h: height,\n            x2: x + width,\n            y2: y + height,\n            cx: x + width / 2,\n            cy: y + height / 2,\n            r1: math.min(width, height) / 2,\n            r2: math.max(width, height) / 2,\n            r0: math.sqrt(width * width + height * height) / 2,\n            path: rectPath(x, y, width, height),\n            vb: [x, y, width, height].join(\" \")\n        };\n    }\n    function toString() {\n        return this.join(\",\").replace(p2s, \"$1\");\n    }\n    function pathClone(pathArray) {\n        var res = clone(pathArray);\n        res.toString = toString;\n        return res;\n    }\n    function getPointAtSegmentLength(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length) {\n        if (length == null) {\n            return bezlen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y);\n        } else {\n            return findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y,\n                getTotLen(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, length));\n        }\n    }\n    function getLengthFactory(istotal, subpath) {\n        function O(val) {\n            return +(+val).toFixed(3);\n        }\n        return Snap._.cacher(function (path, length, onlystart) {\n            if (path instanceof Element) {\n                path = path.attr(\"d\");\n            }\n            path = path2curve(path);\n            var x, y, p, l, sp = \"\", subpaths = {}, point,\n                len = 0;\n            for (var i = 0, ii = path.length; i < ii; i++) {\n                p = path[i];\n                if (p[0] == \"M\") {\n                    x = +p[1];\n                    y = +p[2];\n                } else {\n                    l = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                    if (len + l > length) {\n                        if (subpath && !subpaths.start) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            sp += [\n                                \"C\" + O(point.start.x),\n                                O(point.start.y),\n                                O(point.m.x),\n                                O(point.m.y),\n                                O(point.x),\n                                O(point.y)\n                            ];\n                            if (onlystart) {return sp;}\n                            subpaths.start = sp;\n                            sp = [\n                                \"M\" + O(point.x),\n                                O(point.y) + \"C\" + O(point.n.x),\n                                O(point.n.y),\n                                O(point.end.x),\n                                O(point.end.y),\n                                O(p[5]),\n                                O(p[6])\n                            ].join();\n                            len += l;\n                            x = +p[5];\n                            y = +p[6];\n                            continue;\n                        }\n                        if (!istotal && !subpath) {\n                            point = getPointAtSegmentLength(x, y, p[1], p[2], p[3], p[4], p[5], p[6], length - len);\n                            return point;\n                        }\n                    }\n                    len += l;\n                    x = +p[5];\n                    y = +p[6];\n                }\n                sp += p.shift() + p;\n            }\n            subpaths.end = sp;\n            point = istotal ? len : subpath ? subpaths : findDotsAtSegment(x, y, p[0], p[1], p[2], p[3], p[4], p[5], 1);\n            return point;\n        }, null, Snap._.clone);\n    }\n    var getTotalLength = getLengthFactory(1),\n        getPointAtLength = getLengthFactory(),\n        getSubpathsAtLength = getLengthFactory(0, 1);\n    function findDotsAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t,\n            t13 = pow(t1, 3),\n            t12 = pow(t1, 2),\n            t2 = t * t,\n            t3 = t2 * t,\n            x = t13 * p1x + t12 * 3 * t * c1x + t1 * 3 * t * t * c2x + t3 * p2x,\n            y = t13 * p1y + t12 * 3 * t * c1y + t1 * 3 * t * t * c2y + t3 * p2y,\n            mx = p1x + 2 * t * (c1x - p1x) + t2 * (c2x - 2 * c1x + p1x),\n            my = p1y + 2 * t * (c1y - p1y) + t2 * (c2y - 2 * c1y + p1y),\n            nx = c1x + 2 * t * (c2x - c1x) + t2 * (p2x - 2 * c2x + c1x),\n            ny = c1y + 2 * t * (c2y - c1y) + t2 * (p2y - 2 * c2y + c1y),\n            ax = t1 * p1x + t * c1x,\n            ay = t1 * p1y + t * c1y,\n            cx = t1 * c2x + t * p2x,\n            cy = t1 * c2y + t * p2y,\n            alpha = 90 - math.atan2(mx - nx, my - ny) * 180 / PI;\n        // (mx > nx || my < ny) && (alpha += 180);\n        return {\n            x: x,\n            y: y,\n            m: {x: mx, y: my},\n            n: {x: nx, y: ny},\n            start: {x: ax, y: ay},\n            end: {x: cx, y: cy},\n            alpha: alpha\n        };\n    }\n    function bezierBBox(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y) {\n        if (!Snap.is(p1x, \"array\")) {\n            p1x = [p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y];\n        }\n        var bbox = curveDim.apply(null, p1x);\n        return box(\n            bbox.min.x,\n            bbox.min.y,\n            bbox.max.x - bbox.min.x,\n            bbox.max.y - bbox.min.y\n        );\n    }\n    function isPointInsideBBox(bbox, x, y) {\n        return  x >= bbox.x &&\n                x <= bbox.x + bbox.width &&\n                y >= bbox.y &&\n                y <= bbox.y + bbox.height;\n    }\n    function isBBoxIntersect(bbox1, bbox2) {\n        bbox1 = box(bbox1);\n        bbox2 = box(bbox2);\n        return isPointInsideBBox(bbox2, bbox1.x, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y)\n            || isPointInsideBBox(bbox2, bbox1.x, bbox1.y2)\n            || isPointInsideBBox(bbox2, bbox1.x2, bbox1.y2)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y)\n            || isPointInsideBBox(bbox1, bbox2.x, bbox2.y2)\n            || isPointInsideBBox(bbox1, bbox2.x2, bbox2.y2)\n            || (bbox1.x < bbox2.x2 && bbox1.x > bbox2.x\n                || bbox2.x < bbox1.x2 && bbox2.x > bbox1.x)\n            && (bbox1.y < bbox2.y2 && bbox1.y > bbox2.y\n                || bbox2.y < bbox1.y2 && bbox2.y > bbox1.y);\n    }\n    function base3(t, p1, p2, p3, p4) {\n        var t1 = -3 * p1 + 9 * p2 - 9 * p3 + 3 * p4,\n            t2 = t * t1 + 6 * p1 - 12 * p2 + 6 * p3;\n        return t * t2 - 3 * p1 + 3 * p2;\n    }\n    function bezlen(x1, y1, x2, y2, x3, y3, x4, y4, z) {\n        if (z == null) {\n            z = 1;\n        }\n        z = z > 1 ? 1 : z < 0 ? 0 : z;\n        var z2 = z / 2,\n            n = 12,\n            Tvalues = [-.1252,.1252,-.3678,.3678,-.5873,.5873,-.7699,.7699,-.9041,.9041,-.9816,.9816],\n            Cvalues = [0.2491,0.2491,0.2335,0.2335,0.2032,0.2032,0.1601,0.1601,0.1069,0.1069,0.0472,0.0472],\n            sum = 0;\n        for (var i = 0; i < n; i++) {\n            var ct = z2 * Tvalues[i] + z2,\n                xbase = base3(ct, x1, x2, x3, x4),\n                ybase = base3(ct, y1, y2, y3, y4),\n                comb = xbase * xbase + ybase * ybase;\n            sum += Cvalues[i] * math.sqrt(comb);\n        }\n        return z2 * sum;\n    }\n    function getTotLen(x1, y1, x2, y2, x3, y3, x4, y4, ll) {\n        if (ll < 0 || bezlen(x1, y1, x2, y2, x3, y3, x4, y4) < ll) {\n            return;\n        }\n        var t = 1,\n            step = t / 2,\n            t2 = t - step,\n            l,\n            e = .01;\n        l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        while (abs(l - ll) > e) {\n            step /= 2;\n            t2 += (l < ll ? 1 : -1) * step;\n            l = bezlen(x1, y1, x2, y2, x3, y3, x4, y4, t2);\n        }\n        return t2;\n    }\n    function intersect(x1, y1, x2, y2, x3, y3, x4, y4) {\n        if (\n            mmax(x1, x2) < mmin(x3, x4) ||\n            mmin(x1, x2) > mmax(x3, x4) ||\n            mmax(y1, y2) < mmin(y3, y4) ||\n            mmin(y1, y2) > mmax(y3, y4)\n        ) {\n            return;\n        }\n        var nx = (x1 * y2 - y1 * x2) * (x3 - x4) - (x1 - x2) * (x3 * y4 - y3 * x4),\n            ny = (x1 * y2 - y1 * x2) * (y3 - y4) - (y1 - y2) * (x3 * y4 - y3 * x4),\n            denominator = (x1 - x2) * (y3 - y4) - (y1 - y2) * (x3 - x4);\n\n        if (!denominator) {\n            return;\n        }\n        var px = nx / denominator,\n            py = ny / denominator,\n            px2 = +px.toFixed(2),\n            py2 = +py.toFixed(2);\n        if (\n            px2 < +mmin(x1, x2).toFixed(2) ||\n            px2 > +mmax(x1, x2).toFixed(2) ||\n            px2 < +mmin(x3, x4).toFixed(2) ||\n            px2 > +mmax(x3, x4).toFixed(2) ||\n            py2 < +mmin(y1, y2).toFixed(2) ||\n            py2 > +mmax(y1, y2).toFixed(2) ||\n            py2 < +mmin(y3, y4).toFixed(2) ||\n            py2 > +mmax(y3, y4).toFixed(2)\n        ) {\n            return;\n        }\n        return {x: px, y: py};\n    }\n    function inter(bez1, bez2) {\n        return interHelper(bez1, bez2);\n    }\n    function interCount(bez1, bez2) {\n        return interHelper(bez1, bez2, 1);\n    }\n    function interHelper(bez1, bez2, justCount) {\n        var bbox1 = bezierBBox(bez1),\n            bbox2 = bezierBBox(bez2);\n        if (!isBBoxIntersect(bbox1, bbox2)) {\n            return justCount ? 0 : [];\n        }\n        var l1 = bezlen.apply(0, bez1),\n            l2 = bezlen.apply(0, bez2),\n            n1 = ~~(l1 / 8),\n            n2 = ~~(l2 / 8),\n            dots1 = [],\n            dots2 = [],\n            xy = {},\n            res = justCount ? 0 : [];\n        for (var i = 0; i < n1 + 1; i++) {\n            var p = findDotsAtSegment.apply(0, bez1.concat(i / n1));\n            dots1.push({x: p.x, y: p.y, t: i / n1});\n        }\n        for (i = 0; i < n2 + 1; i++) {\n            p = findDotsAtSegment.apply(0, bez2.concat(i / n2));\n            dots2.push({x: p.x, y: p.y, t: i / n2});\n        }\n        for (i = 0; i < n1; i++) {\n            for (var j = 0; j < n2; j++) {\n                var di = dots1[i],\n                    di1 = dots1[i + 1],\n                    dj = dots2[j],\n                    dj1 = dots2[j + 1],\n                    ci = abs(di1.x - di.x) < .001 ? \"y\" : \"x\",\n                    cj = abs(dj1.x - dj.x) < .001 ? \"y\" : \"x\",\n                    is = intersect(di.x, di.y, di1.x, di1.y, dj.x, dj.y, dj1.x, dj1.y);\n                if (is) {\n                    if (xy[is.x.toFixed(4)] == is.y.toFixed(4)) {\n                        continue;\n                    }\n                    xy[is.x.toFixed(4)] = is.y.toFixed(4);\n                    var t1 = di.t + abs((is[ci] - di[ci]) / (di1[ci] - di[ci])) * (di1.t - di.t),\n                        t2 = dj.t + abs((is[cj] - dj[cj]) / (dj1[cj] - dj[cj])) * (dj1.t - dj.t);\n                    if (t1 >= 0 && t1 <= 1 && t2 >= 0 && t2 <= 1) {\n                        if (justCount) {\n                            res++;\n                        } else {\n                            res.push({\n                                x: is.x,\n                                y: is.y,\n                                t1: t1,\n                                t2: t2\n                            });\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function pathIntersection(path1, path2) {\n        return interPathHelper(path1, path2);\n    }\n    function pathIntersectionNumber(path1, path2) {\n        return interPathHelper(path1, path2, 1);\n    }\n    function interPathHelper(path1, path2, justCount) {\n        path1 = path2curve(path1);\n        path2 = path2curve(path2);\n        var x1, y1, x2, y2, x1m, y1m, x2m, y2m, bez1, bez2,\n            res = justCount ? 0 : [];\n        for (var i = 0, ii = path1.length; i < ii; i++) {\n            var pi = path1[i];\n            if (pi[0] == \"M\") {\n                x1 = x1m = pi[1];\n                y1 = y1m = pi[2];\n            } else {\n                if (pi[0] == \"C\") {\n                    bez1 = [x1, y1].concat(pi.slice(1));\n                    x1 = bez1[6];\n                    y1 = bez1[7];\n                } else {\n                    bez1 = [x1, y1, x1, y1, x1m, y1m, x1m, y1m];\n                    x1 = x1m;\n                    y1 = y1m;\n                }\n                for (var j = 0, jj = path2.length; j < jj; j++) {\n                    var pj = path2[j];\n                    if (pj[0] == \"M\") {\n                        x2 = x2m = pj[1];\n                        y2 = y2m = pj[2];\n                    } else {\n                        if (pj[0] == \"C\") {\n                            bez2 = [x2, y2].concat(pj.slice(1));\n                            x2 = bez2[6];\n                            y2 = bez2[7];\n                        } else {\n                            bez2 = [x2, y2, x2, y2, x2m, y2m, x2m, y2m];\n                            x2 = x2m;\n                            y2 = y2m;\n                        }\n                        var intr = interHelper(bez1, bez2, justCount);\n                        if (justCount) {\n                            res += intr;\n                        } else {\n                            for (var k = 0, kk = intr.length; k < kk; k++) {\n                                intr[k].segment1 = i;\n                                intr[k].segment2 = j;\n                                intr[k].bez1 = bez1;\n                                intr[k].bez2 = bez2;\n                            }\n                            res = res.concat(intr);\n                        }\n                    }\n                }\n            }\n        }\n        return res;\n    }\n    function isPointInsidePath(path, x, y) {\n        var bbox = pathBBox(path);\n        return isPointInsideBBox(bbox, x, y) &&\n               interPathHelper(path, [[\"M\", x, y], [\"H\", bbox.x2 + 10]], 1) % 2 == 1;\n    }\n    function pathBBox(path) {\n        var pth = paths(path);\n        if (pth.bbox) {\n            return clone(pth.bbox);\n        }\n        if (!path) {\n            return box();\n        }\n        path = path2curve(path);\n        var x = 0,\n            y = 0,\n            X = [],\n            Y = [],\n            p;\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            p = path[i];\n            if (p[0] == \"M\") {\n                x = p[1];\n                y = p[2];\n                X.push(x);\n                Y.push(y);\n            } else {\n                var dim = curveDim(x, y, p[1], p[2], p[3], p[4], p[5], p[6]);\n                X = X.concat(dim.min.x, dim.max.x);\n                Y = Y.concat(dim.min.y, dim.max.y);\n                x = p[5];\n                y = p[6];\n            }\n        }\n        var xmin = mmin.apply(0, X),\n            ymin = mmin.apply(0, Y),\n            xmax = mmax.apply(0, X),\n            ymax = mmax.apply(0, Y),\n            bb = box(xmin, ymin, xmax - xmin, ymax - ymin);\n        pth.bbox = clone(bb);\n        return bb;\n    }\n    function rectPath(x, y, w, h, r) {\n        if (r) {\n            return [\n                [\"M\", +x + +r, y],\n                [\"l\", w - r * 2, 0],\n                [\"a\", r, r, 0, 0, 1, r, r],\n                [\"l\", 0, h - r * 2],\n                [\"a\", r, r, 0, 0, 1, -r, r],\n                [\"l\", r * 2 - w, 0],\n                [\"a\", r, r, 0, 0, 1, -r, -r],\n                [\"l\", 0, r * 2 - h],\n                [\"a\", r, r, 0, 0, 1, r, -r],\n                [\"z\"]\n            ];\n        }\n        var res = [[\"M\", x, y], [\"l\", w, 0], [\"l\", 0, h], [\"l\", -w, 0], [\"z\"]];\n        res.toString = toString;\n        return res;\n    }\n    function ellipsePath(x, y, rx, ry, a) {\n        if (a == null && ry == null) {\n            ry = rx;\n        }\n        x = +x;\n        y = +y;\n        rx = +rx;\n        ry = +ry;\n        if (a != null) {\n            var rad = Math.PI / 180,\n                x1 = x + rx * Math.cos(-ry * rad),\n                x2 = x + rx * Math.cos(-a * rad),\n                y1 = y + rx * Math.sin(-ry * rad),\n                y2 = y + rx * Math.sin(-a * rad),\n                res = [[\"M\", x1, y1], [\"A\", rx, rx, 0, +(a - ry > 180), 0, x2, y2]];\n        } else {\n            res = [\n                [\"M\", x, y],\n                [\"m\", 0, -ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, 2 * ry],\n                [\"a\", rx, ry, 0, 1, 1, 0, -2 * ry],\n                [\"z\"]\n            ];\n        }\n        res.toString = toString;\n        return res;\n    }\n    var unit2px = Snap._unit2px,\n        getPath = {\n        path: function (el) {\n            return el.attr(\"path\");\n        },\n        circle: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx, attr.cy, attr.r);\n        },\n        ellipse: function (el) {\n            var attr = unit2px(el);\n            return ellipsePath(attr.cx || 0, attr.cy || 0, attr.rx, attr.ry);\n        },\n        rect: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height, attr.rx, attr.ry);\n        },\n        image: function (el) {\n            var attr = unit2px(el);\n            return rectPath(attr.x || 0, attr.y || 0, attr.width, attr.height);\n        },\n        line: function (el) {\n            return \"M\" + [el.attr(\"x1\") || 0, el.attr(\"y1\") || 0, el.attr(\"x2\"), el.attr(\"y2\")];\n        },\n        polyline: function (el) {\n            return \"M\" + el.attr(\"points\");\n        },\n        polygon: function (el) {\n            return \"M\" + el.attr(\"points\") + \"z\";\n        },\n        deflt: function (el) {\n            var bbox = el.node.getBBox();\n            return rectPath(bbox.x, bbox.y, bbox.width, bbox.height);\n        }\n    };\n    function pathToRelative(pathArray) {\n        var pth = paths(pathArray),\n            lowerCase = String.prototype.toLowerCase;\n        if (pth.rel) {\n            return pathClone(pth.rel);\n        }\n        if (!Snap.is(pathArray, \"array\") || !Snap.is(pathArray && pathArray[0], \"array\")) {\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0;\n        if (pathArray[0][0] == \"M\") {\n            x = pathArray[0][1];\n            y = pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res.push([\"M\", x, y]);\n        }\n        for (var i = start, ii = pathArray.length; i < ii; i++) {\n            var r = res[i] = [],\n                pa = pathArray[i];\n            if (pa[0] != lowerCase.call(pa[0])) {\n                r[0] = lowerCase.call(pa[0]);\n                switch (r[0]) {\n                    case \"a\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +(pa[6] - x).toFixed(3);\n                        r[7] = +(pa[7] - y).toFixed(3);\n                        break;\n                    case \"v\":\n                        r[1] = +(pa[1] - y).toFixed(3);\n                        break;\n                    case \"m\":\n                        mx = pa[1];\n                        my = pa[2];\n                    default:\n                        for (var j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +(pa[j] - (j % 2 ? x : y)).toFixed(3);\n                        }\n                }\n            } else {\n                r = res[i] = [];\n                if (pa[0] == \"m\") {\n                    mx = pa[1] + x;\n                    my = pa[2] + y;\n                }\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    res[i][k] = pa[k];\n                }\n            }\n            var len = res[i].length;\n            switch (res[i][0]) {\n                case \"z\":\n                    x = mx;\n                    y = my;\n                    break;\n                case \"h\":\n                    x += +res[i][len - 1];\n                    break;\n                case \"v\":\n                    y += +res[i][len - 1];\n                    break;\n                default:\n                    x += +res[i][len - 2];\n                    y += +res[i][len - 1];\n            }\n        }\n        res.toString = toString;\n        pth.rel = pathClone(res);\n        return res;\n    }\n    function pathToAbsolute(pathArray) {\n        var pth = paths(pathArray);\n        if (pth.abs) {\n            return pathClone(pth.abs);\n        }\n        if (!is(pathArray, \"array\") || !is(pathArray && pathArray[0], \"array\")) { // rough assumption\n            pathArray = Snap.parsePathString(pathArray);\n        }\n        if (!pathArray || !pathArray.length) {\n            return [[\"M\", 0, 0]];\n        }\n        var res = [],\n            x = 0,\n            y = 0,\n            mx = 0,\n            my = 0,\n            start = 0,\n            pa0;\n        if (pathArray[0][0] == \"M\") {\n            x = +pathArray[0][1];\n            y = +pathArray[0][2];\n            mx = x;\n            my = y;\n            start++;\n            res[0] = [\"M\", x, y];\n        }\n        var crz = pathArray.length == 3 &&\n            pathArray[0][0] == \"M\" &&\n            pathArray[1][0].toUpperCase() == \"R\" &&\n            pathArray[2][0].toUpperCase() == \"Z\";\n        for (var r, pa, i = start, ii = pathArray.length; i < ii; i++) {\n            res.push(r = []);\n            pa = pathArray[i];\n            pa0 = pa[0];\n            if (pa0 != pa0.toUpperCase()) {\n                r[0] = pa0.toUpperCase();\n                switch (r[0]) {\n                    case \"A\":\n                        r[1] = pa[1];\n                        r[2] = pa[2];\n                        r[3] = pa[3];\n                        r[4] = pa[4];\n                        r[5] = pa[5];\n                        r[6] = +pa[6] + x;\n                        r[7] = +pa[7] + y;\n                        break;\n                    case \"V\":\n                        r[1] = +pa[1] + y;\n                        break;\n                    case \"H\":\n                        r[1] = +pa[1] + x;\n                        break;\n                    case \"R\":\n                        var dots = [x, y].concat(pa.slice(1));\n                        for (var j = 2, jj = dots.length; j < jj; j++) {\n                            dots[j] = +dots[j] + x;\n                            dots[++j] = +dots[j] + y;\n                        }\n                        res.pop();\n                        res = res.concat(catmullRom2bezier(dots, crz));\n                        break;\n                    case \"O\":\n                        res.pop();\n                        dots = ellipsePath(x, y, pa[1], pa[2]);\n                        dots.push(dots[0]);\n                        res = res.concat(dots);\n                        break;\n                    case \"U\":\n                        res.pop();\n                        res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                        r = [\"U\"].concat(res[res.length - 1].slice(-2));\n                        break;\n                    case \"M\":\n                        mx = +pa[1] + x;\n                        my = +pa[2] + y;\n                    default:\n                        for (j = 1, jj = pa.length; j < jj; j++) {\n                            r[j] = +pa[j] + (j % 2 ? x : y);\n                        }\n                }\n            } else if (pa0 == \"R\") {\n                dots = [x, y].concat(pa.slice(1));\n                res.pop();\n                res = res.concat(catmullRom2bezier(dots, crz));\n                r = [\"R\"].concat(pa.slice(-2));\n            } else if (pa0 == \"O\") {\n                res.pop();\n                dots = ellipsePath(x, y, pa[1], pa[2]);\n                dots.push(dots[0]);\n                res = res.concat(dots);\n            } else if (pa0 == \"U\") {\n                res.pop();\n                res = res.concat(ellipsePath(x, y, pa[1], pa[2], pa[3]));\n                r = [\"U\"].concat(res[res.length - 1].slice(-2));\n            } else {\n                for (var k = 0, kk = pa.length; k < kk; k++) {\n                    r[k] = pa[k];\n                }\n            }\n            pa0 = pa0.toUpperCase();\n            if (pa0 != \"O\") {\n                switch (r[0]) {\n                    case \"Z\":\n                        x = +mx;\n                        y = +my;\n                        break;\n                    case \"H\":\n                        x = r[1];\n                        break;\n                    case \"V\":\n                        y = r[1];\n                        break;\n                    case \"M\":\n                        mx = r[r.length - 2];\n                        my = r[r.length - 1];\n                    default:\n                        x = r[r.length - 2];\n                        y = r[r.length - 1];\n                }\n            }\n        }\n        res.toString = toString;\n        pth.abs = pathClone(res);\n        return res;\n    }\n    function l2c(x1, y1, x2, y2) {\n        return [x1, y1, x2, y2, x2, y2];\n    }\n    function q2c(x1, y1, ax, ay, x2, y2) {\n        var _13 = 1 / 3,\n            _23 = 2 / 3;\n        return [\n                _13 * x1 + _23 * ax,\n                _13 * y1 + _23 * ay,\n                _13 * x2 + _23 * ax,\n                _13 * y2 + _23 * ay,\n                x2,\n                y2\n            ];\n    }\n    function a2c(x1, y1, rx, ry, angle, large_arc_flag, sweep_flag, x2, y2, recursive) {\n        // for more information of where this math came from visit:\n        // http://www.w3.org/TR/SVG11/implnote.html#ArcImplementationNotes\n        var _120 = PI * 120 / 180,\n            rad = PI / 180 * (+angle || 0),\n            res = [],\n            xy,\n            rotate = Snap._.cacher(function (x, y, rad) {\n                var X = x * math.cos(rad) - y * math.sin(rad),\n                    Y = x * math.sin(rad) + y * math.cos(rad);\n                return {x: X, y: Y};\n            });\n        if (!rx || !ry) {\n            return [x1, y1, x2, y2, x2, y2];\n        }\n        if (!recursive) {\n            xy = rotate(x1, y1, -rad);\n            x1 = xy.x;\n            y1 = xy.y;\n            xy = rotate(x2, y2, -rad);\n            x2 = xy.x;\n            y2 = xy.y;\n            var cos = math.cos(PI / 180 * angle),\n                sin = math.sin(PI / 180 * angle),\n                x = (x1 - x2) / 2,\n                y = (y1 - y2) / 2;\n            var h = x * x / (rx * rx) + y * y / (ry * ry);\n            if (h > 1) {\n                h = math.sqrt(h);\n                rx = h * rx;\n                ry = h * ry;\n            }\n            var rx2 = rx * rx,\n                ry2 = ry * ry,\n                k = (large_arc_flag == sweep_flag ? -1 : 1) *\n                    math.sqrt(abs((rx2 * ry2 - rx2 * y * y - ry2 * x * x) / (rx2 * y * y + ry2 * x * x))),\n                cx = k * rx * y / ry + (x1 + x2) / 2,\n                cy = k * -ry * x / rx + (y1 + y2) / 2,\n                f1 = math.asin(((y1 - cy) / ry).toFixed(9)),\n                f2 = math.asin(((y2 - cy) / ry).toFixed(9));\n\n            f1 = x1 < cx ? PI - f1 : f1;\n            f2 = x2 < cx ? PI - f2 : f2;\n            f1 < 0 && (f1 = PI * 2 + f1);\n            f2 < 0 && (f2 = PI * 2 + f2);\n            if (sweep_flag && f1 > f2) {\n                f1 = f1 - PI * 2;\n            }\n            if (!sweep_flag && f2 > f1) {\n                f2 = f2 - PI * 2;\n            }\n        } else {\n            f1 = recursive[0];\n            f2 = recursive[1];\n            cx = recursive[2];\n            cy = recursive[3];\n        }\n        var df = f2 - f1;\n        if (abs(df) > _120) {\n            var f2old = f2,\n                x2old = x2,\n                y2old = y2;\n            f2 = f1 + _120 * (sweep_flag && f2 > f1 ? 1 : -1);\n            x2 = cx + rx * math.cos(f2);\n            y2 = cy + ry * math.sin(f2);\n            res = a2c(x2, y2, rx, ry, angle, 0, sweep_flag, x2old, y2old, [f2, f2old, cx, cy]);\n        }\n        df = f2 - f1;\n        var c1 = math.cos(f1),\n            s1 = math.sin(f1),\n            c2 = math.cos(f2),\n            s2 = math.sin(f2),\n            t = math.tan(df / 4),\n            hx = 4 / 3 * rx * t,\n            hy = 4 / 3 * ry * t,\n            m1 = [x1, y1],\n            m2 = [x1 + hx * s1, y1 - hy * c1],\n            m3 = [x2 + hx * s2, y2 - hy * c2],\n            m4 = [x2, y2];\n        m2[0] = 2 * m1[0] - m2[0];\n        m2[1] = 2 * m1[1] - m2[1];\n        if (recursive) {\n            return [m2, m3, m4].concat(res);\n        } else {\n            res = [m2, m3, m4].concat(res).join().split(\",\");\n            var newres = [];\n            for (var i = 0, ii = res.length; i < ii; i++) {\n                newres[i] = i % 2 ? rotate(res[i - 1], res[i], rad).y : rotate(res[i], res[i + 1], rad).x;\n            }\n            return newres;\n        }\n    }\n    function findDotAtSegment(p1x, p1y, c1x, c1y, c2x, c2y, p2x, p2y, t) {\n        var t1 = 1 - t;\n        return {\n            x: pow(t1, 3) * p1x + pow(t1, 2) * 3 * t * c1x + t1 * 3 * t * t * c2x + pow(t, 3) * p2x,\n            y: pow(t1, 3) * p1y + pow(t1, 2) * 3 * t * c1y + t1 * 3 * t * t * c2y + pow(t, 3) * p2y\n        };\n    }\n\n    // Returns bounding box of cubic bezier curve.\n    // Source: http://blog.hackers-cafe.net/2009/06/how-to-calculate-bezier-curves-bounding.html\n    // Original version: NISHIO Hirokazu\n    // Modifications: https://github.com/timo22345\n    function curveDim(x0, y0, x1, y1, x2, y2, x3, y3) {\n        var tvalues = [],\n            bounds = [[], []],\n            a, b, c, t, t1, t2, b2ac, sqrtb2ac;\n        for (var i = 0; i < 2; ++i) {\n            if (i == 0) {\n                b = 6 * x0 - 12 * x1 + 6 * x2;\n                a = -3 * x0 + 9 * x1 - 9 * x2 + 3 * x3;\n                c = 3 * x1 - 3 * x0;\n            } else {\n                b = 6 * y0 - 12 * y1 + 6 * y2;\n                a = -3 * y0 + 9 * y1 - 9 * y2 + 3 * y3;\n                c = 3 * y1 - 3 * y0;\n            }\n            if (abs(a) < 1e-12) {\n                if (abs(b) < 1e-12) {\n                    continue;\n                }\n                t = -c / b;\n                if (0 < t && t < 1) {\n                    tvalues.push(t);\n                }\n                continue;\n            }\n            b2ac = b * b - 4 * c * a;\n            sqrtb2ac = math.sqrt(b2ac);\n            if (b2ac < 0) {\n                continue;\n            }\n            t1 = (-b + sqrtb2ac) / (2 * a);\n            if (0 < t1 && t1 < 1) {\n                tvalues.push(t1);\n            }\n            t2 = (-b - sqrtb2ac) / (2 * a);\n            if (0 < t2 && t2 < 1) {\n                tvalues.push(t2);\n            }\n        }\n\n        var x, y, j = tvalues.length,\n            jlen = j,\n            mt;\n        while (j--) {\n            t = tvalues[j];\n            mt = 1 - t;\n            bounds[0][j] = mt * mt * mt * x0 + 3 * mt * mt * t * x1 + 3 * mt * t * t * x2 + t * t * t * x3;\n            bounds[1][j] = mt * mt * mt * y0 + 3 * mt * mt * t * y1 + 3 * mt * t * t * y2 + t * t * t * y3;\n        }\n\n        bounds[0][jlen] = x0;\n        bounds[1][jlen] = y0;\n        bounds[0][jlen + 1] = x3;\n        bounds[1][jlen + 1] = y3;\n        bounds[0].length = bounds[1].length = jlen + 2;\n\n\n        return {\n          min: {x: mmin.apply(0, bounds[0]), y: mmin.apply(0, bounds[1])},\n          max: {x: mmax.apply(0, bounds[0]), y: mmax.apply(0, bounds[1])}\n        };\n    }\n\n    function path2curve(path, path2) {\n        var pth = !path2 && paths(path);\n        if (!path2 && pth.curve) {\n            return pathClone(pth.curve);\n        }\n        var p = pathToAbsolute(path),\n            p2 = path2 && pathToAbsolute(path2),\n            attrs = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            attrs2 = {x: 0, y: 0, bx: 0, by: 0, X: 0, Y: 0, qx: null, qy: null},\n            processPath = function (path, d, pcom) {\n                var nx, ny;\n                if (!path) {\n                    return [\"C\", d.x, d.y, d.x, d.y, d.x, d.y];\n                }\n                !(path[0] in {T: 1, Q: 1}) && (d.qx = d.qy = null);\n                switch (path[0]) {\n                    case \"M\":\n                        d.X = path[1];\n                        d.Y = path[2];\n                        break;\n                    case \"A\":\n                        path = [\"C\"].concat(a2c.apply(0, [d.x, d.y].concat(path.slice(1))));\n                        break;\n                    case \"S\":\n                        if (pcom == \"C\" || pcom == \"S\") { // In \"S\" case we have to take into account, if the previous command is C/S.\n                            nx = d.x * 2 - d.bx;          // And reflect the previous\n                            ny = d.y * 2 - d.by;          // command's control point relative to the current point.\n                        }\n                        else {                            // or some else or nothing\n                            nx = d.x;\n                            ny = d.y;\n                        }\n                        path = [\"C\", nx, ny].concat(path.slice(1));\n                        break;\n                    case \"T\":\n                        if (pcom == \"Q\" || pcom == \"T\") { // In \"T\" case we have to take into account, if the previous command is Q/T.\n                            d.qx = d.x * 2 - d.qx;        // And make a reflection similar\n                            d.qy = d.y * 2 - d.qy;        // to case \"S\".\n                        }\n                        else {                            // or something else or nothing\n                            d.qx = d.x;\n                            d.qy = d.y;\n                        }\n                        path = [\"C\"].concat(q2c(d.x, d.y, d.qx, d.qy, path[1], path[2]));\n                        break;\n                    case \"Q\":\n                        d.qx = path[1];\n                        d.qy = path[2];\n                        path = [\"C\"].concat(q2c(d.x, d.y, path[1], path[2], path[3], path[4]));\n                        break;\n                    case \"L\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], path[2]));\n                        break;\n                    case \"H\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, path[1], d.y));\n                        break;\n                    case \"V\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.x, path[1]));\n                        break;\n                    case \"Z\":\n                        path = [\"C\"].concat(l2c(d.x, d.y, d.X, d.Y));\n                        break;\n                }\n                return path;\n            },\n            fixArc = function (pp, i) {\n                if (pp[i].length > 7) {\n                    pp[i].shift();\n                    var pi = pp[i];\n                    while (pi.length) {\n                        pcoms1[i] = \"A\"; // if created multiple C:s, their original seg is saved\n                        p2 && (pcoms2[i] = \"A\"); // the same as above\n                        pp.splice(i++, 0, [\"C\"].concat(pi.splice(0, 6)));\n                    }\n                    pp.splice(i, 1);\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            fixM = function (path1, path2, a1, a2, i) {\n                if (path1 && path2 && path1[i][0] == \"M\" && path2[i][0] != \"M\") {\n                    path2.splice(i, 0, [\"M\", a2.x, a2.y]);\n                    a1.bx = 0;\n                    a1.by = 0;\n                    a1.x = path1[i][1];\n                    a1.y = path1[i][2];\n                    ii = mmax(p.length, p2 && p2.length || 0);\n                }\n            },\n            pcoms1 = [], // path commands of original path p\n            pcoms2 = [], // path commands of original path p2\n            pfirst = \"\", // temporary holder for original path command\n            pcom = \"\"; // holder for previous path command of original path\n        for (var i = 0, ii = mmax(p.length, p2 && p2.length || 0); i < ii; i++) {\n            p[i] && (pfirst = p[i][0]); // save current path command\n\n            if (pfirst != \"C\") // C is not saved yet, because it may be result of conversion\n            {\n                pcoms1[i] = pfirst; // Save current path command\n                i && ( pcom = pcoms1[i - 1]); // Get previous path command pcom\n            }\n            p[i] = processPath(p[i], attrs, pcom); // Previous path command is inputted to processPath\n\n            if (pcoms1[i] != \"A\" && pfirst == \"C\") pcoms1[i] = \"C\"; // A is the only command\n            // which may produce multiple C:s\n            // so we have to make sure that C is also C in original path\n\n            fixArc(p, i); // fixArc adds also the right amount of A:s to pcoms1\n\n            if (p2) { // the same procedures is done to p2\n                p2[i] && (pfirst = p2[i][0]);\n                if (pfirst != \"C\") {\n                    pcoms2[i] = pfirst;\n                    i && (pcom = pcoms2[i - 1]);\n                }\n                p2[i] = processPath(p2[i], attrs2, pcom);\n\n                if (pcoms2[i] != \"A\" && pfirst == \"C\") {\n                    pcoms2[i] = \"C\";\n                }\n\n                fixArc(p2, i);\n            }\n            fixM(p, p2, attrs, attrs2, i);\n            fixM(p2, p, attrs2, attrs, i);\n            var seg = p[i],\n                seg2 = p2 && p2[i],\n                seglen = seg.length,\n                seg2len = p2 && seg2.length;\n            attrs.x = seg[seglen - 2];\n            attrs.y = seg[seglen - 1];\n            attrs.bx = toFloat(seg[seglen - 4]) || attrs.x;\n            attrs.by = toFloat(seg[seglen - 3]) || attrs.y;\n            attrs2.bx = p2 && (toFloat(seg2[seg2len - 4]) || attrs2.x);\n            attrs2.by = p2 && (toFloat(seg2[seg2len - 3]) || attrs2.y);\n            attrs2.x = p2 && seg2[seg2len - 2];\n            attrs2.y = p2 && seg2[seg2len - 1];\n        }\n        if (!p2) {\n            pth.curve = pathClone(p);\n        }\n        return p2 ? [p, p2] : p;\n    }\n    function mapPath(path, matrix) {\n        if (!matrix) {\n            return path;\n        }\n        var x, y, i, j, ii, jj, pathi;\n        path = path2curve(path);\n        for (i = 0, ii = path.length; i < ii; i++) {\n            pathi = path[i];\n            for (j = 1, jj = pathi.length; j < jj; j += 2) {\n                x = matrix.x(pathi[j], pathi[j + 1]);\n                y = matrix.y(pathi[j], pathi[j + 1]);\n                pathi[j] = x;\n                pathi[j + 1] = y;\n            }\n        }\n        return path;\n    }\n\n    // http://schepers.cc/getting-to-the-point\n    function catmullRom2bezier(crp, z) {\n        var d = [];\n        for (var i = 0, iLen = crp.length; iLen - 2 * !z > i; i += 2) {\n            var p = [\n                        {x: +crp[i - 2], y: +crp[i - 1]},\n                        {x: +crp[i],     y: +crp[i + 1]},\n                        {x: +crp[i + 2], y: +crp[i + 3]},\n                        {x: +crp[i + 4], y: +crp[i + 5]}\n                    ];\n            if (z) {\n                if (!i) {\n                    p[0] = {x: +crp[iLen - 2], y: +crp[iLen - 1]};\n                } else if (iLen - 4 == i) {\n                    p[3] = {x: +crp[0], y: +crp[1]};\n                } else if (iLen - 2 == i) {\n                    p[2] = {x: +crp[0], y: +crp[1]};\n                    p[3] = {x: +crp[2], y: +crp[3]};\n                }\n            } else {\n                if (iLen - 4 == i) {\n                    p[3] = p[2];\n                } else if (!i) {\n                    p[0] = {x: +crp[i], y: +crp[i + 1]};\n                }\n            }\n            d.push([\"C\",\n                  (-p[0].x + 6 * p[1].x + p[2].x) / 6,\n                  (-p[0].y + 6 * p[1].y + p[2].y) / 6,\n                  (p[1].x + 6 * p[2].x - p[3].x) / 6,\n                  (p[1].y + 6*p[2].y - p[3].y) / 6,\n                  p[2].x,\n                  p[2].y\n            ]);\n        }\n\n        return d;\n    }\n\n    // export\n    Snap.path = paths;\n\n    /*\\\n     * Snap.path.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the given path in pixels\n     **\n     - path (string) SVG path string\n     **\n     = (number) length\n    \\*/\n    Snap.path.getTotalLength = getTotalLength;\n    /*\\\n     * Snap.path.getPointAtLength\n     [ method ]\n     **\n     * Returns the coordinates of the point located at the given length along the given path\n     **\n     - path (string) SVG path string\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    Snap.path.getPointAtLength = getPointAtLength;\n    /*\\\n     * Snap.path.getSubpath\n     [ method ]\n     **\n     * Returns the subpath of a given path between given start and end lengths\n     **\n     - path (string) SVG path string\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    Snap.path.getSubpath = function (path, from, to) {\n        if (this.getTotalLength(path) - to < 1e-6) {\n            return getSubpathsAtLength(path, from).end;\n        }\n        var a = getSubpathsAtLength(path, to, 1);\n        return from ? getSubpathsAtLength(a, from).end : a;\n    };\n    /*\\\n     * Element.getTotalLength\n     [ method ]\n     **\n     * Returns the length of the path in pixels (only works for `path` elements)\n     = (number) length\n    \\*/\n    elproto.getTotalLength = function () {\n        if (this.node.getTotalLength) {\n            return this.node.getTotalLength();\n        }\n    };\n    // SIERRA Element.getPointAtLength()/Element.getTotalLength(): If a <path> is broken into different segments, is the jump distance to the new coordinates set by the _M_ or _m_ commands calculated as part of the path's total length?\n    /*\\\n     * Element.getPointAtLength\n     [ method ]\n     **\n     * Returns coordinates of the point located at the given length on the given path (only works for `path` elements)\n     **\n     - length (number) length, in pixels, from the start of the path, excluding non-rendering jumps\n     **\n     = (object) representation of the point:\n     o {\n     o     x: (number) x coordinate,\n     o     y: (number) y coordinate,\n     o     alpha: (number) angle of derivative\n     o }\n    \\*/\n    elproto.getPointAtLength = function (length) {\n        return getPointAtLength(this.attr(\"d\"), length);\n    };\n    // SIERRA Element.getSubpath(): Similar to the problem for Element.getPointAtLength(). Unclear how this would work for a segmented path. Overall, the concept of _subpath_ and what I'm calling a _segment_ (series of non-_M_ or _Z_ commands) is unclear.\n    /*\\\n     * Element.getSubpath\n     [ method ]\n     **\n     * Returns subpath of a given element from given start and end lengths (only works for `path` elements)\n     **\n     - from (number) length, in pixels, from the start of the path to the start of the segment\n     - to (number) length, in pixels, from the start of the path to the end of the segment\n     **\n     = (string) path string definition for the segment\n    \\*/\n    elproto.getSubpath = function (from, to) {\n        return Snap.path.getSubpath(this.attr(\"d\"), from, to);\n    };\n    Snap._.box = box;\n    /*\\\n     * Snap.path.findDotsAtSegment\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds dot coordinates on the given cubic beziér curve at the given t\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     - t (number) position on the curve (0..1)\n     = (object) point information in format:\n     o {\n     o     x: (number) x coordinate of the point,\n     o     y: (number) y coordinate of the point,\n     o     m: {\n     o         x: (number) x coordinate of the left anchor,\n     o         y: (number) y coordinate of the left anchor\n     o     },\n     o     n: {\n     o         x: (number) x coordinate of the right anchor,\n     o         y: (number) y coordinate of the right anchor\n     o     },\n     o     start: {\n     o         x: (number) x coordinate of the start of the curve,\n     o         y: (number) y coordinate of the start of the curve\n     o     },\n     o     end: {\n     o         x: (number) x coordinate of the end of the curve,\n     o         y: (number) y coordinate of the end of the curve\n     o     },\n     o     alpha: (number) angle of the curve derivative at the point\n     o }\n    \\*/\n    Snap.path.findDotsAtSegment = findDotsAtSegment;\n    /*\\\n     * Snap.path.bezierBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given cubic beziér curve\n     - p1x (number) x of the first point of the curve\n     - p1y (number) y of the first point of the curve\n     - c1x (number) x of the first anchor of the curve\n     - c1y (number) y of the first anchor of the curve\n     - c2x (number) x of the second anchor of the curve\n     - c2y (number) y of the second anchor of the curve\n     - p2x (number) x of the second point of the curve\n     - p2y (number) y of the second point of the curve\n     * or\n     - bez (array) array of six points for beziér curve\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.bezierBBox = bezierBBox;\n    /*\\\n     * Snap.path.isPointInsideBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside bounding box\n     - bbox (string) bounding box\n     - x (string) x coordinate of the point\n     - y (string) y coordinate of the point\n     = (boolean) `true` if point is inside\n    \\*/\n    Snap.path.isPointInsideBBox = isPointInsideBBox;\n    Snap.closest = function (x, y, X, Y) {\n        var r = 100,\n            b = box(x - r / 2, y - r / 2, r, r),\n            inside = [],\n            getter = X[0].hasOwnProperty(\"x\") ? function (i) {\n                return {\n                    x: X[i].x,\n                    y: X[i].y\n                };\n            } : function (i) {\n                return {\n                    x: X[i],\n                    y: Y[i]\n                };\n            },\n            found = 0;\n        while (r <= 1e6 && !found) {\n            for (var i = 0, ii = X.length; i < ii; i++) {\n                var xy = getter(i);\n                if (isPointInsideBBox(b, xy.x, xy.y)) {\n                    found++;\n                    inside.push(xy);\n                    break;\n                }\n            }\n            if (!found) {\n                r *= 2;\n                b = box(x - r / 2, y - r / 2, r, r)\n            }\n        }\n        if (r == 1e6) {\n            return;\n        }\n        var len = Infinity,\n            res;\n        for (i = 0, ii = inside.length; i < ii; i++) {\n            var l = Snap.len(x, y, inside[i].x, inside[i].y);\n            if (len > l) {\n                len = l;\n                inside[i].len = l;\n                res = inside[i];\n            }\n        }\n        return res;\n    };\n    /*\\\n     * Snap.path.isBBoxIntersect\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if two bounding boxes intersect\n     - bbox1 (string) first bounding box\n     - bbox2 (string) second bounding box\n     = (boolean) `true` if bounding boxes intersect\n    \\*/\n    Snap.path.isBBoxIntersect = isBBoxIntersect;\n    /*\\\n     * Snap.path.intersection\n     [ method ]\n     **\n     * Utility method\n     **\n     * Finds intersections of two paths\n     - path1 (string) path string\n     - path2 (string) path string\n     = (array) dots of intersection\n     o [\n     o     {\n     o         x: (number) x coordinate of the point,\n     o         y: (number) y coordinate of the point,\n     o         t1: (number) t value for segment of path1,\n     o         t2: (number) t value for segment of path2,\n     o         segment1: (number) order number for segment of path1,\n     o         segment2: (number) order number for segment of path2,\n     o         bez1: (array) eight coordinates representing beziér curve for the segment of path1,\n     o         bez2: (array) eight coordinates representing beziér curve for the segment of path2\n     o     }\n     o ]\n    \\*/\n    Snap.path.intersection = pathIntersection;\n    Snap.path.intersectionNumber = pathIntersectionNumber;\n    /*\\\n     * Snap.path.isPointInside\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns `true` if given point is inside a given closed path.\n     *\n     * Note: fill mode doesn’t affect the result of this method.\n     - path (string) path string\n     - x (number) x of the point\n     - y (number) y of the point\n     = (boolean) `true` if point is inside the path\n    \\*/\n    Snap.path.isPointInside = isPointInsidePath;\n    /*\\\n     * Snap.path.getBBox\n     [ method ]\n     **\n     * Utility method\n     **\n     * Returns the bounding box of a given path\n     - path (string) path string\n     = (object) bounding box\n     o {\n     o     x: (number) x coordinate of the left top point of the box,\n     o     y: (number) y coordinate of the left top point of the box,\n     o     x2: (number) x coordinate of the right bottom point of the box,\n     o     y2: (number) y coordinate of the right bottom point of the box,\n     o     width: (number) width of the box,\n     o     height: (number) height of the box\n     o }\n    \\*/\n    Snap.path.getBBox = pathBBox;\n    Snap.path.get = getPath;\n    /*\\\n     * Snap.path.toRelative\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into relative values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toRelative = pathToRelative;\n    /*\\\n     * Snap.path.toAbsolute\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path coordinates into absolute values\n     - path (string) path string\n     = (array) path string\n    \\*/\n    Snap.path.toAbsolute = pathToAbsolute;\n    /*\\\n     * Snap.path.toCubic\n     [ method ]\n     **\n     * Utility method\n     **\n     * Converts path to a new path where all segments are cubic beziér curves\n     - pathString (string|array) path string or array of segments\n     = (array) array of segments\n    \\*/\n    Snap.path.toCubic = path2curve;\n    /*\\\n     * Snap.path.map\n     [ method ]\n     **\n     * Transform the path string with the given matrix\n     - path (string) path string\n     - matrix (object) see @Matrix\n     = (string) transformed path string\n    \\*/\n    Snap.path.map = mapPath;\n    Snap.path.toString = toString;\n    Snap.path.clone = pathClone;\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var mmax = Math.max,\n        mmin = Math.min;\n\n    // Set\n    var Set = function (items) {\n        this.items = [];\n\tthis.bindings = {};\n        this.length = 0;\n        this.type = \"set\";\n        if (items) {\n            for (var i = 0, ii = items.length; i < ii; i++) {\n                if (items[i]) {\n                    this[this.items.length] = this.items[this.items.length] = items[i];\n                    this.length++;\n                }\n            }\n        }\n    },\n    setproto = Set.prototype;\n    /*\\\n     * Set.push\n     [ method ]\n     **\n     * Adds each argument to the current set\n     = (object) original element\n    \\*/\n    setproto.push = function () {\n        var item,\n            len;\n        for (var i = 0, ii = arguments.length; i < ii; i++) {\n            item = arguments[i];\n            if (item) {\n                len = this.items.length;\n                this[len] = this.items[len] = item;\n                this.length++;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.pop\n     [ method ]\n     **\n     * Removes last element and returns it\n     = (object) element\n    \\*/\n    setproto.pop = function () {\n        this.length && delete this[this.length--];\n        return this.items.pop();\n    };\n    /*\\\n     * Set.forEach\n     [ method ]\n     **\n     * Executes given function for each element in the set\n     *\n     * If the function returns `false`, the loop stops running.\n     **\n     - callback (function) function to run\n     - thisArg (object) context object for the callback\n     = (object) Set object\n    \\*/\n    setproto.forEach = function (callback, thisArg) {\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            if (callback.call(thisArg, this.items[i], i) === false) {\n                return this;\n            }\n        }\n        return this;\n    };\n    /*\\\n     * Set.animate\n     [ method ]\n     **\n     * Animates each element in set in sync.\n     *\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     * or\n     - animation (array) array of animation parameter for each element in set in format `[attrs, duration, easing, callback]`\n     > Usage\n     | // animate all elements in set to radius 10\n     | set.animate({r: 10}, 500, mina.easein);\n     | // or\n     | // animate first element to radius 10, but second to radius 20 and in different time\n     | set.animate([{r: 10}, 500, mina.easein], [{r: 20}, 1500, mina.easein]);\n     = (Element) the current element\n    \\*/\n    setproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Snap._.Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = easing.dur;\n            attrs = attrs.attr;\n        }\n        var args = arguments;\n        if (Snap.is(attrs, \"array\") && Snap.is(args[args.length - 1], \"array\")) {\n            var each = true;\n        }\n        var begin,\n            handler = function () {\n                if (begin) {\n                    this.b = begin;\n                } else {\n                    begin = this.b;\n                }\n            },\n            cb = 0,\n            set = this,\n            callbacker = callback && function () {\n                if (++cb == set.length) {\n                    callback.call(this);\n                }\n            };\n        return this.forEach(function (el, i) {\n            eve.once(\"snap.animcreated.\" + el.id, handler);\n            if (each) {\n                args[i] && el.animate.apply(el, args[i]);\n            } else {\n                el.animate(attrs, ms, easing, callbacker);\n            }\n        });\n    };\n    /*\\\n     * Set.remove\n     [ method ]\n     **\n     * Removes all children of the set.\n     *\n     = (object) Set object\n    \\*/\n    setproto.remove = function () {\n        while (this.length) {\n            this.pop().remove();\n        }\n        return this;\n    };\n    /*\\\n     * Set.bind\n     [ method ]\n     **\n     * Specifies how to handle a specific attribute when applied\n     * to a set.\n     *\n     **\n     - attr (string) attribute name\n     - callback (function) function to run\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     * or\n     - attr (string) attribute name\n     - element (Element) specific element in the set to apply the attribute to\n     - eattr (string) attribute on the element to bind the attribute to\n     = (object) Set object\n    \\*/\n    setproto.bind = function (attr, a, b) {\n        var data = {};\n        if (typeof a == \"function\") {\n            this.bindings[attr] = a;\n        } else {\n            var aname = b || attr;\n            this.bindings[attr] = function (v) {\n                data[aname] = v;\n                a.attr(data);\n            };\n        }\n        return this;\n    };\n    /*\\\n     * Set.attr\n     [ method ]\n     **\n     * Equivalent of @Element.attr.\n     = (object) Set object\n    \\*/\n    setproto.attr = function (value) {\n        var unbound = {};\n        for (var k in value) {\n            if (this.bindings[k]) {\n                this.bindings[k](value[k]);\n            } else {\n                unbound[k] = value[k];\n            }\n        }\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            this.items[i].attr(unbound);\n        }\n        return this;\n    };\n    /*\\\n     * Set.clear\n     [ method ]\n     **\n     * Removes all elements from the set\n    \\*/\n    setproto.clear = function () {\n        while (this.length) {\n            this.pop();\n        }\n    };\n    /*\\\n     * Set.splice\n     [ method ]\n     **\n     * Removes range of elements from the set\n     **\n     - index (number) position of the deletion\n     - count (number) number of element to remove\n     - insertion… (object) #optional elements to insert\n     = (object) set elements that were deleted\n    \\*/\n    setproto.splice = function (index, count, insertion) {\n        index = index < 0 ? mmax(this.length + index, 0) : index;\n        count = mmax(0, mmin(this.length - index, count));\n        var tail = [],\n            todel = [],\n            args = [],\n            i;\n        for (i = 2; i < arguments.length; i++) {\n            args.push(arguments[i]);\n        }\n        for (i = 0; i < count; i++) {\n            todel.push(this[index + i]);\n        }\n        for (; i < this.length - index; i++) {\n            tail.push(this[index + i]);\n        }\n        var arglen = args.length;\n        for (i = 0; i < arglen + tail.length; i++) {\n            this.items[index + i] = this[index + i] = i < arglen ? args[i] : tail[i - arglen];\n        }\n        i = this.items.length = this.length -= count - arglen;\n        while (this[i]) {\n            delete this[i++];\n        }\n        return new Set(todel);\n    };\n    /*\\\n     * Set.exclude\n     [ method ]\n     **\n     * Removes given element from the set\n     **\n     - element (object) element to remove\n     = (boolean) `true` if object was found and removed from the set\n    \\*/\n    setproto.exclude = function (el) {\n        for (var i = 0, ii = this.length; i < ii; i++) if (this[i] == el) {\n            this.splice(i, 1);\n            return true;\n        }\n        return false;\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Inserts set elements after given element.\n     **\n     - element (object) set will be inserted after this element\n     = (object) Set object\n    \\*/\n    setproto.insertAfter = function (el) {\n        var i = this.items.length;\n        while (i--) {\n            this.items[i].insertAfter(el);\n        }\n        return this;\n    };\n    /*\\\n     * Set.getBBox\n     [ method ]\n     **\n     * Union of all bboxes of the set. See @Element.getBBox.\n     = (object) bounding box descriptor. See @Element.getBBox.\n    \\*/\n    setproto.getBBox = function () {\n        var x = [],\n            y = [],\n            x2 = [],\n            y2 = [];\n        for (var i = this.items.length; i--;) if (!this.items[i].removed) {\n            var box = this.items[i].getBBox();\n            x.push(box.x);\n            y.push(box.y);\n            x2.push(box.x + box.width);\n            y2.push(box.y + box.height);\n        }\n        x = mmin.apply(0, x);\n        y = mmin.apply(0, y);\n        x2 = mmax.apply(0, x2);\n        y2 = mmax.apply(0, y2);\n        return {\n            x: x,\n            y: y,\n            x2: x2,\n            y2: y2,\n            width: x2 - x,\n            height: y2 - y,\n            cx: x + (x2 - x) / 2,\n            cy: y + (y2 - y) / 2\n        };\n    };\n    /*\\\n     * Set.insertAfter\n     [ method ]\n     **\n     * Creates a clone of the set.\n     **\n     = (object) New Set object\n    \\*/\n    setproto.clone = function (s) {\n        s = new Set;\n        for (var i = 0, ii = this.items.length; i < ii; i++) {\n            s.push(this.items[i].clone());\n        }\n        return s;\n    };\n    setproto.toString = function () {\n        return \"Snap\\u2018s set\";\n    };\n    setproto.type = \"set\";\n    // export\n    /*\\\n     * Snap.Set\n     [ property ]\n     **\n     * Set constructor.\n    \\*/\n    Snap.Set = Set;\n    /*\\\n     * Snap.set\n     [ method ]\n     **\n     * Creates a set and fills it with list of arguments.\n     **\n     = (object) New Set object\n     | var r = paper.rect(0, 0, 10, 10),\n     |     s1 = Snap.set(), // empty set\n     |     s2 = Snap.set(r, paper.circle(100, 100, 20)); // prefilled set\n    \\*/\n    Snap.set = function () {\n        var set = new Set;\n        if (arguments.length) {\n            set.push.apply(set, Array.prototype.slice.call(arguments, 0));\n        }\n        return set;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var names = {},\n        reUnit = /[%a-z]+$/i,\n        Str = String;\n    names.stroke = names.fill = \"colour\";\n    function getEmpty(item) {\n        var l = item[0];\n        switch (l.toLowerCase()) {\n            case \"t\": return [l, 0, 0];\n            case \"m\": return [l, 1, 0, 0, 1, 0, 0];\n            case \"r\": if (item.length == 4) {\n                return [l, 0, item[2], item[3]];\n            } else {\n                return [l, 0];\n            }\n            case \"s\": if (item.length == 5) {\n                return [l, 1, 1, item[3], item[4]];\n            } else if (item.length == 3) {\n                return [l, 1, 1];\n            } else {\n                return [l, 1];\n            }\n        }\n    }\n    function equaliseTransform(t1, t2, getBBox) {\n        t1 = t1 || new Snap.Matrix;\n        t2 = t2 || new Snap.Matrix;\n        t1 = Snap.parseTransformString(t1.toTransformString()) || [];\n        t2 = Snap.parseTransformString(t2.toTransformString()) || [];\n        var maxlength = Math.max(t1.length, t2.length),\n            from = [],\n            to = [],\n            i = 0, j, jj,\n            tt1, tt2;\n        for (; i < maxlength; i++) {\n            tt1 = t1[i] || getEmpty(t2[i]);\n            tt2 = t2[i] || getEmpty(tt1);\n            if (tt1[0] != tt2[0] ||\n                tt1[0].toLowerCase() == \"r\" && (tt1[2] != tt2[2] || tt1[3] != tt2[3]) ||\n                tt1[0].toLowerCase() == \"s\" && (tt1[3] != tt2[3] || tt1[4] != tt2[4])\n                ) {\n                    t1 = Snap._.transform2matrix(t1, getBBox());\n                    t2 = Snap._.transform2matrix(t2, getBBox());\n                    from = [[\"m\", t1.a, t1.b, t1.c, t1.d, t1.e, t1.f]];\n                    to = [[\"m\", t2.a, t2.b, t2.c, t2.d, t2.e, t2.f]];\n                    break;\n            }\n            from[i] = [];\n            to[i] = [];\n            for (j = 0, jj = Math.max(tt1.length, tt2.length); j < jj; j++) {\n                j in tt1 && (from[i][j] = tt1[j]);\n                j in tt2 && (to[i][j] = tt2[j]);\n            }\n        }\n        return {\n            from: path2array(from),\n            to: path2array(to),\n            f: getPath(from)\n        };\n    }\n    function getNumber(val) {\n        return val;\n    }\n    function getUnit(unit) {\n        return function (val) {\n            return +val.toFixed(3) + unit;\n        };\n    }\n    function getViewBox(val) {\n        return val.join(\" \");\n    }\n    function getColour(clr) {\n        return Snap.rgb(clr[0], clr[1], clr[2], clr[3]);\n    }\n    function getPath(path) {\n        var k = 0, i, ii, j, jj, out, a, b = [];\n        for (i = 0, ii = path.length; i < ii; i++) {\n            out = \"[\";\n            a = ['\"' + path[i][0] + '\"'];\n            for (j = 1, jj = path[i].length; j < jj; j++) {\n                a[j] = \"val[\" + k++ + \"]\";\n            }\n            out += a + \"]\";\n            b[i] = out;\n        }\n        return Function(\"val\", \"return Snap.path.toString.call([\" + b + \"])\");\n    }\n    function path2array(path) {\n        var out = [];\n        for (var i = 0, ii = path.length; i < ii; i++) {\n            for (var j = 1, jj = path[i].length; j < jj; j++) {\n                out.push(path[i][j]);\n            }\n        }\n        return out;\n    }\n    function isNumeric(obj) {\n        return isFinite(obj);\n    }\n    function arrayEqual(arr1, arr2) {\n        if (!Snap.is(arr1, \"array\") || !Snap.is(arr2, \"array\")) {\n            return false;\n        }\n        return arr1.toString() == arr2.toString();\n    }\n    Element.prototype.equal = function (name, b) {\n        return eve(\"snap.util.equal\", this, name, b).firstDefined();\n    };\n    eve.on(\"snap.util.equal\", function (name, b) {\n        var A, B, a = Str(this.attr(name) || \"\"),\n            el = this;\n        if (names[name] == \"colour\") {\n            A = Snap.color(a);\n            B = Snap.color(b);\n            return {\n                from: [A.r, A.g, A.b, A.opacity],\n                to: [B.r, B.g, B.b, B.opacity],\n                f: getColour\n            };\n        }\n        if (name == \"viewBox\") {\n            A = this.attr(name).vb.split(\" \").map(Number);\n            B = b.split(\" \").map(Number);\n            return {\n                from: A,\n                to: B,\n                f: getViewBox\n            };\n        }\n        if (name == \"transform\" || name == \"gradientTransform\" || name == \"patternTransform\") {\n            if (typeof b == \"string\") {\n                b = Str(b).replace(/\\.{3}|\\u2026/g, a);\n            }\n            a = this.matrix;\n            if (!Snap._.rgTransform.test(b)) {\n                b = Snap._.transform2matrix(Snap._.svgTransform2string(b), this.getBBox());\n            } else {\n                b = Snap._.transform2matrix(b, this.getBBox());\n            }\n            return equaliseTransform(a, b, function () {\n                return el.getBBox(1);\n            });\n        }\n        if (name == \"d\" || name == \"path\") {\n            A = Snap.path.toCubic(a, b);\n            return {\n                from: path2array(A[0]),\n                to: path2array(A[1]),\n                f: getPath(A[0])\n            };\n        }\n        if (name == \"points\") {\n            A = Str(a).split(Snap._.separator);\n            B = Str(b).split(Snap._.separator);\n            return {\n                from: A,\n                to: B,\n                f: function (val) { return val; }\n            };\n        }\n        if (isNumeric(a) && isNumeric(b)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getNumber\n            };\n        }\n        var aUnit = a.match(reUnit),\n            bUnit = Str(b).match(reUnit);\n        if (aUnit && arrayEqual(aUnit, bUnit)) {\n            return {\n                from: parseFloat(a),\n                to: parseFloat(b),\n                f: getUnit(aUnit)\n            };\n        } else {\n            return {\n                from: this.asPX(name),\n                to: this.asPX(name, b),\n                f: getNumber\n            };\n        }\n    });\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n// \n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n// \n// http://www.apache.org/licenses/LICENSE-2.0\n// \n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n    has = \"hasOwnProperty\",\n    supportsTouch = \"createTouch\" in glob.doc,\n    events = [\n        \"click\", \"dblclick\", \"mousedown\", \"mousemove\", \"mouseout\",\n        \"mouseover\", \"mouseup\", \"touchstart\", \"touchmove\", \"touchend\",\n        \"touchcancel\"\n    ],\n    touchMap = {\n        mousedown: \"touchstart\",\n        mousemove: \"touchmove\",\n        mouseup: \"touchend\"\n    },\n    getScroll = function (xy, el) {\n        var name = xy == \"y\" ? \"scrollTop\" : \"scrollLeft\",\n            doc = el && el.node ? el.node.ownerDocument : glob.doc;\n        return doc[name in doc.documentElement ? \"documentElement\" : \"body\"][name];\n    },\n    preventDefault = function () {\n        this.returnValue = false;\n    },\n    preventTouch = function () {\n        return this.originalEvent.preventDefault();\n    },\n    stopPropagation = function () {\n        this.cancelBubble = true;\n    },\n    stopTouch = function () {\n        return this.originalEvent.stopPropagation();\n    },\n    addEvent = function (obj, type, fn, element) {\n        var realName = supportsTouch && touchMap[type] ? touchMap[type] : type,\n            f = function (e) {\n                var scrollY = getScroll(\"y\", element),\n                    scrollX = getScroll(\"x\", element);\n                if (supportsTouch && touchMap[has](type)) {\n                    for (var i = 0, ii = e.targetTouches && e.targetTouches.length; i < ii; i++) {\n                        if (e.targetTouches[i].target == obj || obj.contains(e.targetTouches[i].target)) {\n                            var olde = e;\n                            e = e.targetTouches[i];\n                            e.originalEvent = olde;\n                            e.preventDefault = preventTouch;\n                            e.stopPropagation = stopTouch;\n                            break;\n                        }\n                    }\n                }\n                var x = e.clientX + scrollX,\n                    y = e.clientY + scrollY;\n                return fn.call(element, e, x, y);\n            };\n\n        if (type !== realName) {\n            obj.addEventListener(type, f, false);\n        }\n\n        obj.addEventListener(realName, f, false);\n\n        return function () {\n            if (type !== realName) {\n                obj.removeEventListener(type, f, false);\n            }\n\n            obj.removeEventListener(realName, f, false);\n            return true;\n        };\n    },\n    drag = [],\n    dragMove = function (e) {\n        var x = e.clientX,\n            y = e.clientY,\n            scrollY = getScroll(\"y\"),\n            scrollX = getScroll(\"x\"),\n            dragi,\n            j = drag.length;\n        while (j--) {\n            dragi = drag[j];\n            if (supportsTouch) {\n                var i = e.touches && e.touches.length,\n                    touch;\n                while (i--) {\n                    touch = e.touches[i];\n                    if (touch.identifier == dragi.el._drag.id || dragi.el.node.contains(touch.target)) {\n                        x = touch.clientX;\n                        y = touch.clientY;\n                        (e.originalEvent ? e.originalEvent : e).preventDefault();\n                        break;\n                    }\n                }\n            } else {\n                e.preventDefault();\n            }\n            var node = dragi.el.node,\n                o,\n                next = node.nextSibling,\n                parent = node.parentNode,\n                display = node.style.display;\n            // glob.win.opera && parent.removeChild(node);\n            // node.style.display = \"none\";\n            // o = dragi.el.paper.getElementByPoint(x, y);\n            // node.style.display = display;\n            // glob.win.opera && (next ? parent.insertBefore(node, next) : parent.appendChild(node));\n            // o && eve(\"snap.drag.over.\" + dragi.el.id, dragi.el, o);\n            x += scrollX;\n            y += scrollY;\n            eve(\"snap.drag.move.\" + dragi.el.id, dragi.move_scope || dragi.el, x - dragi.el._drag.x, y - dragi.el._drag.y, x, y, e);\n        }\n    },\n    dragUp = function (e) {\n        Snap.unmousemove(dragMove).unmouseup(dragUp);\n        var i = drag.length,\n            dragi;\n        while (i--) {\n            dragi = drag[i];\n            dragi.el._drag = {};\n            eve(\"snap.drag.end.\" + dragi.el.id, dragi.end_scope || dragi.start_scope || dragi.move_scope || dragi.el, e);\n            eve.off(\"snap.drag.*.\" + dragi.el.id);\n        }\n        drag = [];\n    };\n    /*\\\n     * Element.click\n     [ method ]\n     **\n     * Adds a click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unclick\n     [ method ]\n     **\n     * Removes a click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.dblclick\n     [ method ]\n     **\n     * Adds a double click event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.undblclick\n     [ method ]\n     **\n     * Removes a double click event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousedown\n     [ method ]\n     **\n     * Adds a mousedown event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousedown\n     [ method ]\n     **\n     * Removes a mousedown event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mousemove\n     [ method ]\n     **\n     * Adds a mousemove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmousemove\n     [ method ]\n     **\n     * Removes a mousemove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseout\n     [ method ]\n     **\n     * Adds a mouseout event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseout\n     [ method ]\n     **\n     * Removes a mouseout event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseover\n     [ method ]\n     **\n     * Adds a mouseover event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseover\n     [ method ]\n     **\n     * Removes a mouseover event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.mouseup\n     [ method ]\n     **\n     * Adds a mouseup event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.unmouseup\n     [ method ]\n     **\n     * Removes a mouseup event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchstart\n     [ method ]\n     **\n     * Adds a touchstart event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchstart\n     [ method ]\n     **\n     * Removes a touchstart event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchmove\n     [ method ]\n     **\n     * Adds a touchmove event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchmove\n     [ method ]\n     **\n     * Removes a touchmove event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchend\n     [ method ]\n     **\n     * Adds a touchend event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchend\n     [ method ]\n     **\n     * Removes a touchend event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    \n    /*\\\n     * Element.touchcancel\n     [ method ]\n     **\n     * Adds a touchcancel event handler to the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    /*\\\n     * Element.untouchcancel\n     [ method ]\n     **\n     * Removes a touchcancel event handler from the element\n     - handler (function) handler for the event\n     = (object) @Element\n    \\*/\n    for (var i = events.length; i--;) {\n        (function (eventName) {\n            Snap[eventName] = elproto[eventName] = function (fn, scope) {\n                if (Snap.is(fn, \"function\")) {\n                    this.events = this.events || [];\n                    this.events.push({\n                        name: eventName,\n                        f: fn,\n                        unbind: addEvent(this.node || document, eventName, fn, scope || this)\n                    });\n                } else {\n                    for (var i = 0, ii = this.events.length; i < ii; i++) if (this.events[i].name == eventName) {\n                        try {\n                            this.events[i].f.call(this);\n                        } catch (e) {}\n                    }\n                }\n                return this;\n            };\n            Snap[\"un\" + eventName] =\n            elproto[\"un\" + eventName] = function (fn) {\n                var events = this.events || [],\n                    l = events.length;\n                while (l--) if (events[l].name == eventName &&\n                               (events[l].f == fn || !fn)) {\n                    events[l].unbind();\n                    events.splice(l, 1);\n                    !events.length && delete this.events;\n                    return this;\n                }\n                return this;\n            };\n        })(events[i]);\n    }\n    /*\\\n     * Element.hover\n     [ method ]\n     **\n     * Adds hover event handlers to the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     - icontext (object) #optional context for hover in handler\n     - ocontext (object) #optional context for hover out handler\n     = (object) @Element\n    \\*/\n    elproto.hover = function (f_in, f_out, scope_in, scope_out) {\n        return this.mouseover(f_in, scope_in).mouseout(f_out, scope_out || scope_in);\n    };\n    /*\\\n     * Element.unhover\n     [ method ]\n     **\n     * Removes hover event handlers from the element\n     - f_in (function) handler for hover in\n     - f_out (function) handler for hover out\n     = (object) @Element\n    \\*/\n    elproto.unhover = function (f_in, f_out) {\n        return this.unmouseover(f_in).unmouseout(f_out);\n    };\n    var draggable = [];\n    // SIERRA unclear what _context_ refers to for starting, ending, moving the drag gesture.\n    // SIERRA Element.drag(): _x position of the mouse_: Where are the x/y values offset from?\n    // SIERRA Element.drag(): much of this member's doc appears to be duplicated for some reason.\n    // SIERRA Unclear about this sentence: _Additionally following drag events will be triggered: drag.start.<id> on start, drag.end.<id> on end and drag.move.<id> on every move._ Is there a global _drag_ object to which you can assign handlers keyed by an element's ID?\n    /*\\\n     * Element.drag\n     [ method ]\n     **\n     * Adds event handlers for an element's drag gesture\n     **\n     - onmove (function) handler for moving\n     - onstart (function) handler for drag start\n     - onend (function) handler for drag end\n     - mcontext (object) #optional context for moving handler\n     - scontext (object) #optional context for drag start handler\n     - econtext (object) #optional context for drag end handler\n     * Additionaly following `drag` events are triggered: `drag.start.<id>` on start, \n     * `drag.end.<id>` on end and `drag.move.<id>` on every move. When element is dragged over another element \n     * `drag.over.<id>` fires as well.\n     *\n     * Start event and start handler are called in specified context or in context of the element with following parameters:\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * Move event and move handler are called in specified context or in context of the element with following parameters:\n     o dx (number) shift by x from the start point\n     o dy (number) shift by y from the start point\n     o x (number) x position of the mouse\n     o y (number) y position of the mouse\n     o event (object) DOM event object\n     * End event and end handler are called in specified context or in context of the element with following parameters:\n     o event (object) DOM event object\n     = (object) @Element\n    \\*/\n    elproto.drag = function (onmove, onstart, onend, move_scope, start_scope, end_scope) {\n        var el = this;\n        if (!arguments.length) {\n            var origTransform;\n            return el.drag(function (dx, dy) {\n                this.attr({\n                    transform: origTransform + (origTransform ? \"T\" : \"t\") + [dx, dy]\n                });\n            }, function () {\n                origTransform = this.transform().local;\n            });\n        }\n        function start(e, x, y) {\n            (e.originalEvent || e).preventDefault();\n            el._drag.x = x;\n            el._drag.y = y;\n            el._drag.id = e.identifier;\n            !drag.length && Snap.mousemove(dragMove).mouseup(dragUp);\n            drag.push({el: el, move_scope: move_scope, start_scope: start_scope, end_scope: end_scope});\n            onstart && eve.on(\"snap.drag.start.\" + el.id, onstart);\n            onmove && eve.on(\"snap.drag.move.\" + el.id, onmove);\n            onend && eve.on(\"snap.drag.end.\" + el.id, onend);\n            eve(\"snap.drag.start.\" + el.id, start_scope || move_scope || el, x, y, e);\n        }\n        function init(e, x, y) {\n            eve(\"snap.draginit.\" + el.id, el, e, x, y);\n        }\n        eve.on(\"snap.draginit.\" + el.id, start);\n        el._drag = {};\n        draggable.push({el: el, start: start, init: init});\n        el.mousedown(init);\n        return el;\n    };\n    /*\n     * Element.onDragOver\n     [ method ]\n     **\n     * Shortcut to assign event handler for `drag.over.<id>` event, where `id` is the element's `id` (see @Element.id)\n     - f (function) handler for event, first argument would be the element you are dragging over\n    \\*/\n    // elproto.onDragOver = function (f) {\n    //     f ? eve.on(\"snap.drag.over.\" + this.id, f) : eve.unbind(\"snap.drag.over.\" + this.id);\n    // };\n    /*\\\n     * Element.undrag\n     [ method ]\n     **\n     * Removes all drag event handlers from the given element\n    \\*/\n    elproto.undrag = function () {\n        var i = draggable.length;\n        while (i--) if (draggable[i].el == this) {\n            this.unmousedown(draggable[i].init);\n            draggable.splice(i, 1);\n            eve.unbind(\"snap.drag.*.\" + this.id);\n            eve.unbind(\"snap.draginit.\" + this.id);\n        }\n        !draggable.length && Snap.unmousemove(dragMove).unmouseup(dragUp);\n        return this;\n    };\n});\n\n// Copyright (c) 2013 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    var elproto = Element.prototype,\n        pproto = Paper.prototype,\n        rgurl = /^\\s*url\\((.+)\\)/,\n        Str = String,\n        $ = Snap._.$;\n    Snap.filter = {};\n    /*\\\n     * Paper.filter\n     [ method ]\n     **\n     * Creates a `<filter>` element\n     **\n     - filstr (string) SVG fragment of filter provided as a string\n     = (object) @Element\n     * Note: It is recommended to use filters embedded into the page inside an empty SVG element.\n     > Usage\n     | var f = paper.filter('<feGaussianBlur stdDeviation=\"2\"/>'),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    pproto.filter = function (filstr) {\n        var paper = this;\n        if (paper.type != \"svg\") {\n            paper = paper.paper;\n        }\n        var f = Snap.parse(Str(filstr)),\n            id = Snap._.id(),\n            width = paper.node.offsetWidth,\n            height = paper.node.offsetHeight,\n            filter = $(\"filter\");\n        $(filter, {\n            id: id,\n            filterUnits: \"userSpaceOnUse\"\n        });\n        filter.appendChild(f.node);\n        paper.defs.appendChild(filter);\n        return new Element(filter);\n    };\n\n    eve.on(\"snap.util.getattr.filter\", function () {\n        eve.stop();\n        var p = $(this.node, \"filter\");\n        if (p) {\n            var match = Str(p).match(rgurl);\n            return match && Snap.select(match[1]);\n        }\n    });\n    eve.on(\"snap.util.attr.filter\", function (value) {\n        if (value instanceof Element && value.type == \"filter\") {\n            eve.stop();\n            var id = value.node.id;\n            if (!id) {\n                $(value.node, {id: value.id});\n                id = value.id;\n            }\n            $(this.node, {\n                filter: Snap.url(id)\n            });\n        }\n        if (!value || value == \"none\") {\n            eve.stop();\n            this.node.removeAttribute(\"filter\");\n        }\n    });\n    /*\\\n     * Snap.filter.blur\n     [ method ]\n     **\n     * Returns an SVG markup string for the blur filter\n     **\n     - x (number) amount of horizontal blur, in pixels\n     - y (number) #optional amount of vertical blur, in pixels\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.blur(5, 10)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.blur = function (x, y) {\n        if (x == null) {\n            x = 2;\n        }\n        var def = y == null ? x : [x, y];\n        return Snap.format('\\<feGaussianBlur stdDeviation=\"{def}\"/>', {\n            def: def\n        });\n    };\n    Snap.filter.blur.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.shadow\n     [ method ]\n     **\n     * Returns an SVG markup string for the shadow filter\n     **\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - blur (number) #optional amount of blur\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - color (string) #optional color of the shadow\n     - opacity (number) #optional `0..1` opacity of the shadow\n     * which makes blur default to `4`. Or\n     - dx (number) #optional horizontal shift of the shadow, in pixels\n     - dy (number) #optional vertical shift of the shadow, in pixels\n     - opacity (number) #optional `0..1` opacity of the shadow\n     = (string) filter representation\n     > Usage\n     | var f = paper.filter(Snap.filter.shadow(0, 2, .3)),\n     |     c = paper.circle(10, 10, 10).attr({\n     |         filter: f\n     |     });\n    \\*/\n    Snap.filter.shadow = function (dx, dy, blur, color, opacity) {\n        if (opacity == null) {\n            if (color == null) {\n                opacity = blur;\n                blur = 4;\n                color = \"#000\";\n            } else {\n                opacity = color;\n                color = blur;\n                blur = 4;\n            }\n        }\n        if (blur == null) {\n            blur = 4;\n        }\n        if (opacity == null) {\n            opacity = 1;\n        }\n        if (dx == null) {\n            dx = 0;\n            dy = 2;\n        }\n        if (dy == null) {\n            dy = dx;\n        }\n        color = Snap.color(color);\n        return Snap.format('<feGaussianBlur in=\"SourceAlpha\" stdDeviation=\"{blur}\"/><feOffset dx=\"{dx}\" dy=\"{dy}\" result=\"offsetblur\"/><feFlood flood-color=\"{color}\"/><feComposite in2=\"offsetblur\" operator=\"in\"/><feComponentTransfer><feFuncA type=\"linear\" slope=\"{opacity}\"/></feComponentTransfer><feMerge><feMergeNode/><feMergeNode in=\"SourceGraphic\"/></feMerge>', {\n            color: color,\n            dx: dx,\n            dy: dy,\n            blur: blur,\n            opacity: opacity\n        });\n    };\n    Snap.filter.shadow.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.grayscale\n     [ method ]\n     **\n     * Returns an SVG markup string for the grayscale filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.grayscale = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {b} {h} 0 0 0 0 0 1 0\"/>', {\n            a: 0.2126 + 0.7874 * (1 - amount),\n            b: 0.7152 - 0.7152 * (1 - amount),\n            c: 0.0722 - 0.0722 * (1 - amount),\n            d: 0.2126 - 0.2126 * (1 - amount),\n            e: 0.7152 + 0.2848 * (1 - amount),\n            f: 0.0722 - 0.0722 * (1 - amount),\n            g: 0.2126 - 0.2126 * (1 - amount),\n            h: 0.0722 + 0.9278 * (1 - amount)\n        });\n    };\n    Snap.filter.grayscale.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.sepia\n     [ method ]\n     **\n     * Returns an SVG markup string for the sepia filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.sepia = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"matrix\" values=\"{a} {b} {c} 0 0 {d} {e} {f} 0 0 {g} {h} {i} 0 0 0 0 0 1 0\"/>', {\n            a: 0.393 + 0.607 * (1 - amount),\n            b: 0.769 - 0.769 * (1 - amount),\n            c: 0.189 - 0.189 * (1 - amount),\n            d: 0.349 - 0.349 * (1 - amount),\n            e: 0.686 + 0.314 * (1 - amount),\n            f: 0.168 - 0.168 * (1 - amount),\n            g: 0.272 - 0.272 * (1 - amount),\n            h: 0.534 - 0.534 * (1 - amount),\n            i: 0.131 + 0.869 * (1 - amount)\n        });\n    };\n    Snap.filter.sepia.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.saturate\n     [ method ]\n     **\n     * Returns an SVG markup string for the saturate filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.saturate = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feColorMatrix type=\"saturate\" values=\"{amount}\"/>', {\n            amount: 1 - amount\n        });\n    };\n    Snap.filter.saturate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.hueRotate\n     [ method ]\n     **\n     * Returns an SVG markup string for the hue-rotate filter\n     **\n     - angle (number) angle of rotation\n     = (string) filter representation\n    \\*/\n    Snap.filter.hueRotate = function (angle) {\n        angle = angle || 0;\n        return Snap.format('<feColorMatrix type=\"hueRotate\" values=\"{angle}\"/>', {\n            angle: angle\n        });\n    };\n    Snap.filter.hueRotate.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.invert\n     [ method ]\n     **\n     * Returns an SVG markup string for the invert filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.invert = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n//        <feColorMatrix type=\"matrix\" values=\"-1 0 0 0 1  0 -1 0 0 1  0 0 -1 0 1  0 0 0 1 0\" color-interpolation-filters=\"sRGB\"/>\n        return Snap.format('<feComponentTransfer><feFuncR type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncG type=\"table\" tableValues=\"{amount} {amount2}\"/><feFuncB type=\"table\" tableValues=\"{amount} {amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: 1 - amount\n        });\n    };\n    Snap.filter.invert.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.brightness\n     [ method ]\n     **\n     * Returns an SVG markup string for the brightness filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.brightness = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\"/><feFuncG type=\"linear\" slope=\"{amount}\"/><feFuncB type=\"linear\" slope=\"{amount}\"/></feComponentTransfer>', {\n            amount: amount\n        });\n    };\n    Snap.filter.brightness.toString = function () {\n        return this();\n    };\n    /*\\\n     * Snap.filter.contrast\n     [ method ]\n     **\n     * Returns an SVG markup string for the contrast filter\n     **\n     - amount (number) amount of filter (`0..1`)\n     = (string) filter representation\n    \\*/\n    Snap.filter.contrast = function (amount) {\n        if (amount == null) {\n            amount = 1;\n        }\n        return Snap.format('<feComponentTransfer><feFuncR type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncG type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/><feFuncB type=\"linear\" slope=\"{amount}\" intercept=\"{amount2}\"/></feComponentTransfer>', {\n            amount: amount,\n            amount2: .5 - amount / 2\n        });\n    };\n    Snap.filter.contrast.toString = function () {\n        return this();\n    };\n});\n\n// Copyright (c) 2014 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var box = Snap._.box,\n        is = Snap.is,\n        firstLetter = /^[^a-z]*([tbmlrc])/i,\n        toString = function () {\n            return \"T\" + this.dx + \",\" + this.dy;\n        };\n    /*\\\n     * Element.getAlign\n     [ method ]\n     **\n     * Returns shift needed to align the element relatively to given element.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object|string) Object in format `{dx: , dy: }` also has a string representation as a transformation string\n     > Usage\n     | el.transform(el.getAlign(el2, \"top\"));\n     * or\n     | var dy = el.getAlign(el2, \"top\").dy;\n    \\*/\n    Element.prototype.getAlign = function (el, way) {\n        if (way == null && is(el, \"string\")) {\n            way = el;\n            el = null;\n        }\n        el = el || this.paper;\n        var bx = el.getBBox ? el.getBBox() : box(el),\n            bb = this.getBBox(),\n            out = {};\n        way = way && way.match(firstLetter);\n        way = way ? way[1].toLowerCase() : \"c\";\n        switch (way) {\n            case \"t\":\n                out.dx = 0;\n                out.dy = bx.y - bb.y;\n            break;\n            case \"b\":\n                out.dx = 0;\n                out.dy = bx.y2 - bb.y2;\n            break;\n            case \"m\":\n                out.dx = 0;\n                out.dy = bx.cy - bb.cy;\n            break;\n            case \"l\":\n                out.dx = bx.x - bb.x;\n                out.dy = 0;\n            break;\n            case \"r\":\n                out.dx = bx.x2 - bb.x2;\n                out.dy = 0;\n            break;\n            default:\n                out.dx = bx.cx - bb.cx;\n                out.dy = 0;\n            break;\n        }\n        out.toString = toString;\n        return out;\n    };\n    /*\\\n     * Element.align\n     [ method ]\n     **\n     * Aligns the element relatively to given one via transformation.\n     * If no elements specified, parent `<svg>` container will be used.\n     - el (object) @optional alignment element\n     - way (string) one of six values: `\"top\"`, `\"middle\"`, `\"bottom\"`, `\"left\"`, `\"center\"`, `\"right\"`\n     = (object) this element\n     > Usage\n     | el.align(el2, \"top\");\n     * or\n     | el.align(\"middle\");\n    \\*/\n    Element.prototype.align = function (el, way) {\n        return this.transform(\"...\" + this.getAlign(el, way));\n    };\n});\n\n// Copyright (c) 2016 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob, Fragment) {\n    var elproto = Element.prototype,\n        is = Snap.is,\n        Str = String,\n        has = \"hasOwnProperty\";\n    function slice(from, to, f) {\n        return function (arr) {\n            var res = arr.slice(from, to);\n            if (res.length == 1) {\n                res = res[0];\n            }\n            return f ? f(res) : res;\n        };\n    }\n    var Animation = function (attr, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        this.attr = attr;\n        this.dur = ms;\n        easing && (this.easing = easing);\n        callback && (this.callback = callback);\n    };\n    Snap._.Animation = Animation;\n    /*\\\n     * Snap.animation\n     [ method ]\n     **\n     * Creates an animation object\n     **\n     - attr (object) attributes of final destination\n     - duration (number) duration of the animation, in milliseconds\n     - easing (function) #optional one of easing functions of @mina or custom one\n     - callback (function) #optional callback function that fires when animation ends\n     = (object) animation object\n    \\*/\n    Snap.animation = function (attr, ms, easing, callback) {\n        return new Animation(attr, ms, easing, callback);\n    };\n    /*\\\n     * Element.inAnim\n     [ method ]\n     **\n     * Returns a set of animations that may be able to manipulate the current element\n     **\n     = (object) in format:\n     o {\n     o     anim (object) animation object,\n     o     mina (object) @mina object,\n     o     curStatus (number) 0..1 — status of the animation: 0 — just started, 1 — just finished,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n    \\*/\n    elproto.inAnim = function () {\n        var el = this,\n            res = [];\n        for (var id in el.anims) if (el.anims[has](id)) {\n            (function (a) {\n                res.push({\n                    anim: new Animation(a._attrs, a.dur, a.easing, a._callback),\n                    mina: a,\n                    curStatus: a.status(),\n                    status: function (val) {\n                        return a.status(val);\n                    },\n                    stop: function () {\n                        a.stop();\n                    }\n                });\n            }(el.anims[id]));\n        }\n        return res;\n    };\n    /*\\\n     * Snap.animate\n     [ method ]\n     **\n     * Runs generic animation of one number into another with a caring function\n     **\n     - from (number|array) number or array of numbers\n     - to (number|array) number or array of numbers\n     - setter (function) caring function that accepts one number argument\n     - duration (number) duration, in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function to execute when animation ends\n     = (object) animation object in @mina format\n     o {\n     o     id (string) animation id, consider it read-only,\n     o     duration (function) gets or sets the duration of the animation,\n     o     easing (function) easing,\n     o     speed (function) gets or sets the speed of the animation,\n     o     status (function) gets or sets the status of the animation,\n     o     stop (function) stops the animation\n     o }\n     | var rect = Snap().rect(0, 0, 10, 10);\n     | Snap.animate(0, 10, function (val) {\n     |     rect.attr({\n     |         x: val\n     |     });\n     | }, 1000);\n     | // in given context is equivalent to\n     | rect.animate({x: 10}, 1000);\n    \\*/\n    Snap.animate = function (from, to, setter, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        var now = mina.time(),\n            anim = mina(from, to, now, now + ms, mina.time, setter, easing);\n        callback && eve.once(\"mina.finish.\" + anim.id, callback);\n        return anim;\n    };\n    /*\\\n     * Element.stop\n     [ method ]\n     **\n     * Stops all the animations for the current element\n     **\n     = (Element) the current element\n    \\*/\n    elproto.stop = function () {\n        var anims = this.inAnim();\n        for (var i = 0, ii = anims.length; i < ii; i++) {\n            anims[i].stop();\n        }\n        return this;\n    };\n    /*\\\n     * Element.animate\n     [ method ]\n     **\n     * Animates the given attributes of the element\n     **\n     - attrs (object) key-value pairs of destination attributes\n     - duration (number) duration of the animation in milliseconds\n     - easing (function) #optional easing function from @mina or custom\n     - callback (function) #optional callback function that executes when the animation ends\n     = (Element) the current element\n    \\*/\n    elproto.animate = function (attrs, ms, easing, callback) {\n        if (typeof easing == \"function\" && !easing.length) {\n            callback = easing;\n            easing = mina.linear;\n        }\n        if (attrs instanceof Animation) {\n            callback = attrs.callback;\n            easing = attrs.easing;\n            ms = attrs.dur;\n            attrs = attrs.attr;\n        }\n        var fkeys = [], tkeys = [], keys = {}, from, to, f, eq,\n            el = this;\n        for (var key in attrs) if (attrs[has](key)) {\n            if (el.equal) {\n                eq = el.equal(key, Str(attrs[key]));\n                from = eq.from;\n                to = eq.to;\n                f = eq.f;\n            } else {\n                from = +el.attr(key);\n                to = +attrs[key];\n            }\n            var len = is(from, \"array\") ? from.length : 1;\n            keys[key] = slice(fkeys.length, fkeys.length + len, f);\n            fkeys = fkeys.concat(from);\n            tkeys = tkeys.concat(to);\n        }\n        var now = mina.time(),\n            anim = mina(fkeys, tkeys, now, now + ms, mina.time, function (val) {\n                var attr = {};\n                for (var key in keys) if (keys[has](key)) {\n                    attr[key] = keys[key](val);\n                }\n                el.attr(attr);\n            }, easing);\n        el.anims[anim.id] = anim;\n        anim._attrs = attrs;\n        anim._callback = callback;\n        eve(\"snap.animcreated.\" + el.id, anim);\n        eve.once(\"mina.finish.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n            callback && callback.call(el);\n        });\n        eve.once(\"mina.stop.\" + anim.id, function () {\n            eve.off(\"mina.*.\" + anim.id);\n            delete el.anims[anim.id];\n        });\n        return el;\n    };\n});\n\n// Copyright (c) 2017 Adobe Systems Incorporated. All rights reserved.\n//\n// Licensed under the Apache License, Version 2.0 (the \"License\");\n// you may not use this file except in compliance with the License.\n// You may obtain a copy of the License at\n//\n// http://www.apache.org/licenses/LICENSE-2.0\n//\n// Unless required by applicable law or agreed to in writing, software\n// distributed under the License is distributed on an \"AS IS\" BASIS,\n// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n// See the License for the specific language governing permissions and\n// limitations under the License.\nSnap.plugin(function (Snap, Element, Paper, glob) {\n    // Colours are from https://www.materialui.co\n    var red         = \"#ffebee#ffcdd2#ef9a9a#e57373#ef5350#f44336#e53935#d32f2f#c62828#b71c1c#ff8a80#ff5252#ff1744#d50000\",\n        pink        = \"#FCE4EC#F8BBD0#F48FB1#F06292#EC407A#E91E63#D81B60#C2185B#AD1457#880E4F#FF80AB#FF4081#F50057#C51162\",\n        purple      = \"#F3E5F5#E1BEE7#CE93D8#BA68C8#AB47BC#9C27B0#8E24AA#7B1FA2#6A1B9A#4A148C#EA80FC#E040FB#D500F9#AA00FF\",\n        deeppurple  = \"#EDE7F6#D1C4E9#B39DDB#9575CD#7E57C2#673AB7#5E35B1#512DA8#4527A0#311B92#B388FF#7C4DFF#651FFF#6200EA\",\n        indigo      = \"#E8EAF6#C5CAE9#9FA8DA#7986CB#5C6BC0#3F51B5#3949AB#303F9F#283593#1A237E#8C9EFF#536DFE#3D5AFE#304FFE\",\n        blue        = \"#E3F2FD#BBDEFB#90CAF9#64B5F6#64B5F6#2196F3#1E88E5#1976D2#1565C0#0D47A1#82B1FF#448AFF#2979FF#2962FF\",\n        lightblue   = \"#E1F5FE#B3E5FC#81D4FA#4FC3F7#29B6F6#03A9F4#039BE5#0288D1#0277BD#01579B#80D8FF#40C4FF#00B0FF#0091EA\",\n        cyan        = \"#E0F7FA#B2EBF2#80DEEA#4DD0E1#26C6DA#00BCD4#00ACC1#0097A7#00838F#006064#84FFFF#18FFFF#00E5FF#00B8D4\",\n        teal        = \"#E0F2F1#B2DFDB#80CBC4#4DB6AC#26A69A#009688#00897B#00796B#00695C#004D40#A7FFEB#64FFDA#1DE9B6#00BFA5\",\n        green       = \"#E8F5E9#C8E6C9#A5D6A7#81C784#66BB6A#4CAF50#43A047#388E3C#2E7D32#1B5E20#B9F6CA#69F0AE#00E676#00C853\",\n        lightgreen  = \"#F1F8E9#DCEDC8#C5E1A5#AED581#9CCC65#8BC34A#7CB342#689F38#558B2F#33691E#CCFF90#B2FF59#76FF03#64DD17\",\n        lime        = \"#F9FBE7#F0F4C3#E6EE9C#DCE775#D4E157#CDDC39#C0CA33#AFB42B#9E9D24#827717#F4FF81#EEFF41#C6FF00#AEEA00\",\n        yellow      = \"#FFFDE7#FFF9C4#FFF59D#FFF176#FFEE58#FFEB3B#FDD835#FBC02D#F9A825#F57F17#FFFF8D#FFFF00#FFEA00#FFD600\",\n        amber       = \"#FFF8E1#FFECB3#FFE082#FFD54F#FFCA28#FFC107#FFB300#FFA000#FF8F00#FF6F00#FFE57F#FFD740#FFC400#FFAB00\",\n        orange      = \"#FFF3E0#FFE0B2#FFCC80#FFB74D#FFA726#FF9800#FB8C00#F57C00#EF6C00#E65100#FFD180#FFAB40#FF9100#FF6D00\",\n        deeporange  = \"#FBE9E7#FFCCBC#FFAB91#FF8A65#FF7043#FF5722#F4511E#E64A19#D84315#BF360C#FF9E80#FF6E40#FF3D00#DD2C00\",\n        brown       = \"#EFEBE9#D7CCC8#BCAAA4#A1887F#8D6E63#795548#6D4C41#5D4037#4E342E#3E2723\",\n        grey        = \"#FAFAFA#F5F5F5#EEEEEE#E0E0E0#BDBDBD#9E9E9E#757575#616161#424242#212121\",\n        bluegrey    = \"#ECEFF1#CFD8DC#B0BEC5#90A4AE#78909C#607D8B#546E7A#455A64#37474F#263238\";\n    /*\\\n     * Snap.mui\n     [ property ]\n     **\n     * Contain Material UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.mui.deeppurple, stroke: Snap.mui.amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.mui = {};\n    /*\\\n     * Snap.flat\n     [ property ]\n     **\n     * Contain Flat UI colours.\n     | Snap().rect(0, 0, 10, 10).attr({fill: Snap.flat.carrot, stroke: Snap.flat.wetasphalt});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.flat = {};\n    function saveColor(colors) {\n        colors = colors.split(/(?=#)/);\n        var color = new String(colors[5]);\n        color[50] = colors[0];\n        color[100] = colors[1];\n        color[200] = colors[2];\n        color[300] = colors[3];\n        color[400] = colors[4];\n        color[500] = colors[5];\n        color[600] = colors[6];\n        color[700] = colors[7];\n        color[800] = colors[8];\n        color[900] = colors[9];\n        if (colors[10]) {\n            color.A100 = colors[10];\n            color.A200 = colors[11];\n            color.A400 = colors[12];\n            color.A700 = colors[13];\n        }\n        return color;\n    }\n    Snap.mui.red = saveColor(red);\n    Snap.mui.pink = saveColor(pink);\n    Snap.mui.purple = saveColor(purple);\n    Snap.mui.deeppurple = saveColor(deeppurple);\n    Snap.mui.indigo = saveColor(indigo);\n    Snap.mui.blue = saveColor(blue);\n    Snap.mui.lightblue = saveColor(lightblue);\n    Snap.mui.cyan = saveColor(cyan);\n    Snap.mui.teal = saveColor(teal);\n    Snap.mui.green = saveColor(green);\n    Snap.mui.lightgreen = saveColor(lightgreen);\n    Snap.mui.lime = saveColor(lime);\n    Snap.mui.yellow = saveColor(yellow);\n    Snap.mui.amber = saveColor(amber);\n    Snap.mui.orange = saveColor(orange);\n    Snap.mui.deeporange = saveColor(deeporange);\n    Snap.mui.brown = saveColor(brown);\n    Snap.mui.grey = saveColor(grey);\n    Snap.mui.bluegrey = saveColor(bluegrey);\n    Snap.flat.turquoise = \"#1abc9c\";\n    Snap.flat.greensea = \"#16a085\";\n    Snap.flat.sunflower = \"#f1c40f\";\n    Snap.flat.orange = \"#f39c12\";\n    Snap.flat.emerland = \"#2ecc71\";\n    Snap.flat.nephritis = \"#27ae60\";\n    Snap.flat.carrot = \"#e67e22\";\n    Snap.flat.pumpkin = \"#d35400\";\n    Snap.flat.peterriver = \"#3498db\";\n    Snap.flat.belizehole = \"#2980b9\";\n    Snap.flat.alizarin = \"#e74c3c\";\n    Snap.flat.pomegranate = \"#c0392b\";\n    Snap.flat.amethyst = \"#9b59b6\";\n    Snap.flat.wisteria = \"#8e44ad\";\n    Snap.flat.clouds = \"#ecf0f1\";\n    Snap.flat.silver = \"#bdc3c7\";\n    Snap.flat.wetasphalt = \"#34495e\";\n    Snap.flat.midnightblue = \"#2c3e50\";\n    Snap.flat.concrete = \"#95a5a6\";\n    Snap.flat.asbestos = \"#7f8c8d\";\n    /*\\\n     * Snap.importMUIColors\n     [ method ]\n     **\n     * Imports Material UI colours into global object.\n     | Snap.importMUIColors();\n     | Snap().rect(0, 0, 10, 10).attr({fill: deeppurple, stroke: amber[600]});\n     # For colour reference: <a href=\"https://www.materialui.co\">https://www.materialui.co</a>.\n    \\*/\n    Snap.importMUIColors = function () {\n        for (var color in Snap.mui) {\n            if (Snap.mui.hasOwnProperty(color)) {\n                window[color] = Snap.mui[color];\n            }\n        }\n    };\n});\n\nmodule.exports = Snap\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _snapsvgImporter = require('../snapsvgImporter');\n\nvar _snapsvgImporter2 = _interopRequireDefault(_snapsvgImporter);\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  svg: {\n    lib: _snapsvgImporter2['default'],\n    pathInitial: 'M-1,0h101c0,0-97.833,153.603-97.833,396.167C2.167,627.579,100,800,100,800H-1V0z',\n    pathOpen: 'M-1,0h101c0,0,0-1,0,395c0,404,0,405,0,405H-1V0z',\n    animate: function animate(path) {\n      path.animate({ path: this.pathOpen }, 400, window.mina.easeinout);\n    }\n  },\n\n  morphShape: function morphShape(isOpen, width, right) {\n    return {\n      position: 'absolute',\n      width: 120,\n      height: '100%',\n      right: right ? 'inherit' : 0,\n      left: right ? 0 : 'inherit',\n      MozTransform: right ? 'rotateY(180deg)' : '',\n      MsTransform: right ? 'rotateY(180deg)' : '',\n      OTransform: right ? 'rotateY(180deg)' : '',\n      WebkitTransform: right ? 'rotateY(180deg)' : '',\n      transform: right ? 'rotateY(180deg)' : ''\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? 'translate3d(0, 0, 0)' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.3s'\n    };\n  },\n\n  menu: function menu(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      width: 180,\n      whiteSpace: 'nowrap',\n      boxSizing: 'border-box',\n      overflow: 'visible'\n    };\n  },\n\n  itemList: function itemList(isOpen, width, right) {\n    if (right) {\n      return {\n        position: 'relative',\n        left: '-110px',\n        width: '170%',\n        overflow: 'auto'\n      };\n    }\n  },\n\n  pageWrap: function pageWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(-100px, 0, 0)' : 'translate3d(100px, 0, 0)',\n      transition: isOpen ? 'all 0.3s' : 'all 0.3s 0.1s'\n    };\n  },\n\n  outerContainer: function outerContainer(isOpen) {\n    return {\n      overflow: isOpen ? '' : 'hidden'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      MozTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(' + width + ', 0, 0)' : 'translate3d(-' + width + ', 0, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0.4s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  },\n\n  item: function item(isOpen, width, right, nthChild) {\n    return {\n      MozTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      OTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transform: isOpen ? '' : 'translate3d(0, ' + nthChild * 500 + 'px, 0)',\n      transition: isOpen ? 'transform 0.8s cubic-bezier(0.7, 0, 0.3, 1)' : 'transform 0s 0.2s cubic-bezier(0.7, 0, 0.3, 1)'\n    };\n  }\n};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar CrossIcon = (function (_Component) {\n  _inherits(CrossIcon, _Component);\n\n  function CrossIcon() {\n    _classCallCheck(this, CrossIcon);\n\n    _get(Object.getPrototypeOf(CrossIcon.prototype), 'constructor', this).apply(this, arguments);\n  }\n\n  _createClass(CrossIcon, [{\n    key: 'getCrossStyle',\n    value: function getCrossStyle(type) {\n      return {\n        position: 'absolute',\n        width: 3,\n        height: 14,\n        transform: type === 'before' ? 'rotate(45deg)' : 'rotate(-45deg)'\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon;\n      var buttonWrapperStyle = {\n        position: 'absolute',\n        width: 24,\n        height: 24,\n        right: 8,\n        top: 8\n      };\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        textIndent: -9999,\n        background: 'transparent',\n        outline: 'none',\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: 'bm-cross',\n          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmCross)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement(\n          'span',\n          { style: { position: 'absolute', top: '6px', right: '14px' } },\n          ['before', 'after'].map(function (type, i) {\n            return _react2['default'].createElement('span', {\n              key: i,\n              className: ('bm-cross ' + _this.props.crossClassName).trim(),\n              style: _extends({}, _this.getCrossStyle(type), _this.props.styles.bmCross)\n            });\n          })\n        );\n      }\n\n      return _react2['default'].createElement(\n        'div',\n        {\n          className: ('bm-cross-button ' + this.props.className).trim(),\n          style: _extends({}, buttonWrapperStyle, this.props.styles.bmCrossButton)\n        },\n        icon,\n        _react2['default'].createElement(\n          'button',\n          { onClick: this.props.onClick, style: buttonStyle },\n          'Close Menu'\n        )\n      );\n    }\n  }]);\n\n  return CrossIcon;\n})(_react.Component);\n\nexports['default'] = CrossIcon;\n\nCrossIcon.propTypes = {\n  crossClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\n\nCrossIcon.defaultProps = {\n  crossClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = (function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ('value' in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; })();\n\nvar _get = function get(_x, _x2, _x3) { var _again = true; _function: while (_again) { var object = _x, property = _x2, receiver = _x3; _again = false; if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { _x = parent; _x2 = property; _x3 = receiver; _again = true; desc = parent = undefined; continue _function; } } else if ('value' in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } } };\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError('Cannot call a class as a function'); } }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== 'function' && superClass !== null) { throw new TypeError('Super expression must either be null or a function, not ' + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar BurgerIcon = (function (_Component) {\n  _inherits(BurgerIcon, _Component);\n\n  function BurgerIcon(props) {\n    _classCallCheck(this, BurgerIcon);\n\n    _get(Object.getPrototypeOf(BurgerIcon.prototype), 'constructor', this).call(this, props);\n    this.state = {\n      hover: false\n    };\n  }\n\n  _createClass(BurgerIcon, [{\n    key: 'getLineStyle',\n    value: function getLineStyle(index) {\n      return {\n        position: 'absolute',\n        height: '20%',\n        left: 0,\n        right: 0,\n        top: 20 * (index * 2) + '%',\n        opacity: this.state.hover ? 0.6 : 1\n      };\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this = this;\n\n      var icon = undefined;\n      var buttonStyle = {\n        position: 'absolute',\n        left: 0,\n        top: 0,\n        width: '100%',\n        height: '100%',\n        margin: 0,\n        padding: 0,\n        border: 'none',\n        opacity: 0,\n        fontSize: 8,\n        cursor: 'pointer'\n      };\n\n      if (this.props.customIcon) {\n        var extraProps = {\n          className: 'bm-icon',\n          style: _extends({ width: '100%', height: '100%' }, this.props.styles.bmIcon)\n        };\n        icon = _react2['default'].cloneElement(this.props.customIcon, extraProps);\n      } else {\n        icon = _react2['default'].createElement(\n          'span',\n          null,\n          [0, 1, 2].map(function (bar) {\n            return _react2['default'].createElement('span', {\n              key: bar,\n              className: ('bm-burger-bars ' + _this.props.barClassName).trim(),\n              style: _extends({}, _this.getLineStyle(bar), _this.props.styles.bmBurgerBars)\n            });\n          })\n        );\n      }\n\n      return _react2['default'].createElement(\n        'div',\n        {\n          className: ('bm-burger-button ' + this.props.className).trim(),\n          style: _extends({ zIndex: 1000 }, this.props.styles.bmBurgerButton)\n        },\n        icon,\n        _react2['default'].createElement(\n          'button',\n          {\n            onClick: this.props.onClick,\n            onMouseOver: function () {\n              return _this.setState({ hover: true });\n            },\n            onMouseOut: function () {\n              return _this.setState({ hover: false });\n            },\n            style: buttonStyle\n          },\n          'Open Menu'\n        )\n      );\n    }\n  }]);\n\n  return BurgerIcon;\n})(_react.Component);\n\nexports['default'] = BurgerIcon;\n\nBurgerIcon.propTypes = {\n  barClassName: _propTypes2['default'].string,\n  customIcon: _propTypes2['default'].element,\n  styles: _propTypes2['default'].object\n};\n\nBurgerIcon.defaultProps = {\n  barClassName: '',\n  className: '',\n  styles: {}\n};\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\nvar styles = {\n  overlay: function overlay(isOpen) {\n    return {\n      position: 'fixed',\n      zIndex: 1000,\n      width: '100%',\n      height: '100%',\n      background: 'rgba(0, 0, 0, 0.3)',\n      opacity: isOpen ? 1 : 0,\n      MozTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      MsTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      OTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transform: isOpen ? '' : 'translate3d(100%, 0, 0)',\n      transition: isOpen ? 'opacity 0.3s' : 'opacity 0.3s, transform 0s 0.3s'\n    };\n  },\n\n  menuWrap: function menuWrap(isOpen, width, right) {\n    return {\n      position: 'fixed',\n      right: right ? 0 : 'inherit',\n      zIndex: 1100,\n      width: width,\n      height: '100%',\n      MozTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      MsTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      OTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      WebkitTransform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transform: isOpen ? '' : right ? 'translate3d(100%, 0, 0)' : 'translate3d(-100%, 0, 0)',\n      transition: 'all 0.5s'\n    };\n  },\n\n  menu: function menu() {\n    return {\n      height: '100%',\n      boxSizing: 'border-box',\n      overflow: 'auto'\n    };\n  },\n\n  itemList: function itemList() {\n    return {\n      height: '100%'\n    };\n  },\n\n  item: function item() {\n    return {\n      display: 'block',\n      outline: 'none'\n    };\n  }\n};\n\nexports['default'] = styles;\nmodule.exports = exports['default'];","'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { 'default': obj }; }\n\nvar _menuFactory = require('../menuFactory');\n\nvar _menuFactory2 = _interopRequireDefault(_menuFactory);\n\nvar styles = {};\n\nexports['default'] = (0, _menuFactory2['default'])(styles);\nmodule.exports = exports['default'];","exports.__esModule = true;\nexports.warn = exports.requestAnimationFrame = exports.reducePropsToState = exports.mapStateOnServer = exports.handleClientStateChange = exports.convertReactPropstoHtmlAttributes = undefined;\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = require(\"react\");\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _objectAssign = require(\"object-assign\");\n\nvar _objectAssign2 = _interopRequireDefault(_objectAssign);\n\nvar _HelmetConstants = require(\"./HelmetConstants.js\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar encodeSpecialCharacters = function encodeSpecialCharacters(str) {\n    var encode = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n\n    if (encode === false) {\n        return String(str);\n    }\n\n    return String(str).replace(/&/g, \"&amp;\").replace(/</g, \"&lt;\").replace(/>/g, \"&gt;\").replace(/\"/g, \"&quot;\").replace(/'/g, \"&#x27;\");\n};\n\nvar getTitleFromPropsList = function getTitleFromPropsList(propsList) {\n    var innermostTitle = getInnermostProperty(propsList, _HelmetConstants.TAG_NAMES.TITLE);\n    var innermostTemplate = getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.TITLE_TEMPLATE);\n\n    if (innermostTemplate && innermostTitle) {\n        // use function arg to avoid need to escape $ characters\n        return innermostTemplate.replace(/%s/g, function () {\n            return innermostTitle;\n        });\n    }\n\n    var innermostDefaultTitle = getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.DEFAULT_TITLE);\n\n    return innermostTitle || innermostDefaultTitle || undefined;\n};\n\nvar getOnChangeClientState = function getOnChangeClientState(propsList) {\n    return getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.ON_CHANGE_CLIENT_STATE) || function () {};\n};\n\nvar getAttributesFromPropsList = function getAttributesFromPropsList(tagType, propsList) {\n    return propsList.filter(function (props) {\n        return typeof props[tagType] !== \"undefined\";\n    }).map(function (props) {\n        return props[tagType];\n    }).reduce(function (tagAttrs, current) {\n        return _extends({}, tagAttrs, current);\n    }, {});\n};\n\nvar getBaseTagFromPropsList = function getBaseTagFromPropsList(primaryAttributes, propsList) {\n    return propsList.filter(function (props) {\n        return typeof props[_HelmetConstants.TAG_NAMES.BASE] !== \"undefined\";\n    }).map(function (props) {\n        return props[_HelmetConstants.TAG_NAMES.BASE];\n    }).reverse().reduce(function (innermostBaseTag, tag) {\n        if (!innermostBaseTag.length) {\n            var keys = Object.keys(tag);\n\n            for (var i = 0; i < keys.length; i++) {\n                var attributeKey = keys[i];\n                var lowerCaseAttributeKey = attributeKey.toLowerCase();\n\n                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && tag[lowerCaseAttributeKey]) {\n                    return innermostBaseTag.concat(tag);\n                }\n            }\n        }\n\n        return innermostBaseTag;\n    }, []);\n};\n\nvar getTagsFromPropsList = function getTagsFromPropsList(tagName, primaryAttributes, propsList) {\n    // Calculate list of tags, giving priority innermost component (end of the propslist)\n    var approvedSeenTags = {};\n\n    return propsList.filter(function (props) {\n        if (Array.isArray(props[tagName])) {\n            return true;\n        }\n        if (typeof props[tagName] !== \"undefined\") {\n            warn(\"Helmet: \" + tagName + \" should be of type \\\"Array\\\". Instead found type \\\"\" + _typeof(props[tagName]) + \"\\\"\");\n        }\n        return false;\n    }).map(function (props) {\n        return props[tagName];\n    }).reverse().reduce(function (approvedTags, instanceTags) {\n        var instanceSeenTags = {};\n\n        instanceTags.filter(function (tag) {\n            var primaryAttributeKey = void 0;\n            var keys = Object.keys(tag);\n            for (var i = 0; i < keys.length; i++) {\n                var attributeKey = keys[i];\n                var lowerCaseAttributeKey = attributeKey.toLowerCase();\n\n                // Special rule with link tags, since rel and href are both primary tags, rel takes priority\n                if (primaryAttributes.indexOf(lowerCaseAttributeKey) !== -1 && !(primaryAttributeKey === _HelmetConstants.TAG_PROPERTIES.REL && tag[primaryAttributeKey].toLowerCase() === \"canonical\") && !(lowerCaseAttributeKey === _HelmetConstants.TAG_PROPERTIES.REL && tag[lowerCaseAttributeKey].toLowerCase() === \"stylesheet\")) {\n                    primaryAttributeKey = lowerCaseAttributeKey;\n                }\n                // Special case for innerHTML which doesn't work lowercased\n                if (primaryAttributes.indexOf(attributeKey) !== -1 && (attributeKey === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || attributeKey === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT || attributeKey === _HelmetConstants.TAG_PROPERTIES.ITEM_PROP)) {\n                    primaryAttributeKey = attributeKey;\n                }\n            }\n\n            if (!primaryAttributeKey || !tag[primaryAttributeKey]) {\n                return false;\n            }\n\n            var value = tag[primaryAttributeKey].toLowerCase();\n\n            if (!approvedSeenTags[primaryAttributeKey]) {\n                approvedSeenTags[primaryAttributeKey] = {};\n            }\n\n            if (!instanceSeenTags[primaryAttributeKey]) {\n                instanceSeenTags[primaryAttributeKey] = {};\n            }\n\n            if (!approvedSeenTags[primaryAttributeKey][value]) {\n                instanceSeenTags[primaryAttributeKey][value] = true;\n                return true;\n            }\n\n            return false;\n        }).reverse().forEach(function (tag) {\n            return approvedTags.push(tag);\n        });\n\n        // Update seen tags with tags from this instance\n        var keys = Object.keys(instanceSeenTags);\n        for (var i = 0; i < keys.length; i++) {\n            var attributeKey = keys[i];\n            var tagUnion = (0, _objectAssign2.default)({}, approvedSeenTags[attributeKey], instanceSeenTags[attributeKey]);\n\n            approvedSeenTags[attributeKey] = tagUnion;\n        }\n\n        return approvedTags;\n    }, []).reverse();\n};\n\nvar getInnermostProperty = function getInnermostProperty(propsList, property) {\n    for (var i = propsList.length - 1; i >= 0; i--) {\n        var props = propsList[i];\n\n        if (props.hasOwnProperty(property)) {\n            return props[property];\n        }\n    }\n\n    return null;\n};\n\nvar reducePropsToState = function reducePropsToState(propsList) {\n    return {\n        baseTag: getBaseTagFromPropsList([_HelmetConstants.TAG_PROPERTIES.HREF], propsList),\n        bodyAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.BODY, propsList),\n        defer: getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.DEFER),\n        encode: getInnermostProperty(propsList, _HelmetConstants.HELMET_PROPS.ENCODE_SPECIAL_CHARACTERS),\n        htmlAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.HTML, propsList),\n        linkTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.LINK, [_HelmetConstants.TAG_PROPERTIES.REL, _HelmetConstants.TAG_PROPERTIES.HREF], propsList),\n        metaTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.META, [_HelmetConstants.TAG_PROPERTIES.NAME, _HelmetConstants.TAG_PROPERTIES.CHARSET, _HelmetConstants.TAG_PROPERTIES.HTTPEQUIV, _HelmetConstants.TAG_PROPERTIES.PROPERTY, _HelmetConstants.TAG_PROPERTIES.ITEM_PROP], propsList),\n        noscriptTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.NOSCRIPT, [_HelmetConstants.TAG_PROPERTIES.INNER_HTML], propsList),\n        onChangeClientState: getOnChangeClientState(propsList),\n        scriptTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.SCRIPT, [_HelmetConstants.TAG_PROPERTIES.SRC, _HelmetConstants.TAG_PROPERTIES.INNER_HTML], propsList),\n        styleTags: getTagsFromPropsList(_HelmetConstants.TAG_NAMES.STYLE, [_HelmetConstants.TAG_PROPERTIES.CSS_TEXT], propsList),\n        title: getTitleFromPropsList(propsList),\n        titleAttributes: getAttributesFromPropsList(_HelmetConstants.ATTRIBUTE_NAMES.TITLE, propsList)\n    };\n};\n\nvar rafPolyfill = function () {\n    var clock = Date.now();\n\n    return function (callback) {\n        var currentTime = Date.now();\n\n        if (currentTime - clock > 16) {\n            clock = currentTime;\n            callback(currentTime);\n        } else {\n            setTimeout(function () {\n                rafPolyfill(callback);\n            }, 0);\n        }\n    };\n}();\n\nvar cafPolyfill = function cafPolyfill(id) {\n    return clearTimeout(id);\n};\n\nvar requestAnimationFrame = typeof window !== \"undefined\" ? window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || rafPolyfill : global.requestAnimationFrame || rafPolyfill;\n\nvar cancelAnimationFrame = typeof window !== \"undefined\" ? window.cancelAnimationFrame || window.webkitCancelAnimationFrame || window.mozCancelAnimationFrame || cafPolyfill : global.cancelAnimationFrame || cafPolyfill;\n\nvar warn = function warn(msg) {\n    return console && typeof console.warn === \"function\" && console.warn(msg);\n};\n\nvar _helmetCallback = null;\n\nvar handleClientStateChange = function handleClientStateChange(newState) {\n    if (_helmetCallback) {\n        cancelAnimationFrame(_helmetCallback);\n    }\n\n    if (newState.defer) {\n        _helmetCallback = requestAnimationFrame(function () {\n            commitTagChanges(newState, function () {\n                _helmetCallback = null;\n            });\n        });\n    } else {\n        commitTagChanges(newState);\n        _helmetCallback = null;\n    }\n};\n\nvar commitTagChanges = function commitTagChanges(newState, cb) {\n    var baseTag = newState.baseTag,\n        bodyAttributes = newState.bodyAttributes,\n        htmlAttributes = newState.htmlAttributes,\n        linkTags = newState.linkTags,\n        metaTags = newState.metaTags,\n        noscriptTags = newState.noscriptTags,\n        onChangeClientState = newState.onChangeClientState,\n        scriptTags = newState.scriptTags,\n        styleTags = newState.styleTags,\n        title = newState.title,\n        titleAttributes = newState.titleAttributes;\n\n    updateAttributes(_HelmetConstants.TAG_NAMES.BODY, bodyAttributes);\n    updateAttributes(_HelmetConstants.TAG_NAMES.HTML, htmlAttributes);\n\n    updateTitle(title, titleAttributes);\n\n    var tagUpdates = {\n        baseTag: updateTags(_HelmetConstants.TAG_NAMES.BASE, baseTag),\n        linkTags: updateTags(_HelmetConstants.TAG_NAMES.LINK, linkTags),\n        metaTags: updateTags(_HelmetConstants.TAG_NAMES.META, metaTags),\n        noscriptTags: updateTags(_HelmetConstants.TAG_NAMES.NOSCRIPT, noscriptTags),\n        scriptTags: updateTags(_HelmetConstants.TAG_NAMES.SCRIPT, scriptTags),\n        styleTags: updateTags(_HelmetConstants.TAG_NAMES.STYLE, styleTags)\n    };\n\n    var addedTags = {};\n    var removedTags = {};\n\n    Object.keys(tagUpdates).forEach(function (tagType) {\n        var _tagUpdates$tagType = tagUpdates[tagType],\n            newTags = _tagUpdates$tagType.newTags,\n            oldTags = _tagUpdates$tagType.oldTags;\n\n\n        if (newTags.length) {\n            addedTags[tagType] = newTags;\n        }\n        if (oldTags.length) {\n            removedTags[tagType] = tagUpdates[tagType].oldTags;\n        }\n    });\n\n    cb && cb();\n\n    onChangeClientState(newState, addedTags, removedTags);\n};\n\nvar flattenArray = function flattenArray(possibleArray) {\n    return Array.isArray(possibleArray) ? possibleArray.join(\"\") : possibleArray;\n};\n\nvar updateTitle = function updateTitle(title, attributes) {\n    if (typeof title !== \"undefined\" && document.title !== title) {\n        document.title = flattenArray(title);\n    }\n\n    updateAttributes(_HelmetConstants.TAG_NAMES.TITLE, attributes);\n};\n\nvar updateAttributes = function updateAttributes(tagName, attributes) {\n    var elementTag = document.getElementsByTagName(tagName)[0];\n\n    if (!elementTag) {\n        return;\n    }\n\n    var helmetAttributeString = elementTag.getAttribute(_HelmetConstants.HELMET_ATTRIBUTE);\n    var helmetAttributes = helmetAttributeString ? helmetAttributeString.split(\",\") : [];\n    var attributesToRemove = [].concat(helmetAttributes);\n    var attributeKeys = Object.keys(attributes);\n\n    for (var i = 0; i < attributeKeys.length; i++) {\n        var attribute = attributeKeys[i];\n        var value = attributes[attribute] || \"\";\n\n        if (elementTag.getAttribute(attribute) !== value) {\n            elementTag.setAttribute(attribute, value);\n        }\n\n        if (helmetAttributes.indexOf(attribute) === -1) {\n            helmetAttributes.push(attribute);\n        }\n\n        var indexToSave = attributesToRemove.indexOf(attribute);\n        if (indexToSave !== -1) {\n            attributesToRemove.splice(indexToSave, 1);\n        }\n    }\n\n    for (var _i = attributesToRemove.length - 1; _i >= 0; _i--) {\n        elementTag.removeAttribute(attributesToRemove[_i]);\n    }\n\n    if (helmetAttributes.length === attributesToRemove.length) {\n        elementTag.removeAttribute(_HelmetConstants.HELMET_ATTRIBUTE);\n    } else if (elementTag.getAttribute(_HelmetConstants.HELMET_ATTRIBUTE) !== attributeKeys.join(\",\")) {\n        elementTag.setAttribute(_HelmetConstants.HELMET_ATTRIBUTE, attributeKeys.join(\",\"));\n    }\n};\n\nvar updateTags = function updateTags(type, tags) {\n    var headElement = document.head || document.querySelector(_HelmetConstants.TAG_NAMES.HEAD);\n    var tagNodes = headElement.querySelectorAll(type + \"[\" + _HelmetConstants.HELMET_ATTRIBUTE + \"]\");\n    var oldTags = Array.prototype.slice.call(tagNodes);\n    var newTags = [];\n    var indexToDelete = void 0;\n\n    if (tags && tags.length) {\n        tags.forEach(function (tag) {\n            var newElement = document.createElement(type);\n\n            for (var attribute in tag) {\n                if (tag.hasOwnProperty(attribute)) {\n                    if (attribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML) {\n                        newElement.innerHTML = tag.innerHTML;\n                    } else if (attribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT) {\n                        if (newElement.styleSheet) {\n                            newElement.styleSheet.cssText = tag.cssText;\n                        } else {\n                            newElement.appendChild(document.createTextNode(tag.cssText));\n                        }\n                    } else {\n                        var value = typeof tag[attribute] === \"undefined\" ? \"\" : tag[attribute];\n                        newElement.setAttribute(attribute, value);\n                    }\n                }\n            }\n\n            newElement.setAttribute(_HelmetConstants.HELMET_ATTRIBUTE, \"true\");\n\n            // Remove a duplicate tag from domTagstoRemove, so it isn't cleared.\n            if (oldTags.some(function (existingTag, index) {\n                indexToDelete = index;\n                return newElement.isEqualNode(existingTag);\n            })) {\n                oldTags.splice(indexToDelete, 1);\n            } else {\n                newTags.push(newElement);\n            }\n        });\n    }\n\n    oldTags.forEach(function (tag) {\n        return tag.parentNode.removeChild(tag);\n    });\n    newTags.forEach(function (tag) {\n        return headElement.appendChild(tag);\n    });\n\n    return {\n        oldTags: oldTags,\n        newTags: newTags\n    };\n};\n\nvar generateElementAttributesAsString = function generateElementAttributesAsString(attributes) {\n    return Object.keys(attributes).reduce(function (str, key) {\n        var attr = typeof attributes[key] !== \"undefined\" ? key + \"=\\\"\" + attributes[key] + \"\\\"\" : \"\" + key;\n        return str ? str + \" \" + attr : attr;\n    }, \"\");\n};\n\nvar generateTitleAsString = function generateTitleAsString(type, title, attributes, encode) {\n    var attributeString = generateElementAttributesAsString(attributes);\n    var flattenedTitle = flattenArray(title);\n    return attributeString ? \"<\" + type + \" \" + _HelmetConstants.HELMET_ATTRIBUTE + \"=\\\"true\\\" \" + attributeString + \">\" + encodeSpecialCharacters(flattenedTitle, encode) + \"</\" + type + \">\" : \"<\" + type + \" \" + _HelmetConstants.HELMET_ATTRIBUTE + \"=\\\"true\\\">\" + encodeSpecialCharacters(flattenedTitle, encode) + \"</\" + type + \">\";\n};\n\nvar generateTagsAsString = function generateTagsAsString(type, tags, encode) {\n    return tags.reduce(function (str, tag) {\n        var attributeHtml = Object.keys(tag).filter(function (attribute) {\n            return !(attribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || attribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT);\n        }).reduce(function (string, attribute) {\n            var attr = typeof tag[attribute] === \"undefined\" ? attribute : attribute + \"=\\\"\" + encodeSpecialCharacters(tag[attribute], encode) + \"\\\"\";\n            return string ? string + \" \" + attr : attr;\n        }, \"\");\n\n        var tagContent = tag.innerHTML || tag.cssText || \"\";\n\n        var isSelfClosing = _HelmetConstants.SELF_CLOSING_TAGS.indexOf(type) === -1;\n\n        return str + \"<\" + type + \" \" + _HelmetConstants.HELMET_ATTRIBUTE + \"=\\\"true\\\" \" + attributeHtml + (isSelfClosing ? \"/>\" : \">\" + tagContent + \"</\" + type + \">\");\n    }, \"\");\n};\n\nvar convertElementAttributestoReactProps = function convertElementAttributestoReactProps(attributes) {\n    var initProps = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return Object.keys(attributes).reduce(function (obj, key) {\n        obj[_HelmetConstants.REACT_TAG_MAP[key] || key] = attributes[key];\n        return obj;\n    }, initProps);\n};\n\nvar convertReactPropstoHtmlAttributes = function convertReactPropstoHtmlAttributes(props) {\n    var initAttributes = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    return Object.keys(props).reduce(function (obj, key) {\n        obj[_HelmetConstants.HTML_TAG_MAP[key] || key] = props[key];\n        return obj;\n    }, initAttributes);\n};\n\nvar generateTitleAsReactComponent = function generateTitleAsReactComponent(type, title, attributes) {\n    var _initProps;\n\n    // assigning into an array to define toString function on it\n    var initProps = (_initProps = {\n        key: title\n    }, _initProps[_HelmetConstants.HELMET_ATTRIBUTE] = true, _initProps);\n    var props = convertElementAttributestoReactProps(attributes, initProps);\n\n    return [_react2.default.createElement(_HelmetConstants.TAG_NAMES.TITLE, props, title)];\n};\n\nvar generateTagsAsReactComponent = function generateTagsAsReactComponent(type, tags) {\n    return tags.map(function (tag, i) {\n        var _mappedTag;\n\n        var mappedTag = (_mappedTag = {\n            key: i\n        }, _mappedTag[_HelmetConstants.HELMET_ATTRIBUTE] = true, _mappedTag);\n\n        Object.keys(tag).forEach(function (attribute) {\n            var mappedAttribute = _HelmetConstants.REACT_TAG_MAP[attribute] || attribute;\n\n            if (mappedAttribute === _HelmetConstants.TAG_PROPERTIES.INNER_HTML || mappedAttribute === _HelmetConstants.TAG_PROPERTIES.CSS_TEXT) {\n                var content = tag.innerHTML || tag.cssText;\n                mappedTag.dangerouslySetInnerHTML = { __html: content };\n            } else {\n                mappedTag[mappedAttribute] = tag[attribute];\n            }\n        });\n\n        return _react2.default.createElement(type, mappedTag);\n    });\n};\n\nvar getMethodsForTag = function getMethodsForTag(type, tags, encode) {\n    switch (type) {\n        case _HelmetConstants.TAG_NAMES.TITLE:\n            return {\n                toComponent: function toComponent() {\n                    return generateTitleAsReactComponent(type, tags.title, tags.titleAttributes, encode);\n                },\n                toString: function toString() {\n                    return generateTitleAsString(type, tags.title, tags.titleAttributes, encode);\n                }\n            };\n        case _HelmetConstants.ATTRIBUTE_NAMES.BODY:\n        case _HelmetConstants.ATTRIBUTE_NAMES.HTML:\n            return {\n                toComponent: function toComponent() {\n                    return convertElementAttributestoReactProps(tags);\n                },\n                toString: function toString() {\n                    return generateElementAttributesAsString(tags);\n                }\n            };\n        default:\n            return {\n                toComponent: function toComponent() {\n                    return generateTagsAsReactComponent(type, tags);\n                },\n                toString: function toString() {\n                    return generateTagsAsString(type, tags, encode);\n                }\n            };\n    }\n};\n\nvar mapStateOnServer = function mapStateOnServer(_ref) {\n    var baseTag = _ref.baseTag,\n        bodyAttributes = _ref.bodyAttributes,\n        encode = _ref.encode,\n        htmlAttributes = _ref.htmlAttributes,\n        linkTags = _ref.linkTags,\n        metaTags = _ref.metaTags,\n        noscriptTags = _ref.noscriptTags,\n        scriptTags = _ref.scriptTags,\n        styleTags = _ref.styleTags,\n        _ref$title = _ref.title,\n        title = _ref$title === undefined ? \"\" : _ref$title,\n        titleAttributes = _ref.titleAttributes;\n    return {\n        base: getMethodsForTag(_HelmetConstants.TAG_NAMES.BASE, baseTag, encode),\n        bodyAttributes: getMethodsForTag(_HelmetConstants.ATTRIBUTE_NAMES.BODY, bodyAttributes, encode),\n        htmlAttributes: getMethodsForTag(_HelmetConstants.ATTRIBUTE_NAMES.HTML, htmlAttributes, encode),\n        link: getMethodsForTag(_HelmetConstants.TAG_NAMES.LINK, linkTags, encode),\n        meta: getMethodsForTag(_HelmetConstants.TAG_NAMES.META, metaTags, encode),\n        noscript: getMethodsForTag(_HelmetConstants.TAG_NAMES.NOSCRIPT, noscriptTags, encode),\n        script: getMethodsForTag(_HelmetConstants.TAG_NAMES.SCRIPT, scriptTags, encode),\n        style: getMethodsForTag(_HelmetConstants.TAG_NAMES.STYLE, styleTags, encode),\n        title: getMethodsForTag(_HelmetConstants.TAG_NAMES.TITLE, { title: title, titleAttributes: titleAttributes }, encode)\n    };\n};\n\nexports.convertReactPropstoHtmlAttributes = convertReactPropstoHtmlAttributes;\nexports.handleClientStateChange = handleClientStateChange;\nexports.mapStateOnServer = mapStateOnServer;\nexports.reducePropsToState = reducePropsToState;\nexports.requestAnimationFrame = requestAnimationFrame;\nexports.warn = warn;","var supportsArgumentsClass = (function(){\n  return Object.prototype.toString.call(arguments)\n})() == '[object Arguments]';\n\nexports = module.exports = supportsArgumentsClass ? supported : unsupported;\n\nexports.supported = supported;\nfunction supported(object) {\n  return Object.prototype.toString.call(object) == '[object Arguments]';\n};\n\nexports.unsupported = unsupported;\nfunction unsupported(object){\n  return object &&\n    typeof object == 'object' &&\n    typeof object.length == 'number' &&\n    Object.prototype.hasOwnProperty.call(object, 'callee') &&\n    !Object.prototype.propertyIsEnumerable.call(object, 'callee') ||\n    false;\n};\n","exports = module.exports = typeof Object.keys === 'function'\n  ? Object.keys : shim;\n\nexports.shim = shim;\nfunction shim (obj) {\n  var keys = [];\n  for (var key in obj) keys.push(key);\n  return keys;\n}\n","var pSlice = Array.prototype.slice;\nvar objectKeys = require('./lib/keys.js');\nvar isArguments = require('./lib/is_arguments.js');\n\nvar deepEqual = module.exports = function (actual, expected, opts) {\n  if (!opts) opts = {};\n  // 7.1. All identical values are equivalent, as determined by ===.\n  if (actual === expected) {\n    return true;\n\n  } else if (actual instanceof Date && expected instanceof Date) {\n    return actual.getTime() === expected.getTime();\n\n  // 7.3. Other pairs that do not both pass typeof value == 'object',\n  // equivalence is determined by ==.\n  } else if (!actual || !expected || typeof actual != 'object' && typeof expected != 'object') {\n    return opts.strict ? actual === expected : actual == expected;\n\n  // 7.4. For all other Object pairs, including Array objects, equivalence is\n  // determined by having the same number of owned properties (as verified\n  // with Object.prototype.hasOwnProperty.call), the same set of keys\n  // (although not necessarily the same order), equivalent values for every\n  // corresponding key, and an identical 'prototype' property. Note: this\n  // accounts for both named and indexed properties on Arrays.\n  } else {\n    return objEquiv(actual, expected, opts);\n  }\n}\n\nfunction isUndefinedOrNull(value) {\n  return value === null || value === undefined;\n}\n\nfunction isBuffer (x) {\n  if (!x || typeof x !== 'object' || typeof x.length !== 'number') return false;\n  if (typeof x.copy !== 'function' || typeof x.slice !== 'function') {\n    return false;\n  }\n  if (x.length > 0 && typeof x[0] !== 'number') return false;\n  return true;\n}\n\nfunction objEquiv(a, b, opts) {\n  var i, key;\n  if (isUndefinedOrNull(a) || isUndefinedOrNull(b))\n    return false;\n  // an identical 'prototype' property.\n  if (a.prototype !== b.prototype) return false;\n  //~~~I've managed to break Object.keys through screwy arguments passing.\n  //   Converting to array solves the problem.\n  if (isArguments(a)) {\n    if (!isArguments(b)) {\n      return false;\n    }\n    a = pSlice.call(a);\n    b = pSlice.call(b);\n    return deepEqual(a, b, opts);\n  }\n  if (isBuffer(a)) {\n    if (!isBuffer(b)) {\n      return false;\n    }\n    if (a.length !== b.length) return false;\n    for (i = 0; i < a.length; i++) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  }\n  try {\n    var ka = objectKeys(a),\n        kb = objectKeys(b);\n  } catch (e) {//happens when one is a string literal and the other isn't\n    return false;\n  }\n  // having the same number of owned properties (keys incorporates\n  // hasOwnProperty)\n  if (ka.length != kb.length)\n    return false;\n  //the same set of keys (although not necessarily the same order),\n  ka.sort();\n  kb.sort();\n  //~~~cheap key test\n  for (i = ka.length - 1; i >= 0; i--) {\n    if (ka[i] != kb[i])\n      return false;\n  }\n  //equivalent values for every corresponding key, and\n  //~~~possibly expensive deep test\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], opts)) return false;\n  }\n  return typeof a === typeof b;\n}\n","//\n\nmodule.exports = function shallowEqual(objA, objB, compare, compareContext) {\n  var ret = compare ? compare.call(compareContext, objA, objB) : void 0;\n\n  if (ret !== void 0) {\n    return !!ret;\n  }\n\n  if (objA === objB) {\n    return true;\n  }\n\n  if (typeof objA !== \"object\" || !objA || typeof objB !== \"object\" || !objB) {\n    return false;\n  }\n\n  var keysA = Object.keys(objA);\n  var keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  var bHasOwnProperty = Object.prototype.hasOwnProperty.bind(objB);\n\n  // Test for A's keys different from B.\n  for (var idx = 0; idx < keysA.length; idx++) {\n    var key = keysA[idx];\n\n    if (!bHasOwnProperty(key)) {\n      return false;\n    }\n\n    var valueA = objA[key];\n    var valueB = objB[key];\n\n    ret = compare ? compare.call(compareContext, valueA, valueB, key) : void 0;\n\n    if (ret === false || (ret === void 0 && valueA !== valueB)) {\n      return false;\n    }\n  }\n\n  return true;\n};\n","/*!\n  Copyright (c) 2015 Jed Watson.\n  Based on code that is Copyright 2013-2015, Facebook, Inc.\n  All rights reserved.\n*/\n/* global define */\n\n(function () {\n\t'use strict';\n\n\tvar canUseDOM = !!(\n\t\ttypeof window !== 'undefined' &&\n\t\twindow.document &&\n\t\twindow.document.createElement\n\t);\n\n\tvar ExecutionEnvironment = {\n\n\t\tcanUseDOM: canUseDOM,\n\n\t\tcanUseWorkers: typeof Worker !== 'undefined',\n\n\t\tcanUseEventListeners:\n\t\t\tcanUseDOM && !!(window.addEventListener || window.attachEvent),\n\n\t\tcanUseViewport: canUseDOM && !!window.screen\n\n\t};\n\n\tif (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n\t\tdefine(function () {\n\t\t\treturn ExecutionEnvironment;\n\t\t});\n\t} else if (typeof module !== 'undefined' && module.exports) {\n\t\tmodule.exports = ExecutionEnvironment;\n\t} else {\n\t\twindow.ExecutionEnvironment = ExecutionEnvironment;\n\t}\n\n}());\n","'use strict';\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar React = require('react');\nvar React__default = _interopDefault(React);\nvar ExecutionEnvironment = _interopDefault(require('exenv'));\nvar shallowEqual = _interopDefault(require('shallowequal'));\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction withSideEffect(reducePropsToState, handleStateChangeOnClient, mapStateOnServer) {\n  if (typeof reducePropsToState !== 'function') {\n    throw new Error('Expected reducePropsToState to be a function.');\n  }\n  if (typeof handleStateChangeOnClient !== 'function') {\n    throw new Error('Expected handleStateChangeOnClient to be a function.');\n  }\n  if (typeof mapStateOnServer !== 'undefined' && typeof mapStateOnServer !== 'function') {\n    throw new Error('Expected mapStateOnServer to either be undefined or a function.');\n  }\n\n  function getDisplayName(WrappedComponent) {\n    return WrappedComponent.displayName || WrappedComponent.name || 'Component';\n  }\n\n  return function wrap(WrappedComponent) {\n    if (typeof WrappedComponent !== 'function') {\n      throw new Error('Expected WrappedComponent to be a React component.');\n    }\n\n    var mountedInstances = [];\n    var state = void 0;\n\n    function emitChange() {\n      state = reducePropsToState(mountedInstances.map(function (instance) {\n        return instance.props;\n      }));\n\n      if (SideEffect.canUseDOM) {\n        handleStateChangeOnClient(state);\n      } else if (mapStateOnServer) {\n        state = mapStateOnServer(state);\n      }\n    }\n\n    var SideEffect = function (_Component) {\n      _inherits(SideEffect, _Component);\n\n      function SideEffect() {\n        _classCallCheck(this, SideEffect);\n\n        return _possibleConstructorReturn(this, _Component.apply(this, arguments));\n      }\n\n      // Try to use displayName of wrapped component\n      SideEffect.peek = function peek() {\n        return state;\n      };\n\n      // Expose canUseDOM so tests can monkeypatch it\n\n\n      SideEffect.rewind = function rewind() {\n        if (SideEffect.canUseDOM) {\n          throw new Error('You may only call rewind() on the server. Call peek() to read the current state.');\n        }\n\n        var recordedState = state;\n        state = undefined;\n        mountedInstances = [];\n        return recordedState;\n      };\n\n      SideEffect.prototype.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n        return !shallowEqual(nextProps, this.props);\n      };\n\n      SideEffect.prototype.componentWillMount = function componentWillMount() {\n        mountedInstances.push(this);\n        emitChange();\n      };\n\n      SideEffect.prototype.componentDidUpdate = function componentDidUpdate() {\n        emitChange();\n      };\n\n      SideEffect.prototype.componentWillUnmount = function componentWillUnmount() {\n        var index = mountedInstances.indexOf(this);\n        mountedInstances.splice(index, 1);\n        emitChange();\n      };\n\n      SideEffect.prototype.render = function render() {\n        return React__default.createElement(WrappedComponent, this.props);\n      };\n\n      return SideEffect;\n    }(React.Component);\n\n    SideEffect.displayName = 'SideEffect(' + getDisplayName(WrappedComponent) + ')';\n    SideEffect.canUseDOM = ExecutionEnvironment.canUseDOM;\n\n\n    return SideEffect;\n  };\n}\n\nmodule.exports = withSideEffect;\n"],"sourceRoot":""}