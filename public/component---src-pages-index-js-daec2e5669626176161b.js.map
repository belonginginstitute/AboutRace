{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./src/components/link.js","webpack:///./src/components/Title.js","webpack:///./src/components/ThemeCard/SubThemeCard.js","webpack:///./src/components/ThemeCard/index.js"],"names":["HomeBackground","styled_components__WEBPACK_IMPORTED_MODULE_2__","b","div","withConfig","displayName","t","default","_ref","data","location","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components__WEBPACK_IMPORTED_MODULE_3__","e","allTaxonomyTermThemes","edges","map","_ref2","key","node","d","query","components_link","Object","styled_components_browser_es","gatsby_browser_entry","Title","p","n","u","s","m","Container","SubThemeCard_Title","Description","ThemeCard_SubThemeCard","render","this","props","title","name","description","value","link","kebabCase_default","react_default","to","dangerouslySetInnerHTML","__html","Component","gradient","ThemeCard_Container","background","backgrounGrayscale","open","ThemeCard_Title","ThemeCard_Description","Chevron","SubThemes","components_ThemeCard","ThemeCard","_this","_React$Component","call","state","_this2","relationships","field_theme_image","localFile","publicURL","childImageSharp","grayscale","src","processed","window","Image","subthemes","onClick","setState"],"mappings":"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","file":"component---src-pages-index-js-daec2e5669626176161b.js","sourcesContent":["import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport kebabCase from 'lodash/kebabCase'\r\nimport styled from 'styled-components'\r\nimport {\r\n  Layout,\r\n  Link,\r\n  Title,\r\n  ThemeCard\r\n} from \"../components\"\r\n\r\nconst HomeBackground = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  z-index: -999999;\r\n  height: 100%;\r\n  width:100%;\r\n`\r\n\r\nexport default ({ data, location }) => (\r\n  <Layout location={location}>\r\n    <div>\r\n      <HomeBackground />\r\n      <Title>Explore themes from the film:</Title>\r\n      {\r\n        data.allTaxonomyTermThemes.edges.map( ({ node }, key) =>\r\n          <ThemeCard key={key} data={node} />\r\n        )\r\n      }\r\n    </div>\r\n  </Layout>\r\n)\r\n\r\n\r\nexport const query = graphql`\r\n  query IndexQuery {\r\n    \r\n    allTaxonomyTermThemes {\r\n      edges {\r\n        node {\r\n          id\r\n          name\r\n          description {\r\n            processed\r\n          }\r\n          relationships {\r\n            field_theme_image {\r\n              localFile {\r\n                publicURL\r\n                childImageSharp {\r\n                  id\r\n                  grayscale: resize(width: 1000, grayscale: true) {\r\n                    src\r\n                  }\r\n                }\r\n              }\r\n            }\r\n            subthemes: backref_field_belongs_to_theme {\r\n              name\r\n              id\r\n              description {\r\n                value\r\n              }\r\n              relationships {\r\n                contentNodes: backref_field_belongs_to_subtheme {\r\n                  __typename\r\n                  ... on node__article {\r\n                    title\r\n                  }\r\n                  ... on node__faq {\r\n                    title\r\n                  }\r\n                  ... on node__clip {\r\n                    title\r\n                  }\r\n                  ... on node__quickfact {\r\n                    title\r\n                  }\r\n                }\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n    trailerClip:nodeClip(id: { eq:\"dda11171-b3eb-44b4-8fa2-06bd24f545b1\" } ) {\r\n      ...ClipFragment\r\n    }\r\n  }\r\n`\r\n","import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nexport default styled(Link)`\n  cursor: pointer;\n  text-decoration: none !important;\n  color:inherit;\n`","import styled from 'styled-components'\n\nexport default styled.div`\n  color: white;\n  text-align: center;\n  font-family: Lato;\n  font-size: 36px;\n  font-weight: 300;\n  letter-spacing: 0.04em;\n  padding-top: 120px;\n  margin-bottom: 75px;\n`;","import React from 'react'\nimport styled from 'styled-components'\nimport kebabCase from 'lodash/kebabCase'\nimport { Link } from '../';\n\nconst Container = styled(Link)`\n  color: white;\n  padding: 1vw;\n  font-family: 'Lato';\n  text-align: center;\n`\n\nconst Title = styled.div`\n  position: relative;\n  font-size: 20pt;\n  line-height: 26px;\n  font-weight: bold;\n  padding-bottom: 1vh;\n\n  &:after {\n    content: \"\\00a0\\00a0\";\n    position: absolute;\n    bottom: -.25vh;\n    left: calc(50% - 50px);\n    width: 100px;\n    height: 1px;\n    border-bottom: 2px solid #D83C46;\n  }\n`\n\nconst Description = styled.div`\n  font-family: 'Tisa Pro';\n  font-size: 16pt;\n  padding-top: 1vh;\n  padding-bottom: 1vh;\n`\n\nclass SubThemeCard extends React.Component {\n  render() {\n    const {data} = this.props;\n    const title = data.name;\n    const description = data.description ? data.description.value : '';\n    const link = `/subthemes/${kebabCase(title)}`\n\n    return (\n      <Container to={link}>\n        <Title>{title}</Title>\n        <Description dangerouslySetInnerHTML={{ __html: description }} />\n      </Container>\n    )\n  }\n}\n\nexport default SubThemeCard\n","import React from 'react'\nimport styled from 'styled-components'\n\nimport SubThemeCard from './SubThemeCard'\n\nconst gradient = `linear-gradient(to bottom, rgba(0,0,0,0) 0%,rgba(1,1,2,0.64) 25%,rgba(1,1,2,1) 100%)`\n\nconst Container = styled.div`\n  border-radius: 45;\n  width: 90%;\n  margin-left: 5%;\n  margin-bottom: 60px;\n  margin-right: 0;\n  display: inline-block;\n  vertical-align: top;\n  position: relative;\n  overflow: hidden;\n  box-shadow: rgba(39, 39, 39, 0.58) 0px 3px 57px 0px;\n  user-select: none;\n  border-radius: 60px;\n  color: white;\n  \n  background-size: cover !important;\n  background-attachment: fixed;\n  transition: all .5s ease;\n\n  &:hover {\n    background-size: 125% auto !important;\n    transition: all .5s ease;\n    background: ${ props => props.background ? `url(${props.background}) center no-repeat` : `none`};\n    background: ${ props => props.background ? `${gradient}, url(${props.background}) center no-repeat` : `none`};\n  }\n\n  background: ${ props => props.background ? `url(${props.background}) center no-repeat` : `none`};\n  background: ${ props => props.backgrounGrayscale ? `url(${props.backgrounGrayscale}) center no-repeat` : `none`};\n  background: ${ props => props.backgrounGrayscale ? `${gradient}, url(${props.backgrounGrayscale}) center no-repeat` : `none`}; \n\n  height: ${props => props.open ? '100vh' : '60vh'};\n`;\n\nconst Title = styled.div`\n  font-family: Lato;\n  font-size: 48px;\n  line-height: 1;\n  text-align: left;\n  letter-spacing: 0.011em;\n  padding-top: 30vh;\n  padding-bottom: 5vh;\n  text-align: center;\n`;\n\nconst Description = styled.div`\n  font-family: Lato;\n  text-align: center;\n  padding-left: 10vw;\n  padding-right: 10vw;\n`;\n\nconst Chevron = styled.div`\n  cursor: pointer;\n  position: absolute;\n  right: 1vw;\n  top: 30vh;\n  font-family: 'Lato';\n  font-size: 100px;\n  color: white;\n\n  transform: ${ props => props.open ? 'rotate(90deg)' : 'none'};\n`\n\nconst SubThemes = styled.div`\n  display: grid;\n  grid-template-columns: 30vw 30vw 30vw;\n  /*grid-template-rows: 40vh 40vh;*/\n`\n\nclass ThemeCard extends React.Component {\n  constructor(props) {\n    super(props);\n  \n    this.state = {\n      open: false\n    };\n  }\n\n  render() {\n    const { open } = this.state;\n    const { data } = this.props\n    const background = data.relationships.field_theme_image && data.relationships.field_theme_image.localFile.publicURL\n    let backgrounGrayscale = '';\n\n    try{\n      backgrounGrayscale = data.relationships.field_theme_image.localFile.childImageSharp.grayscale.src;\n    }catch(e){\n      backgrounGrayscale = background\n    }\n\n    const description = data.description && data.description.processed\n\n    //preloading images for smoother effect\n    if(typeof window !== 'undefined'){\n      let img = new window.Image();\n      img.src = background;\n    }\n    \n    const { subthemes } = data.relationships;\n\n    return (\n      <Container\n        open={open}\n        background={background}\n        backgrounGrayscale={backgrounGrayscale}\n        onClick={() => this.setState({open: !open})}\n      >\n        <Title>{data.name}</Title>\n        <Description dangerouslySetInnerHTML={{ __html: description }} />\n        <Chevron open={open}>〉</Chevron>\n        {\n          <SubThemes>\n            {\n              open && subthemes.map( (data, key) => <SubThemeCard key={key} data={data} />)\n            }\n          </SubThemes>\n        }\n      </Container>\n    )\n  }\n}\n\nexport default ThemeCard\n"],"sourceRoot":""}